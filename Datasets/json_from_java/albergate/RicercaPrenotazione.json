{
    "RicercaPrenotazione": [
        {
            "parentClass": "RicercaPrenotazione",
            "name": "RicercaPrenotazione",
            "sourceCode": "public RicercaPrenotazione(String titolo,int k)\n    {\n        super(titolo);\n        to_call = k;\n        setupPanels();\n        init();\n        pack(); \n    }"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "setupPanels",
            "sourceCode": "void setupPanels()\n        {  \n\t\t\tthis.setFont(ConfigurazioneSistema.font_base);\n            \n            //Creo dei pulsanti e ne disabilito due  \n            Annulla = new Button(\" Fine \");\n            Cerca = new Button(\" Cerca \");\n            Scegli = new Button(\" Scegli \");\n\t\t\tAggiungi = new Button(\" Aggiungi a stanza \");\n            Scegli.setEnabled(false);\n            Aggiungi.setEnabled(false);\n            Cerca.setEnabled(true);\n            //Creo le etichette\n            etichetta1 = new Label (\"Inserire il nominativo della prenotazione\");\n            etichetta1.setFont(ConfigurazioneSistema.font_titolo);\n            label1 = new Label(\"Cognome\");\n            label2 = new Label(\"Nome\");\n\t\t\tlabel3 = new Label(\"Risultato della ricerca\");\n\t\t\tlabel3.setFont(ConfigurazioneSistema.font_titolo);\n\t\t\tlabel4 = new Label(\"Cercare le prenotazioni reletive a:\");\n\t\t\tlabel4.setFont(ConfigurazioneSistema.font_titolo);\n            \n            //Creo i TextField e ne rendo  alcuni non editabili\n            t_nome = new TextField(\"\", 20);\n            t_cognome = new TextField(\"\", 20);\n            \n            //creo il pannello con i filtri per la ricerca\n\t\t\tfiltri = new CheckboxGroup();\n\t\t\tchbx1 = new Checkbox(\" Arrivi odierni\",filtri, true);\n\t\t\tchbx2 = new Checkbox(\" Soggiornanti attuali\",filtri, false);\n\t\t\tchbx3 = new Checkbox(\" Prenotazioni future\", filtri,false);            \n\t\t\t\n            //Creo il pannello in alto per inserimento dei dati del cliente\n            panel1 = new Panel();\n            panel1.setLayout(gridbag);\n            Utils.constrain(panel1, etichetta1, 0, 0, 4, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);\n            Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);\n            Utils.constrain(panel1, t_cognome,1, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label2, 2, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);\n            Utils.constrain(panel1, t_nome, 3, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);            \n            Utils.constrain(panel1, label4, 0, 2, 4, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);\n            Utils.constrain(panel1, chbx1, 0, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);\n\t\t\tif (to_call != 2 && to_call != 1)\n            \tUtils.constrain(panel1, chbx2, 0, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            if (to_call != 3)\n\t            Utils.constrain(panel1, chbx3, 0, 5, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);\n           \n            //Creo il pannello in basso con due pulsanti                  \n            panel2 = new Panel();\n            panel2.setLayout(gridbag);\n            Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel2, Cerca, 1, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             \n            Utils.constrain(panel2, Scegli, 2, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);\n            if (to_call ==3)\n            Utils.constrain(panel2, Aggiungi, 3, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);                                     \n            \n            \n            \n            //Creo il pannello con la lista dei risultati della ricerca\n            lista = new List(10,false);\n            lista.setFont(ConfigurazioneSistema.font_allineato);\n            panel3 = new Panel();\n            panel3.setLayout(gridbag);\n            Utils.constrain(panel3, label3, 0, 0, 2, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);\n            Utils.constrain(panel3, lista, 0, 1, 4, 3, GridBagConstraints.BOTH,\n                        GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);             \n            \n            \n            //Attacco i pannelli al frame\n            this.setLayout(gridbag);\n            Utils.constrain(this, panel1, 0, 1, 4, 6, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(this, panel2, 0, 14, 4, 1, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5); \n        \tUtils.constrain(this, panel3, 0, 15, 4, 1, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); \n        \tpanel3.setVisible(false);\n        \tpack();\n        \n        }"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "init",
            "sourceCode": "public void init()\n    {\n\t\tlista.addActionListener(new ActionListener()\n      \t{\n         \tpublic void actionPerformed(ActionEvent e)\n         \t{\n         \t\tprenotazione = L_visual.getPrenotazione((lista.getSelectedIndexes())[0]+1);\n\t\t\t\tswitch (to_call)\n\t\t\t\t{\n\t\t\t\t\tcase 1: startModifica(prenotazione); break;\n\t\t\t\t\tcase 2: startCancella(prenotazione); break;\t\n\t\t\t\t\tcase 3: \n\t\t\t\t\t\tif (!chbx2.getState())\n\t\t\t\t\t\t\tstartInsSoggiornante(prenotazione);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tstartAggiungi();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4: startVediPrenotazione(prenotazione); break;\n\t\t\t\t}\n\t\t\t}\n      \t});\n     \n\t    Scegli.addActionListener(new ActionListener()\n      \t{\n         \tpublic void actionPerformed(ActionEvent e)\n         \t{\n         \t\tif (!noSelection())\n         \t\t{\n         \t\t\tprenotazione = L_visual.getPrenotazione((lista.getSelectedIndexes())[0]+1);\n\t\t\t\t\tswitch (to_call)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 1: startModifica(prenotazione); break;\n\t\t\t\t\t\tcase 2: startCancella(prenotazione); break;\t\n\t\t\t\t\t\tcase 3: startInsSoggiornante(prenotazione); break;\n\t\t\t\t\t\tcase 4: startVediPrenotazione(prenotazione); break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n        \n\t\tAggiungi.addActionListener(new ActionListener()\n      \t{\n         \tpublic void actionPerformed(ActionEvent e)\n         \t{\n\t\t\t\tstartAggiungi();\n\t\t\t}\n    \t});\n\t\t\n\t\tt_nome.addActionListener(new ActionListener()\n\t\t{\n\t\t\tpublic void actionPerformed(ActionEvent e)\n\t\t\t{\n\t\t\t\tcreaLista(0);\n\t\t\t}\t\t\t      \t\n\t\t});\n\t\n\t\tt_cognome.addActionListener(new ActionListener()\n\t\t{\n\t\t\tpublic void actionPerformed(ActionEvent e)\n\t\t\t{\n\t\t\t\tcreaLista(0);\n\t\t\t}\t\t\t      \t\n\t\t});\t\n\n    \tCerca.addActionListener(new ActionListener()\n      \t{\n         \tpublic void actionPerformed(ActionEvent e)\n         \t{\n\t\t\t\tcreaLista(0);\n\t\t\t}\t\n      \t});\n      \n\t  \tAnnulla.addActionListener(new ActionListener()\n      \t{\n         \tpublic void actionPerformed(ActionEvent e)\n         \t{\n\t\t\t\tdispose();\n\t\t\t\tpadre.setEnabled(true);\n\t\t\t}\n      \t});    \t\n\n    \tchbx1.addItemListener(new ItemListener()   \n      \t{\n         \tpublic void itemStateChanged(ItemEvent e)\n         \t{\n\t\t\t\tif (!first_time)\n         \t\t\tcreaLista(0);\n         \t}\n      \t});\n                      \n      \tchbx2.addItemListener(new ItemListener()   \n      \t{\n         \tpublic void itemStateChanged(ItemEvent e)\n         \t{\n\t\t\t\tif (!first_time)\n         \t\t\tcreaLista(0);\n         \t}\n      \t});\n      \n      \tchbx3.addItemListener(new ItemListener()   \n      \t{\n         \tpublic void itemStateChanged(ItemEvent e)\n         \t{\n\t\t\t\tif (!first_time)\n         \t\t\tcreaLista(0);\t\n        \t}\n      \t});\n    }"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "startAggiungi",
            "sourceCode": "void startAggiungi()\n\t{\n   \t\tif (!noSelection())\n   \t\t{\n   \t\t\tthis.setEnabled(false);\n   \t\t\tprenotazione = L_visual.getPrenotazione((lista.getSelectedIndexes())[0]+1);\n\t\t\tstartAddSoggiornante(prenotazione);\n\t\t}\n\t}"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "startModifica",
            "sourceCode": "void startModifica(Prenotazione pren)\n\t{\n\t\tthis.setEnabled(false);\n\t\tStanza stanza = (Principale.db).readStanza(pren.getNumStanza());\n\t\tModificaPrenotazione modify = new ModificaPrenotazione(pren, stanza, this);\n\t\tmodify.setVisible(true);\n\t\tmodify.padre = this;\n\t\tnotifyRoomBlocked(pren, modify, null);\t\n\t}"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "startCancella",
            "sourceCode": "void startCancella(Prenotazione pren)\n\t{\n\t\tthis.setEnabled(false);\n\t\tStanza stanza = (Principale.db).readStanza(pren.getNumStanza());\n\t\tCancellaPrenotazione cancel = new CancellaPrenotazione(pren, stanza, this);\n\t\tcancel.setVisible(true);\n\t\tcancel.padre = this;\t\n\t}"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "startVediPrenotazione",
            "sourceCode": "void startVediPrenotazione(Prenotazione pren)\n\t{\n\t\tthis.setEnabled(false);\n\t\tStanza stanza = (Principale.db).readStanza(pren.getNumStanza());\n\t\tVediPrenotazione visual = new VediPrenotazione(pren, stanza, this);\n\t\tvisual.setVisible(true);\n\t\tvisual.padre = this;\t\n\t\tnotifyRoomBlocked(pren, null, visual);\t\n\t}"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "startInsSoggiornante",
            "sourceCode": "void startInsSoggiornante(Prenotazione pren)\n\t{\n\t\tDisponibilita disp;\n\t\tFrame msg;\n\t\t\n\t\tdisp = (Principale.db).readDisponibilita(pren.getNumStanza());\n\t\tif\t(disp == null)\n\t\t\tmsg =  new MessageDialog(this,\" Inconsistenze sul database! \");\n\t\telse\n\t\t{\n\t\t\tif ( disp.getStatusGiorno(DateUtils.dataTogiorni(pren.getInizioSogg()),Const.ANNO_CORRENTE) == Flag.BLOCCATA )\n\t\t\t\tmsg = new AvvisoDialog(this,\" La stanza \"+pren.getNumStanza()+\" non e' assegnata a tale prenotazione. Modificare la prenotazione. \");\n\t\t\telse\n\t\t\t\tfiglio = new InserisciSoggiornante(this, pren);\n\t\t}\n\t}"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "notifyRoomBlocked",
            "sourceCode": "void notifyRoomBlocked(Prenotazione pren, ModificaPrenotazione father1, VediPrenotazione father2)\n\t{\n\t\tchar flag; \n\t\tFrame msg;\n\t\tListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();\n\t\tif (elenco_disp == null)\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Problemi con il database nella lettura delle disponibilita'! \");\n\t\t\treturn;\n\t\t}\n\t\tDisponibilita disp = Utils.getDispOfRoom(elenco_disp, pren.getNumStanza(), false);\n\t\tCostanti cost = new Costanti();\n\t\tif ( (((pren.getInizioSogg()).getYear())+1900 ) == cost.getAnnoCorr())\n\t\t\tflag = Const.ANNO_CORRENTE;\n\t\telse\n\t\t\tflag = Const.ANNO_PROSSIMO;\t\n\t\tif (father2 == null)\n\t\t\tif (disp.getStatusGiorno(DateUtils.dataTogiorni(pren.getInizioSogg()), flag) == Flag.BLOCCATA)\n    \t\t\tmsg = new AvvisoDialog(father1,\" ATTENZIONE: per questa prenotazione non e' ancora stata assegnata la stanza!!\");\n    \t\telse\n\t\t\t\t(father1.Assegna).setEnabled(false);\n\t\telse\n\t\t\tif (disp.getStatusGiorno(DateUtils.dataTogiorni(pren.getInizioSogg()), flag) == Flag.BLOCCATA)\n    \t\t\tmsg = new AvvisoDialog(father2,\" ATTENZIONE: per questa prenotazione non e' ancora stata assegnata la stanza!!\");\n    \t\telse\n\t\t\t\t(father2.Assegna).setEnabled(false);\t\t\t\n\t}"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "creaLista",
            "sourceCode": "public void creaLista(int back)\n\t{\n\t\tFrame msg;\n\t\tPrenotazione p;\t\t\n\t\tDate today = new Date();\n\t\tL_visual = new ListaPrenotazioni();\n\t\tL = (Principale.db).foundPrenotazioni(t_cognome.getText(), t_nome.getText());\n\t\tif (L != null)\n\t\t{\n\t\t\tif (!L.isEmpty())\n\t\t\t{\n\t\t\t\tif (lista.getItemCount() > 0)\n\t\t\t\t\tlista.removeAll();\n\t\t\t\tfor(int i = 1; i <= L.length(); i++)\n\t\t\t\t{\n\t\t\t\t\tp = L.getPrenotazione(i); \n\t\t\t\t\tListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(p.getIdPrenotazione());\n\t\t\t\t\tif (chbx3.getState())\t\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( Utils.data1MaggioreData2( p.getInizioSogg(), today ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlista.addItem(p.toString());\n\t\t\t\t\t\t\tL_visual.addPrenotazione(p);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (chbx1.getState())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (L_sogg.isEmpty())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (((p.getInizioSogg()).getDate() == today.getDate())\n\t\t\t\t\t\t\t\t\t&& ((p.getInizioSogg()).getMonth() == today.getMonth())\n\t\t\t\t\t\t\t\t\t&& ((p.getInizioSogg()).getYear() == today.getYear()) )\n\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\tlista.addItem(p.toString());\t\t\t\n\t\t\t\t\t\t\t\t\tL_visual.addPrenotazione(p);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\tif ( !( Utils.data1MaggioreData2( p.getInizioSogg(), today ) ) && \n\t\t\t\t\t\t\t\t!( Utils.data1MinoreData2( p.getFineSogg(), today) ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//controllo che sia un soggiornante gia registrato\n\t\t\t\t\t\t\t\tif (!L_sogg.isEmpty())\n\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\tlista.addItem(p.toString());\t\t\t\t\n\t\t\t\t\t\t\t\t\tL_visual.addPrenotazione(p);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\t\n\t\t\t\tif (lista.getItemCount() == 0)\n\t\t\t\t{\n\t\t\t\t\tif (back == 0)\n\t\t\t\t\t\tmsg = new AvvisoDialog(this, \" Nessuna prenotazione trovata! \");\n\t\t\t\t\tScegli.setEnabled(false);\n\t\t\t\t\tAggiungi.setEnabled(false);\n\t\t\t\t\tpanel3.setVisible(false);\n\t\t\t\t\tpack();\n\t\t\t\t\tif (to_call == 3)\n\t\t\t\t\t\tAggiungi.setEnabled(false);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (chbx1.getState())\n\t\t\t\t\t{\n\t\t\t\t\t\tAggiungi.setEnabled(false);\n\t\t       \t\t\tScegli.setEnabled(true);\n\t\t\t\t\t}\n\t\t\t\t\tif (chbx2.getState())\n\t\t\t\t\t{\n\t\t       \t\t\tAggiungi.setEnabled(true);\n\t\t\t\t\t\tif (to_call == 3)\n\t\t       \t\t\t\tScegli.setEnabled(false);\n    \t\t\t   \t\telse\n\t\t\t       \t\t\tScegli.setEnabled(true);\n\t\t\t\t\t}\n\t\t\t\t\tif (chbx3.getState())\n\t\t\t\t\t{\n\t\t\t\t\t\tScegli.setEnabled(true);\n\t\t\t\t\t}\n\t\t\t\t\tpanel3.setVisible(true);\n\t\t\t\t\tpack();\n\t\t\t\t}\t\t\t\n\t\t\t\tif (first_time)\n\t\t\t\t\tfirst_time = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (back == 0)\n\t\t\t\t\tmsg = new AvvisoDialog(this, \" Prenotazione non trovata! \");\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (back == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (lista.getItemCount() > 0)\n\t\t\t\t\t\t\tlista.removeAll();\n\t\t\t\t\t\tpanel3.setVisible(false);\n\t\t\t\t\t\tpack();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tmsg = new MessageDialog(this, \" Problemi con il database! \");\n\t}"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "noSelection",
            "sourceCode": "boolean noSelection()\n\t{\n\t\tFrame msg;\n\t\tif (lista.getSelectedIndex() == -1)\n\t\t{\n\t\t\tmsg = new AvvisoDialog(this,\" Selezionare una prenotazione dalla lista e ripremere il tasto\");\n\t\t\treturn true;\n\t\t}\t\n\t\treturn false;\n\t}"
        },
        {
            "parentClass": "RicercaPrenotazione",
            "name": "startAddSoggiornante",
            "sourceCode": "void startAddSoggiornante(Prenotazione pren)\n\t{\n\t\tListaSoggiornanti L_sogg = (Principale.db).foundSoggiornanti(pren.getIdPrenotazione());\n\t\tif (L_sogg != null)\n\t\t\tif (L_sogg.length() > 0)\n\t\t\t{\t\n\t\t\t\tSoggiornante sogg = L_sogg.getSoggiornante(1);\n\t\t\t\tStanza room = (Principale.db).readStanza(sogg.getNumStanza());\n\t\t\t\tif ( (room.getPostiLetto() > L_sogg.length()) ||\n\t       \t\t\t( (room.getPostiLetto() == L_sogg.length()) && (room.getDispLettoAgg() == Const.SI) ) )\n\t\t \t\t\tfiglio = new AggiungiSoggiornante(this, pren, room, L_sogg.length());\n\t\t\t\telse\n\t\t\t\t\tfiglio = new AvvisoDialog(this,\" Nessun posto disponibile nella stanza n. \"+room.getNumStanza());\n\t\t\t}\n\t\t\telse\n\t\t\t\tfiglio = new AvvisoDialog(this,\" La prenotazione non e' adempiuta. Premere 'Scegli' per gestire l'arrivo clienti\");\n\t\telse\n\t\t\tfiglio = new MessageDialog(this,\" Problemi con il database!\");\n\t}"
        }
    ]
}