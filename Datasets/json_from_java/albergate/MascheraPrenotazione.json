{
    "MascheraPrenotazione": [
        {
            "parentClass": "MascheraPrenotazione",
            "name": "MascheraPrenotazione",
            "sourceCode": "public MascheraPrenotazione(Stanza s, String data_i, String data_f, String title, String caption, int c, char pens)\n    {\n        super(title);\n        caller = c;\n        stanza = s;\n        setupPanels(data_i, data_f, caption, pens);\n        inizializza();\n        pack(); \n    }"
        },
        {
            "parentClass": "MascheraPrenotazione",
            "name": "setupPanels",
            "sourceCode": "void setupPanels(String data_i, String data_f, String caption, char pens)\n        {  \n\t\t\tthis.setFont(ConfigurazioneSistema.font_base);\n            \n            //Creo dei pulsanti e ne disabilito due  \n            Annulla = new Button(\" Fine \");\n            Azione = new Button(caption);\n            Assegna = new Button(\" Assegna Stanza \");\n            Cancella = new Button(\" Cancella prenotazione \");\n\n            //Creo le etichette\n            etichetta1 = new Label (\"Inserimento dei dati della prenotazione:\");\n            etichetta1.setFont(ConfigurazioneSistema.font_titolo);\n            label1 = new Label(\"Numero stanza\");\n            label2 = new Label(\"Cognome\");\n            label3 = new Label(\"Nome\");\n            label4 = new Label(\"Numero telefonico\");\n            label5 = new Label(\"Numero persone\");\n            label6 = new Label(\"Data inizio\");\n            label7 = new Label(\"Data fine\");\n            label8 = new Label(\"Caparra versata \"+(Principale.config).getValuta()+\".\");\n            label9 = new Label(\"Richieste particolari\");\n            label11 = new Label(\"Nome Agenzia\");\n            label10 = new Label(\"Tipo di pensionamento:\");\n            label10.setFont(ConfigurazioneSistema.font_titolo);\n\t\t\tlabel12 = new Label(\"Risultato della ricerca\");\n\t\t\tlabel12.setFont(ConfigurazioneSistema.font_titolo);\n\t\t\tlabel13 = new Label(\"Data di prenotazione\");\n            \n            //Creo i TextField e ne rendo  alcuni non editabili\n            testo=new TextField[11];\n            testo[0] = new TextField(\"\", 4);\n            testo[1] = new TextField(\"\", 20);\n            testo[2] = new TextField(\"\", 20);\n            testo[3] = new TextField(\"\", 10);\n            testo[4] = new TextField(\"\", 12);\n            testo[5] = new TextField(\"\", 12);\n            testo[6] = new TextField(\"\", 10);\n            testo[7] = new TextField(\"\", 20);\n            testo[8] = new TextField(\"\", 20);\n            testo[8].setEditable(false);\n            testo[9] = new TextField(\"\", 12);\n            testo[9].setEditable(false);\n            testo[10] = new TextField(\"\",3); \n\t\t\t\n            //Creo un Checkbox ad esclusione \n            pensione = new CheckboxGroup();\n            checkboxes = new Checkbox[4];\n            checkboxes[0] = new Checkbox(\" Solo pernottamento\", pensione, false);\n            checkboxes[1] = new Checkbox(\" Prima colazione\", pensione, false);\n            checkboxes[2] = new Checkbox(\" Mezza pensione\", pensione, false);\n            checkboxes[3] = new Checkbox(\" Pensione completa\", pensione, false);\n\t\t    switch (pens)\n\t\t    {\n\t\t  \t\tcase Flag.SOLO_PERNOTTAMENTO: \n\t\t  \t\t\tcheckboxes[0] = new Checkbox(\" Solo pernottamento\", pensione, true);\n\t\t  \t\t\tbreak;\n\t\t\t  \tcase Flag.SOLO_COLAZIONE: \n\t\t\t\t\tcheckboxes[1] = new Checkbox(\" Prima colazione\", pensione, true);\n\t  \t\t\t\tbreak;\n\t\t  \t\tcase Flag.MEZZA_PENSIONE:\n\t\t\t\t\tcheckboxes[2] = new Checkbox(\" Mezza pensione\", pensione, true);\n\t\t\t \t\tbreak;\n\t\t  \t\tcase Flag.PENSIONE_COMPLETA: \n\t\t\t\t\tcheckboxes[3] = new Checkbox(\" Pensione completa\", pensione, true);\n\t\t  \t\t\tbreak;\n\t\t    }\n            \n\n            //Creo due Checkbox a se' stanti \n            myCheckbox = new Checkbox(\" Letto aggiuntivo\", null, false);\n\t\t\tif (stanza != null)\n\t            if (stanza.getDispLettoAgg() == Const.NO)\n    \t        \tmyCheckbox.setEnabled(false);\n            \n            myCheckbox1 = new Checkbox(\" Prenotazione tramite agenzia\", null, false);\n\t\t\tmyCheckbox1.setEnabled(false);\n\n            //Creo un Choice \n            if (caller == 1)\n            {\n            \tmychoice = new Choice();\n\t\t\t\tif (stanza != null)\n\t            \tfor (int i=1; i<= stanza.getPostiLetto(); i++)\n    \t\t        \tmychoice.addItem(\"\"+i);\n    \t\t\telse\n    \t\t\t\tmychoice.addItem(\"1\");\t        \n            }\n            //Creo il pannello in alto per inserimento dei dati del cliente\n            panel1 = new Panel();\n            panel1.setLayout(gridbag);\n            Utils.constrain(panel1, etichetta1, 0, 0, 4, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);\n            Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[0], 1, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);\n            Utils.constrain(panel1, label13, 2, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[9], 3, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);\n            Utils.constrain(panel1, label2, 0, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[1], 1, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.5, 5, 5, 5, 5);\n            Utils.constrain(panel1, label3, 2, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[2], 3, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label4, 0, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[3], 1, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label5, 2, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            if (caller == 1)\n            \tUtils.constrain(panel1, mychoice, 3, 3, 1, 1, GridBagConstraints.NONE,\n                        \tGridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            else\n            \tUtils.constrain(panel1, testo[10], 3, 3, 1, 1, GridBagConstraints.NONE,\n                        \tGridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label6, 0, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[4], 1, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label7, 2, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[5], 3, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label8, 0, 5, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[6], 1, 5, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label9, 0, 6, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[7], 1, 6, 4, 1, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, myCheckbox, 0, 7, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, myCheckbox1, 1, 7, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label11, 2, 7, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, testo[8], 3, 7, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, label10, 0, 8, 2, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, checkboxes[0], 0, 9, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, checkboxes[1], 0, 10, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, checkboxes[2], 0, 11, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel1, checkboxes[3], 0, 12, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n           \n            //Creo il pannello in basso con due pulsanti                  \n            panel2 = new Panel();\n            panel2.setLayout(gridbag);\n            Utils.constrain(panel2, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(panel2, Azione, 1, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             \n            if (caller == 2 )\n            \tUtils.constrain(panel2, Assegna, 2, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             \n            if (caller == 5 )\n            \tUtils.constrain(panel2, Cancella, 2, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.CENTER, 0.0, 0.0, 5, 5, 5, 5);             \n            \n            \t\n            //Creo il pannello con la lista dei risultati della ricerca\n            lista = new List(7,false);\n            lista.setFont(ConfigurazioneSistema.font_allineato);\n            \n            panel3 = new Panel();\n            panel3.setLayout(gridbag);\n            Utils.constrain(panel3, label12, 0, 0, 2, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);\n            Utils.constrain(panel3, lista, 0, 1, 4, 3, GridBagConstraints.BOTH,\n                        GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);             \n            \n            \n            //Attacco i pannelli al frame\n            this.setLayout(gridbag);\n            Utils.constrain(this, panel1, 0, 1, 4, 13, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);\n            Utils.constrain(this, panel2, 0, 14, 4, 1, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); \n        \tUtils.constrain(this, panel3, 0, 15, 4, 1, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5); \n        \tpanel3.setVisible(false);\n        \tpack();\n        \n        }"
        },
        {
            "parentClass": "MascheraPrenotazione",
            "name": "inizializza",
            "sourceCode": "public void inizializza()\n    {\n        Annulla.addActionListener(new ActionListener()\n        {\n            public void actionPerformed(ActionEvent e)\n            {\n                dispose();\n                padre.setEnabled(true);   \n            }       \n        });\n    }"
        },
        {
            "parentClass": "MascheraPrenotazione",
            "name": "readDatiPren",
            "sourceCode": "public Prenotazione readDatiPren()\n\t{\n\t\tPrenotazione pren = new Prenotazione();\n\t\tpren.setNumStanza(testo[0].getText());\n\t\tpren.setCognome(testo[1].getText());\n\t\tpren.setNome(testo[2].getText());\n\t\tpren.setNumTel(testo[3].getText());\n\t\tif (caller == 1)\n\t\t\tpren.setNumPers(Integer.parseInt(mychoice.getSelectedItem())); //Conversione String -> Int\n\t\telse\n\t\t\tpren.setNumPers(Integer.parseInt(testo[10].getText()));\n\t\tpren.setInizioSogg(DateUtils.convertDate(testo[4].getText()));\n\t\tpren.setFineSogg(DateUtils.convertDate(testo[5].getText()));\n\t\t\n\t\tif  ( (testo[6].getText().equals(\"\")) )\n\t\t\tpren.setCaparra(0);\n\t\telse\n\t\t\tpren.setCaparra((Float.valueOf(testo[6].getText())).floatValue());  // Conversione String -> Float\n\t\tpren.setRichParticolari(testo[7].getText());\n\t\tif (myCheckbox.getState() == true)\n\t\t\tpren.setRichLettoAgg(Const.SI);\n\t\tif (myCheckbox1.getState() == true)\n\t\t{\n\t\t\tpren.setTramiteAgenzia(Const.SI);\n\t\t\tpren.setNomeAgenzia(testo[8].getText());\n\t\t}\t\n\t\t\n\t\tif (checkboxes[0].getState() == true)\n\t\t\tpren.setPensionamento(Flag.SOLO_PERNOTTAMENTO);\n\t\telse\t\n\t\t\tif (checkboxes[1].getState() == true)\n\t\t\t\tpren.setPensionamento(Flag.SOLO_COLAZIONE);\n\t\t\telse\n\t\t\t\tif (checkboxes[2].getState() == true)\n\t\t\t\t\tpren.setPensionamento(Flag.MEZZA_PENSIONE);\n\t\t\t\telse\n\t\t\t\t\tpren.setPensionamento(Flag.PENSIONE_COMPLETA);\t\t \t\t \n\t\t \n\t\tpren.setIdPrenotazione(Principale.config.getIdPrenotazione());\n\t\treturn pren;\n\t}"
        },
        {
            "parentClass": "MascheraPrenotazione",
            "name": "writeDatiPren",
            "sourceCode": "public void writeDatiPren(Prenotazione pren)\n\t{\n\t\tmyCheckbox.setState(false);\n\t\tmyCheckbox1.setState(false);\n\t\ttesto[8].setText(\"\");\n\t\ttesto[0].setText(pren.getNumStanza());\n\t\ttesto[1].setText(pren.getCognome());\n\t\ttesto[2].setText(pren.getNome());\n\t\ttesto[3].setText(pren.getNumTel());\n\t\t\n\t\ttesto[4].setText(DateUtils.giveStringOfDate(pren.getInizioSogg()));\n\t\ttesto[5].setText(DateUtils.giveStringOfDate(pren.getFineSogg()));\n\t\t\n\t\ttesto[6].setText(\"\"+pren.getCaparra());\n\t\ttesto[7].setText(pren.getRichParticolari());\n\t\ttesto[8].setText(pren.getNomeAgenzia());\n\t\ttesto[9].setText(DateUtils.giveStringOfDate(pren.getDataPren()));\n\t\tif (caller != 1)\n\t\t{\n\t\t\ttesto[10].setText(\"\"+pren.getNumPers());\n\t\t}\n\t\tif (pren.getTramiteAgenzia() == Const.SI)\n\t\t{\t\n\t\t\tmyCheckbox1.setState(true);\n\t\t\ttesto[8].setText(pren.getNomeAgenzia());\n\t\t}\n\t}"
        },
        {
            "parentClass": "MascheraPrenotazione",
            "name": "errori",
            "sourceCode": "protected boolean errori()\n\t{\n\t\tboolean numeri_corretti;\n\t\tFrame msg;\n\t\tif (caller != 1)\n\t\t{\n\t\t\tif (Utils.isIntPos(testo[10].getText()))\n\t\t\t{\n\t\t\t\tint num = Integer.parseInt(testo[10].getText());\n\t\t\t\tif ( (num > stanza.getPostiLetto()) || (num <= 0) )\n\t\t\t\t{\t\n\t\t\t\t\tmsg = new MessageDialog(this,\" La stanza non puo' contenere \"+num+\" persone! \"); \n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmsg = new MessageDialog(this,\" Inserire correttamente il numero di persone \"); \n\t\t\t\treturn true; \n\t\t\t}\t\t\t\n\t\t}\t\n\t\tif (!((testo[0].getText()).length() <= 4))\n\t\t{\n\t\t\tmsg = new MessageDialog(this,\" Il numero di stanza deve avere al piu' 4 caratteri! \"); \n\t\t\treturn true;\n\t\t}\n\t\tif (!((testo[1].getText()).length() <= 20))\n\t\t{\n\t\t\tmsg = new MessageDialog(this,\" Il cognome deve avere al piu' 20 caratteri! \"); \n\t\t\treturn true;\n\t\t}\n\t\tif (!((testo[2].getText()).length() <= 20))\n\t\t{\n\t\t\tmsg = new MessageDialog(this,\" Il nome deve avere al piu' 20 caratteri! \"); \n\t\t\treturn true;\n\t\t}\n\t\tif (!((testo[3].getText()).length() <= 16))\n\t\t{\n\t\t\tmsg = new MessageDialog(this,\" Il numero di telefono deve avere al piu' 16 caratteri! \"); \n\t\t\treturn true;\n\t\t}\n\t\tif ((testo[1].getText()).equals(\"\")) \n\t\t{\n\t\t\tmsg = new MessageDialog(this,\" Manca il cognome! \"); \n\t\t\treturn true;\n\t\t}\n\t\tif ((testo[2].getText()).equals(\"\")) \n\t\t{\n\t\t\tmsg = new MessageDialog(this,\" Manca il nome! \"); \n\t\t\treturn true;\n\t\t}\n\t\tif ((testo[3].getText()).equals(\"\"))\n\t\t{\n\t\t\tmsg = new MessageDialog(this,\" Manca il numero di telefono! \"); \n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}"
        },
        {
            "parentClass": "MascheraPrenotazione",
            "name": "cleanFields",
            "sourceCode": "public void cleanFields()\n\t{\n\t\ttesto[0].setText(\"\");\n        testo[1].setText(\"\");\n        testo[2].setText(\"\");\n        testo[3].setText(\"\");\n        testo[4].setText(\"\");\n        testo[5].setText(\"\");\n        testo[6].setText(\"\");\n        testo[7].setText(\"\");\n        testo[8].setText(\"\");\t\n\t}"
        },
        {
            "parentClass": "MascheraPrenotazione",
            "name": "creaLista",
            "sourceCode": "void creaLista()\n\t{\n\t\tFrame msg;\n\t\tPrenotazione p;\t\t\n\t\t\n\t\tL = (Principale.db).foundPrenotazioni(testo[1].getText(),testo[2].getText());\n\t\tif (L != null)\n\t\t{\n\t\t\tif (!L.isEmpty())\n\t\t\t{\n\t\t\t\tif (lista.getItemCount() > 0)\n\t\t\t\t\tlista.removeAll();\n\t\t\t\tpanel3.setVisible(true);\n\t\t\t\tpack();\n\t\t\t\tfor(int i = 1; i<=L.length(); i++)\n\t\t\t\t\tlista.addItem(L.getPrenotazione(i).toString());\n\t\t\t}\n\t\t\telse\n\t\t\t\tmsg = new AvvisoDialog(this, \"Prenotazione non trovata!\");\n\t\t}\n\t\telse\n\t\t\tmsg = new MessageDialog(this, \"Problemi con il DataBase\");\n\t}"
        },
        {
            "parentClass": "MascheraPrenotazione",
            "name": "aggiornaDisp",
            "sourceCode": "void aggiornaDisp(Prenotazione pren, char tipo)\n\t{\n\t\tDisponibilita disp_da_cambiare = new Disponibilita();\n\t\tListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();\n\t\tif (elenco_disp == null)\n\t\t{\n\t\t\tFrame msg = new MessageDialog(this, \" Problemi con il database nella lettura delle disponibilita'! \");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tdisp_da_cambiare = Utils.getDispOfRoom(elenco_disp, pren.getNumStanza(),true);\n\t\tif (tipo == Flag.DISPONIBILE) //cancellazione della prenotazione\n\t\t{\t\n\t\t\tdisp_da_cambiare.setDisponibilita(pren.getInizioSogg(), pren.getFineSogg(), tipo, Flag.ASSEGNATA);\n\t\t\tdisp_da_cambiare.setDisponibilita(pren.getInizioSogg(), pren.getFineSogg(), tipo, Flag.BLOCCATA);\n\t\t}\n\t\telse\n\t\t\t{\n\t\t\t\tdisp_da_cambiare.setDisponibilita(pren.getInizioSogg(), pren.getFineSogg(), tipo, Flag.DISPONIBILE);\n\t\t\t\tdisp_da_cambiare.setDisponibilita(pren.getInizioSogg(), pren.getFineSogg(), tipo, Flag.COMMISSIONATA);\n\t\t\t}\t\t\t\n\t\t(Principale.db).changeDisponibilita( disp_da_cambiare.getNumStanza(), \n\t\t\t\t\t\t\t\t\t\t\tdisp_da_cambiare.getDispAnnoCorr(),\n\t\t\t\t\t\t\t\t\t\t\tdisp_da_cambiare.getDispAnnoProx() );\n\t}"
        }
    ]
}