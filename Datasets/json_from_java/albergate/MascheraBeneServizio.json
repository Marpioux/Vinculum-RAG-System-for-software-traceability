{
    "MascheraBeneServizio": [
        {
            "parentClass": "MascheraBeneServizio",
            "name": "MascheraBeneServizio",
            "sourceCode": "public MascheraBeneServizio(String title)\n\t{\n\t\tsuper(title);\n\t\tsetup();\n\t\tinit();\n\t\tsetSize(350,600);\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "setup",
            "sourceCode": "void setup()\n\t{\n\t\tthis.setFont(ConfigurazioneSistema.font_base);\n\t\telenco.setFont(ConfigurazioneSistema.font_allineato);\n\t\t//Creo i pannelli\n\t\tpanel = new Panel[13];\n\t\tfor(int i=0;i<10;++i)\n\t\t{\n\t\t\tpanel[i] = new Panel();\n\t\t\tpanel[i].setLayout(grid1);\n\t\t\tpanel[i].setVisible(false);\n\t\t}\n\t\tfor(int i=10; i<13; ++i)\n\t\t{\n\t\t\tpanel[i] = new Panel();\n\t\t\tpanel[i].setVisible(false);\n\t\t}\n\n\t\t//Creo il pannello in alto\n\t\tlabel = new Label(\"Tipi\");\n\t\tlabel.setFont(ConfigurazioneSistema.font_titolo);\n\t\ttipi = new CheckboxGroup();\n\t\tprima_scelta = new Checkbox[5]; // mi serve piu' lungo per l'aggiungi\n\t\tprima_scelta[0] = new Checkbox(\"BAR\", tipi, false);\n\t\tprima_scelta[1] = new Checkbox(\"RISTORANTE\", tipi, false);\n\t\tprima_scelta[2] = new Checkbox(\"SERVIZI\", tipi, false);\n\t\tprima_scelta[3] = new Checkbox(\"SUPPLEMENTI\", tipi, false);\n\t\tprima_scelta[4] = new Checkbox(\"RIDUZIONI\", tipi, false);\n\t\tpanel[0].add(label);\n\t\tpanel[0].add(prima_scelta[0]);\n\t\tpanel[0].add(prima_scelta[1]);\n\t\tpanel[0].add(prima_scelta[2]);\n\t\tpanel[0].setVisible(true);\n\n\t\t//Attacco il pannello in alto al frame\n\t\tthis.setLayout(grid);\n\t\tthis.add(panel[0]);\n\n\t\t//Creo il pannello del bar\n\t\tlabel1 = new Label(\"Bar\");\n\t\tlabel1.setFont(ConfigurazioneSistema.font_titolo);\n\t\tbar = new CheckboxGroup();\n\t\tscelta_bar = new Checkbox[2];\n\t\tscelta_bar[0] = new Checkbox(\"Bevande\", bar, false);\n\t\tscelta_bar[1] = new Checkbox(\"Cibi\", bar, false);\n\t\tpanel[1].add(label1);\n\t\tpanel[1].add(scelta_bar[0]);\n\t\tpanel[1].add(scelta_bar[1]);\n\n\t\t//Creo il pannello dal ristorante\n\t\tlabel2 = new Label(\"Ristorante\");\n\t\tlabel2.setFont(ConfigurazioneSistema.font_titolo);\n\t\tristorante = new CheckboxGroup();\n\t\tscelta_piatto = new Checkbox[6];\n\t\tscelta_piatto[0] = new Checkbox(\"Antipasti\", ristorante, false);\n\t\tscelta_piatto[1] = new Checkbox(\"Primi\", ristorante, false);\n\t\tscelta_piatto[2] = new Checkbox(\"Secondi\", ristorante, false);\n\t\tscelta_piatto[3] = new Checkbox(\"Contorni\", ristorante, false);\n\t\tscelta_piatto[4] = new Checkbox(\"Dessert\", ristorante, false);\n\t\tscelta_piatto[5] = new Checkbox(\"Frutta\", ristorante, false);\n\t\tpanel[2].add(label2);\n\t\tpanel[2].add(scelta_piatto[0]);\n\t\tpanel[2].add(scelta_piatto[1]);\n\t\tpanel[2].add(scelta_piatto[2]);\n\t\tpanel[2].add(scelta_piatto[3]);\n\t\tpanel[2].add(scelta_piatto[4]);\n\t\tpanel[2].add(scelta_piatto[5]);\n\t\tlabel3 = new Label(\"Servizi\");\n\t\tlabel3.setFont(ConfigurazioneSistema.font_titolo);\n\t\tservizi = new CheckboxGroup();\n\t\tscelta_servizio = new Checkbox[2];\n\t\tscelta_servizio[0] = new Checkbox(\"Ricreativi\", servizi, false);\n\t\tscelta_servizio[1] = new Checkbox(\"Altro\", servizi, false);\n\t\tpanel[3].add(label3);\n\t\tpanel[3].add(scelta_servizio[0]);\n\t\tpanel[3].add(scelta_servizio[1]);\n\t\tlabel4 = new Label(\"Bevande\");\n\t\tlabel4.setFont(ConfigurazioneSistema.font_titolo);\n\t\tbevande = new CheckboxGroup();\n\t\tscelta_bevanda = new Checkbox[3];\n\t\tscelta_bevanda[0] = new Checkbox(\"Caffetteria\", bevande, false);\n\t\tscelta_bevanda[1] = new Checkbox(\"Analcolici\", bevande, false);\n\t\tscelta_bevanda[2] = new Checkbox(\"Alcolici\", bevande, false);\n\t\tpanel[4].add(label4);\n\t\tpanel[4].add(scelta_bevanda[0]);\n\t\tpanel[4].add(scelta_bevanda[1]);\n\t\tpanel[4].add(scelta_bevanda[2]);\n\n\t\t//Creo il pannello dei cibi\n\t\tlabel5 = new Label(\"Cibi\");\n\t\tlabel5.setFont(ConfigurazioneSistema.font_titolo);\n\t\tcibi = new CheckboxGroup();\n\t\tscelta_cibo = new Checkbox[3];\n\t\tscelta_cibo[0] = new Checkbox(\"Dolci\", cibi, false);\n\t\tscelta_cibo[1]= new Checkbox(\"Salati\", cibi, false); \n\t\tpanel[5].add(label5);\n\t\tpanel[5].add(scelta_cibo[0]);\n\t\tpanel[5].add(scelta_cibo[1]);\n\n\t\t//Creo il pannello degli antipasti\n\t\tlabel6 = new Label(\"Antipasti\");\n\t\tlabel6.setFont(ConfigurazioneSistema.font_titolo);\n\t\tantipasti = new CheckboxGroup();\n\t\tscelta_antipasto = new Checkbox[3];\n\t\tscelta_antipasto[0] = new Checkbox(\"Freddi\", antipasti, false);\n\t\tscelta_antipasto[1] = new Checkbox(\"Caldi\", antipasti, false); \n\t\tpanel[6].add(label6);\n\t\tpanel[6].add(scelta_antipasto[0]);\n\t\tpanel[6].add(scelta_antipasto[1]);\n\n\t\t//Creo il pannello dei primi\n\t\tlabel7=new Label(\"Primi\");\n\t\tlabel7.setFont(ConfigurazioneSistema.font_titolo);\n\t\tprimi=new CheckboxGroup();\n\t\tscelta_primo=new Checkbox[3];\n\t\tscelta_primo[0]=new Checkbox(\"Solidi\",primi,false);\n\t\tscelta_primo[1]=new Checkbox(\"Liquidi\",primi,false); \n\t\tpanel[7].add(label7);\n\t\tpanel[7].add(scelta_primo[0]);\n\t\tpanel[7].add(scelta_primo[1]);\n\n\t\t//Creo il pannello dei secondi\n\t\tlabel8=new Label(\"Secondi\");\n\t\tlabel8.setFont(ConfigurazioneSistema.font_titolo);\n\t\tsecondi=new CheckboxGroup();\n\t\tscelta_secondo=new Checkbox[3];\n\t\tscelta_secondo[0]=new Checkbox(\"Carne\",secondi,false);\n\t\tscelta_secondo[1]=new Checkbox(\"Pesce\",secondi,false); \n\t\tpanel[8].add(label8);\n\t\tpanel[8].add(scelta_secondo[0]);\n\t\tpanel[8].add(scelta_secondo[1]);\n\n\t\t//Creo il pannello dei contorni\n\t\tlabel9 = new Label(\"Contorni\");\n\t\tlabel9.setFont(ConfigurazioneSistema.font_titolo);\n\t\tcontorni = new CheckboxGroup();\n\t\tscelta_contorno = new Checkbox[3];\n\t\tscelta_contorno[0] = new Checkbox(\"Verdura cotta\", contorni, false);\n\t\tscelta_contorno[1] = new Checkbox(\"Verdura cruda\", contorni, false); \n\t\tscelta_contorno[2] = new Checkbox(\"Formaggio\", contorni, false);\n\t\tpanel[9].add(label9);\n\t\tpanel[9].add(scelta_contorno[0]);\n\t\tpanel[9].add(scelta_contorno[1]);\n\t\tpanel[9].add(scelta_contorno[2]);\n\n\t\t//Creo il pannello BAR-Bevande\n\t\tpanel[10].setLayout(gridbag);\n\t\tlabel12 = new Label(\"Nome del bene\");\n\t\tlabel13 = new Label(\"Prezzo del bene \"+(Principale.config).getValuta()+\".\");\n\t\ttesto3 = new TextField(\"\",40);\n\t\ttesto4 = new TextField(\"\",10);\n\t\tannulla = new Button(\"Annulla\");\n\t\tconferma = new Button(\"Conferma\");\n\t\tUtils.constrain(panel[10], label12, 0, 0, 1, 1,GridBagConstraints.NONE,\n\t\t\t\tGridBagConstraints.WEST, 0.0, 0.0, 0, 5, 5, 0);\n\t\tUtils.constrain(panel[10], testo3, 1, 0, 4, 1,GridBagConstraints.NONE,\n\t\t\t\tGridBagConstraints.WEST, 1.0, 0.0, 0, 5, 5, 0);\n\t\tUtils.constrain(panel[10], label13, 0, 1, 1, 1,GridBagConstraints.NONE,\n\t\t\t\tGridBagConstraints.WEST, 0.0, 0.0, 5, 5, 5, 0);\n\t\tUtils.constrain(panel[10], testo4, 1, 1, 1, 1,GridBagConstraints.NONE,\n\t\t\t\tGridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 0);\n\t\tUtils.constrain(panel[10], annulla, 1, 2, 1, 1,GridBagConstraints.NONE,\n\t\t\t\tGridBagConstraints.EAST, 1.0, 0.0, 5, 5, 0, 5);\n\t\tUtils.constrain(panel[10], conferma, 2, 2, 1, 1,GridBagConstraints.NONE,\n\t\t\t\tGridBagConstraints.WEST, 1.0, 0.0, 5, 5, 0, 5);\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "init",
            "sourceCode": "public void init()\n\t{\n\t\tprima_scelta[0].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(prima_scelta[0].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneABC(scelta_bar, 1, BeneServizio.BAR);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tprima_scelta[1].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(prima_scelta[1].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneABC(scelta_piatto, 2, BeneServizio.RISTORANTE);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tprima_scelta[2].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(prima_scelta[2].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneABC(scelta_servizio, 3, BeneServizio.SERVIZI);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\n\t\tscelta_bar[0].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(scelta_bar[0].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneGH(scelta_bevanda, 4, BeneServizio.BEVANDE);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tscelta_bar[1].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(scelta_bar[1].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneGH(scelta_cibo, 5, BeneServizio.CIBI);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tscelta_piatto[0].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(scelta_piatto[0].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneILMN(scelta_antipasto, 6, BeneServizio.ANTIPASTI);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tscelta_piatto[1].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(scelta_piatto[1].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneILMN(scelta_primo, 7, BeneServizio.PRIMI);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tscelta_piatto[2].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(scelta_piatto[2].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneILMN(scelta_secondo, 8, BeneServizio.SECONDI);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\tscelta_piatto[3].addItemListener(new ItemListener()\n\t\t{\n\t\t\tpublic void itemStateChanged(ItemEvent e)\n\t\t\t{\n\t\t\t\tif(scelta_piatto[3].getState())\n\t\t\t\t{\n\t\t\t\t\tinComuneILMN(scelta_contorno, 9, BeneServizio.CONTORNI);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tannulla.addActionListener(new ActionListener()\n\t\t{\n\t\t\tpublic void actionPerformed(ActionEvent e)\n\t\t\t{\n\t\t\t\tdispose();\n\t\t\t\tpadre.setEnabled(true);\n\t\t\t}\n\t\t});\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "inComuneABC",
            "sourceCode": "void inComuneABC(Checkbox[] scelte, int numero_pannello, char c)\n\t{\n\t\tlevel = 0;\n\t\tfor(int i=1;i<13;++i)\n\t\t{\n\t\t\tif(panel[i].isVisible())\n\t\t\t\tremove(panel[i]);\n\t\t}\n\t\tthis.add(panel[numero_pannello]);\n\t\tpanel[numero_pannello].setVisible(true);\n\t\tsetVisible(true);\n\t\tcodice = composeCode(level, c);\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "inComuneGH",
            "sourceCode": "void inComuneGH(Checkbox[] scelte, int numero_pannello, char c)\n\t{\n\t\tlevel = 1;\n\t\tfor(int i=2;i<13;++i)\n\t\t{\n\t\t\tif(panel[i].isVisible())\n\t\t\t\tremove(panel[i]);\n\t\t}\n\t\tthis.add(panel[numero_pannello]);\n\t\tpanel[numero_pannello].setVisible(true);\n\t\tsetVisible(true);\n\t\tcodice = composeCode(level, c);\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "inComuneILMN",
            "sourceCode": "void inComuneILMN(Checkbox[] scelte, int numero_pannello, char c)\n\t{\n\t\tlevel = 1;\n\t\tif (panel[1].isVisible())\n\t\t\tremove(panel[1]);\n\t\tfor (int i = 3; i < 13; i++)\n\t\t\tif (panel[i].isVisible())\n\t\t\t\tremove(panel[i]);\n\t\tthis.add(panel[numero_pannello]);\n \t\tpanel[numero_pannello].setVisible(true);\n\t\tsetVisible(true);\n\t\tcodice = composeCode(level, c);\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "errore",
            "sourceCode": "boolean errore()\n\t{\n\t\tFrame msg;\n\t\t\n\t\tif ( !((testo3.getText()).length() < 33 ) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" La descrizione del bene o servizio deve essere di al piu' 32 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( (testo3.getText()).equals(\"\") )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Manca la descrizione del bene o servizio! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( (testo4.getText()).equals(\"\") )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Manca il prezzo del bene o servizio! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !(Utils.isFloatPos(testo4.getText())) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Il prezzo deve essere un numero positivo! \");\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "composeCode",
            "sourceCode": "char[] composeCode(int index, char tipo)\n\t{\t\n\t\tcodice[index] = tipo;\n\t\tfor ( int i = index+1; i < 3; ++i)\n\t\t\tcodice[i] = ' ';\n\t\treturn codice;\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "completeCode",
            "sourceCode": "char[] completeCode()\n\t{\n\t\tif (codice[1] == ' ')\n\t\t\tcodice[1] = '0'; \n\t\tif (codice[2] == ' ')\n\t\t\tcodice[2] = '0'; \n\t\treturn codice;\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "o",
            "sourceCode": "void o()\n\t{\n\t\tif (panel[10].isVisible()) // necessario nella finestra di modifica\n\t\t\tremove(panel[10]);\n\t\tif (panel[12].isVisible()) // necessario nella finestra di cancellazione\n\t\t\tremove(panel[12]);\n\t\tinComuneOP();\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "p",
            "sourceCode": "void p() // Frutta o dessert\n\t{\n\t\tif(panel[1].isVisible())\n\t\t\tremove(panel[1]);\n\t\tfor(int i=3;i<13;++i)\n\t\t{\n\t\t\tif(panel[i].isVisible())\n\t\t\t\tremove(panel[i]);\n\t\t}\n\t\tinComuneOP();\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "inComuneOP",
            "sourceCode": "void inComuneOP()\n\t{\n\t\tcompleteCode();\n\t\tif (elenco.getItemCount() > 0)  //per evitare warning\n\t\t\telenco.removeAll();\n\t\tcreaLista(); \n\t\tthis.add(panel[11]);\n\t\tpanel[11].setVisible(true);\n\t\tsetVisible(true);\n\t}"
        },
        {
            "parentClass": "MascheraBeneServizio",
            "name": "creaLista",
            "sourceCode": "void creaLista()\n\t{\n\t\tint i=1;\n\t\tBeneServizio b;\t\t\n\t\t\n\t\tL = (Principale.db).elencoBeniServizi(new String(codice));\n\t\tif (L != null)\n\t\t{\n\t\t\twhile (i <= L.length())\n\t\t\t{\n\t\t\t\tb = L.getBeneServizio(i);\n\t\t\t\telenco.addItem(b.toString());\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}"
        }
    ]
}