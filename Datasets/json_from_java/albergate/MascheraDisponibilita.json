{
    "MascheraDisponibilita": [
        {
            "parentClass": "MascheraDisponibilita",
            "name": "MascheraDisponibilita",
            "sourceCode": "public MascheraDisponibilita(Frame parent, String nome_ag)\n   {\n      super(\"Disponibilita delle stanze\");\n      padre = parent;\n      agenzia = new String(nome_ag);\n      padre.setEnabled(false);\n      setupPanels();\n      pack();\n      init();\n      this.setVisible(true);\n   }"
        },
        {
            "parentClass": "MascheraDisponibilita",
            "name": "setupPanels",
            "sourceCode": "void setupPanels()\n   {\n\t  this.setFont(ConfigurazioneSistema.font_base);\n      //Creo i pulsanti\n      Indietro = new Button(\" Indietro \");\n      //Annulla.setFont(new Font(\"Courier\", Font.PLAIN, 12));\n      Visualizza = new Button(\"Visualizza disponibilita\");\n      Visualizza.setEnabled(false);\n      //Conferma.setFont(new Font(\"Courier\", Font.PLAIN, 12));\n\n      //Creo le etichette\n      etichetta1 = new Label(\"Selezionare il tipo di ricerca che si desidera effettuare:\");\n      etichetta1.setFont(ConfigurazioneSistema.font_titolo);\n      etichetta2 = new Label(\"Risultato della ricerca:\");\n      etichetta2.setFont(ConfigurazioneSistema.font_titolo);\n      etichetta3 = new Label(\"Ricerca per stanza:\");\n      etichetta3.setFont(ConfigurazioneSistema.font_titolo);\n      label1 = new Label(\"Stanza numero\");\n\n      //Creo un Checkbox ad esclusione\n      checkbox_group = new CheckboxGroup();\n      checkboxes = new Checkbox[2];\n      checkboxes[0] = new Checkbox(\" Ricerca per stanza\",checkbox_group,false);\n      checkboxes[1] = new Checkbox(\" Ricerca su tutte le stanze\",checkbox_group,false);\n\n\n      //Creo il TextField e lo rendo non editabili\n      testo = new TextField(\"\", 4);\n      testo.setEditable(false);\n\n      //creo una Lista\n      lista_disp = new List(10, false);\n\n      panel=new Panel[5];\n      for(int i=0;i<panel.length;++i)\n      {\n         panel[i]=new Panel();\n         panel[i].setLayout(gridbag);\n      }\n      \n      //Creo il pannello in alto a sinistra\n      Utils.constrain(panel[1], etichetta1, 0, 0, 3, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0); \n      Utils.constrain(panel[1], checkboxes[0], 0, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0); \n      Utils.constrain(panel[1], checkboxes[1], 0, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 5, 0, 0);\n            \n      //Creo il pannello ricerca per stanza\n      Utils.constrain(panel[2], etichetta3, 0, 0, 2, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);\n      Utils.constrain(panel[2], label1, 0, 1, 1, 1, GridBagConstraints.NONE,\n                         GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 5, 0, 20);\n      Utils.constrain(panel[2], testo, 1, 1, 1, 1, GridBagConstraints.NONE,\n                      GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);\n\n      //Creo il pannello dei pulsanti\n      Utils.constrain(panel[0], Indietro, 1, 0, 1, 1, GridBagConstraints.NONE,\n                         GridBagConstraints.EAST, 0.3, 0.0, 10, 0, 10, 5);\n      Utils.constrain(panel[0], Visualizza, 3, 0, 1, 1, GridBagConstraints.NONE,\n                         GridBagConstraints.WEST, 0.3, 0.0, 10, 5, 10, 0);\n\n      //Creo il pannello contenente la list_soggiornanti \n      Utils.constrain(panel[4], etichetta2, 0, 0, 2, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);\n      Utils.constrain(panel[4], lista_disp, 0, 1, 1, 1, GridBagConstraints.BOTH,\n                         GridBagConstraints.NORTHWEST, 1.0, 1.0, 0, 5, 0, 20);\n\n      //Attacco i pannelli al frame\n      this.setLayout(gridbag);\n      Utils.constrain(this, panel[1], 0, 0, 5, 4, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(this, panel[2], 0, 4, 5, 2, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);\n      Utils.constrain(this, panel[0], 0, 6, 5, 1, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.SOUTHEAST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(this, panel[4], 0, 7, 5, 7, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.WEST, 1.0, 1.0, 5, 5, 5, 5);\n   }"
        },
        {
            "parentClass": "MascheraDisponibilita",
            "name": "init",
            "sourceCode": "public void init()\n   {\n      cost = new Costanti();\n      anno_corr = cost.getAnnoCorr();\n      anno_prox = cost.getAnnoProx();\n      \n      checkboxes[0].addItemListener(new ItemListener()   \n      {\n         public void itemStateChanged(ItemEvent e)\n         {\n                testo.setEditable(true);\n\t\t\t\tVisualizza.setEnabled(true);\n\t\t\t\tif (lista_disp.getItemCount() > 0)\n\t\t\t\t\tlista_disp.removeAll();\n         }\n      });\n                      \n      checkboxes[1].addItemListener(new ItemListener()   \n      {\n         public void itemStateChanged(ItemEvent e)\n         {\n                testo.setEditable(false);\n\t\t\t\ttesto.setText(\"\");\n\t\t\t\tVisualizza.setEnabled(true);\n\t\t\t\tif (lista_disp.getItemCount() > 0)\n\t\t\t\t\tlista_disp.removeAll();\n         }\n      });\n\n      Visualizza.addActionListener(new ActionListener()\n      {\n         public void actionPerformed(ActionEvent e)\n         {\n\t\t\tDisponibilita disp = new Disponibilita();\n\t\t\tString str = new String(\"\");\n\t\t\t//Tramuto temporaneamente tutti i commissionamenti di una certa agenzia \n\t\t\t//in disponibilita\n\t\t\n\t\t\tListaDisponibilita L_disp = (Principale.db).elencoDisponibilita();\n\t\t\tif (!agenzia.equals(\"\"))\n\t\t\t{\n\t\t\t\tListaCommissionamenti L_comm = (Principale.db).foundCommissionamenti(agenzia);\t\t\n\t\t\t\tCommissionamento comm;\n\t\t\t\tfor (int i = 1; i <= L_comm.length(); i++)\n\t\t\t\t{\n\t\t\t\t\tcomm = L_comm.getCommissionamento(i);\n\t\t\t\t\tdisp = Utils.getDispOfRoom(L_disp,comm.getNumStanza(),true);\t\t\n\t\t\t\t\tdisp.setDisponibilita(comm.getInizioComm(),comm.getFineComm(),Flag.DISPONIBILE, Flag.COMMISSIONATA);\n\t\t\t\t\tL_disp.addDisponibilita(disp);\n\t\t\t\t}\n\t\t\t\tstr = new String(\"  ---  commissioni \"+agenzia);\n\t\t\t}\n\t\t\tif (L_disp.length() > 0)\n\t\t\t\tlista_disp.addItem(\"TABELLA DELLE DISPONIBILITA'\"+str);\n\t\t\tif (checkboxes[0].getState())\n\t\t\t\tshowDispOfRoom(L_disp,testo.getText());\n\t\t\telse\n\t\t\t\tshowDispOfHotel(L_disp);\t\n         }\n       });\n\n      Indietro.addActionListener(new ActionListener()\n      {\n         public void actionPerformed(ActionEvent e)\n         {\n            dispose();\n            padre.setEnabled(true);\n          }\n       });\n   }"
        },
        {
            "parentClass": "MascheraDisponibilita",
            "name": "showDispOfRoom",
            "sourceCode": "void showDispOfRoom(ListaDisponibilita L, String room)\n\t{\n\t\tFrame msg;\n\t\tDisponibilita disp;\n\t\tString aus;\n\t\t\n\t\tif (room.equals(\"\"))\n\t\t\t\tmsg = new MessageDialog(this,\"Inserire il numero della stanza per la ricerca delle sue dispoibilita\");\n\t\telse\n\t\t{\t\n\t\t\tdisp = Utils.getDispOfRoom(L, room, false);\n\t\t\tif (disp == null)\n\t\t\t{\t\n\t\t\t\tmsg = new MessageDialog(this,\"La stanza inserita e' inesistente!\");\n\t\t\t\tif (lista_disp.getItemCount() > 0)\n\t\t\t\t\tlista_disp.removeAll();\n\t\t\t}\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tlista_disp.addItem(\"\");\n\t\t\t\tlista_disp.addItem(\"Disponibilita' stanza n. \"+room+\" per l'anno \"+anno_corr);\n\t\t\t\taus = new String(Utils.scanVectorForDisp(disp.getDispAnnoCorr(), anno_corr, (Principale.config).getStagAnnoCorr()));\n\t\t\t\tif (aus.equals(\"\"))\n\t\t\t\t\tlista_disp.addItem(\"NESSUNA DISPONIBILITA'\");\n\t\t\t\telse\n\t\t\t\t\tlista_disp.addItem(aus);\n\t\t\t\tlista_disp.addItem(\"\");\n\t\t\t\tlista_disp.addItem(\"Disponibilita' stanza n. \"+room+\" per l'anno \"+anno_prox);\n\t\t\t\taus = new String(Utils.scanVectorForDisp(disp.getDispAnnoProx(), anno_prox, (Principale.config).getStagAnnoProx()));\n\t\t\t\tif (aus.equals(\"\"))\n\t\t\t\t\tlista_disp.addItem(\"NESSUNA DISPONIBILITA'\");\n\t\t\t\telse\n\t\t\t\t\tlista_disp.addItem(aus);\n\t\t\t}\t\t\t\t\n\t\t}\t\n\t}"
        },
        {
            "parentClass": "MascheraDisponibilita",
            "name": "showDispOfHotel",
            "sourceCode": "void showDispOfHotel(ListaDisponibilita L)\n\t{\n\t\tFrame msg;\n\t\tif (L.length() == 0)\n\t\t\tmsg = new AvvisoDialog(this,\"Nessuna stanza trovata!\");\n\t\telse\n\t\t\tfor (int i = 1; i <= L.length(); i++)\n\t\t\t\tshowDispOfRoom(L, (L.getDisponibilita(i)).getNumStanza());\n\t}"
        }
    ]
}