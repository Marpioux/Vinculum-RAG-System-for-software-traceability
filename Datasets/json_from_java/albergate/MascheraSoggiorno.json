{
    "MascheraSoggiorno": [
        {
            "parentClass": "MascheraSoggiorno",
            "name": "MascheraSoggiorno",
            "sourceCode": "public MascheraSoggiorno(String title, String caption, char pens, char status)\n   {\n      super(title);\n      padre.setEnabled(false);\n      setupPanels(caption, pens, status);\n      init();\n      pack();\n      this.setVisible(true);\n   }"
        },
        {
            "parentClass": "MascheraSoggiorno",
            "name": "setupPanels",
            "sourceCode": "void setupPanels(String caption, char pens, char status)\n   {\n\t  this.setFont(ConfigurazioneSistema.font_base);\n      //Creo  le etichette\n      etichetta=new Label(\"Dati del cliente\");\n      etichetta.setFont(ConfigurazioneSistema.font_titolo);\n      label1 = new Label(\"Stanza numero\");\n      label2 = new Label(\"Cognome\");\n      label3 = new Label(\"Nome\");\n      label4 = new Label(\"Luogo di nascita\");\n      label5 = new Label(\"Data di nascita\");\n      label6 = new Label(\"Documento di identita'\");\n      label7 = new Label(\"Numero telefonico\");\n      label8 = new Label(\"Indirizzo\");\n      label9 = new Label(\"C.A.P\");\n      label10 = new Label(\"Comune di residenza\");\n      label11 = new Label(\"Citta'\");\n      label12 = new Label(\"Nazione\");\n      etichetta1 = new Label(\"Dati del soggiorno\");\n      etichetta1.setFont(ConfigurazioneSistema.font_titolo);\n      label13 = new Label(\"Data inizio soggiorno\");\n      label14 = new Label(\"Data fine soggiorno\");\n      label15 = new Label(\"Tipo di pensionamento\");\n      label15.setFont(ConfigurazioneSistema.font_titolo);\n      label16 = new Label(\"Status cliente\");\n      label16.setFont(ConfigurazioneSistema.font_titolo);\n\n      //Creo i TextField\n      testo1 = new TextField(\"\", 4);\n      testo2 = new TextField(\"\", 20);\n      testo3 = new TextField(\"\", 20);\n      testo4 = new TextField(\"\", 32);\n      testo5 = new TextField(\"\", 10);\n      testo6 = new TextField(\"\", 16);\n      testo7 = new TextField(\"\", 16);\n      testo8 = new TextField(\"\", 52);\n      testo9 = new TextField(\"\", 8);\n      testo10 = new TextField(\"\", 32);\n      testo11 = new TextField(\"\", 20);\n      testo12 = new TextField(\"\", 20);\n      testo13 = new TextField(\"\", 10);\n      testo14 = new TextField(\"\", 10);\n\n      //Creo i bottoni\n      Annulla = new Button(\"Annulla\");\n      Conferma = new Button(caption);\n\n      //Creo i Checkbox ad esclusione\n      pensione = new CheckboxGroup();\n      checkboxes = new Checkbox[4];\n      checkboxes[0] = new Checkbox(\" Solo pernottamento\", pensione, false);\n      checkboxes[1] = new Checkbox(\" Prima colazione\", pensione, false);\n      checkboxes[2] = new Checkbox(\" Mezza pensione\", pensione, false);\n      checkboxes[3] = new Checkbox(\" Pensione completa\", pensione, false);\n\t  switch (pens)\n\t  {\n\t  \tcase Flag.SOLO_PERNOTTAMENTO: \n\t  \t\tcheckboxes[0] = new Checkbox(\" Solo pernottamento\", pensione, true);\n\t  \t\tbreak;\n\t  \tcase Flag.SOLO_COLAZIONE: \n\t\t\tcheckboxes[1] = new Checkbox(\" Prima colazione\", pensione, true);\n\t  \t\tbreak;\n\t  \tcase Flag.MEZZA_PENSIONE:\n\t\t\tcheckboxes[2] = new Checkbox(\" Mezza pensione\", pensione, true);\n\t  \t\tbreak;\n\t  \tcase Flag.PENSIONE_COMPLETA: \n\t\t\tcheckboxes[3] = new Checkbox(\" Pensione completa\", pensione, true);\n\t  \t\tbreak;\n\t  }\n\n      cliente = new CheckboxGroup();\n      checkboxes1 = new Checkbox[4];\n      checkboxes1[0] = new Checkbox(\" Neonato (0-2 anni)\", cliente, false);\n      checkboxes1[1] = new Checkbox(\" Bambino (3-12 anni)\", cliente, false);\n      checkboxes1[2] = new Checkbox(\" Ragazzo (12-17 anni)\", cliente, false);\n      checkboxes1[3] = new Checkbox(\" Adulto  (>=18 anni)\", cliente, false);\n\t  switch (status)\n\t  {\n\t  \tcase Flag.NEONATO: \n\t\t    checkboxes1[0] = new Checkbox(\" Neonato (0-2 anni)\", cliente, true);\n\t  \t\tbreak;\n\t  \tcase Flag.BAMBINO: \n\t\t\tcheckboxes1[1] = new Checkbox(\" Bambino (3-12 anni)\", cliente, true);\n\t  \t\tbreak;\n\t  \tcase Flag.RAGAZZO:\n\t\t\tcheckboxes1[2] = new Checkbox(\" Ragazzo (12-17 anni)\", cliente, true);\n\t  \t\tbreak;\n\t  \tcase Flag.ADULTO: \n\t\t\tcheckboxes1[3] = new Checkbox(\" Adulto  (>=18 anni)\", cliente, true);\n\t  \t\tbreak;\n\t  }\n\n      //Creo il pannello in alto contenente i dati del cliente\n      panel1 = new Panel();\n      panel1.setLayout(gridbag);\n      Utils.constrain(panel1, etichetta, 0, 0, 2, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, label1, 0, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, testo1, 1, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, label2, 0, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, testo2, 1, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, label3, 2, 2, 1 ,1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, testo3, 3, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, label4, 0, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, testo4, 1, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, label5, 2, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, testo5, 3, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, label6, 0, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, testo6, 1, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, label7, 2, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, testo7, 3, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, label8, 0, 5, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, testo8, 1, 5, 4, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, label9, 0, 6, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, testo9, 1, 6, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, label10, 2, 6, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, testo10, 3, 6, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, label11, 0, 7, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, testo11, 1, 7, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5); \n      Utils.constrain(panel1, label12, 2, 7, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 0.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel1, testo12, 3, 7, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n\n      //Creo il pannello centrale con i dati del soggiorno\n      panel2 = new Panel();\n      panel2.setLayout(gridbag);\n      Utils.constrain(panel2, etichetta1, 0, 0, 2, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, label13, 0, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHEAST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, testo13, 1, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, label14, 2, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHEAST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, testo14, 3, 1, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, label15, 0, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, checkboxes[0], 0, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, checkboxes[1], 0, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, checkboxes[2], 0, 5, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, checkboxes[3], 0, 6, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, label16, 1, 2, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, checkboxes1[0], 1, 3, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, checkboxes1[1], 1, 4, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, checkboxes1[2], 1, 5, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel2, checkboxes1[3], 1, 6, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.NORTHWEST, 1.0, 0.0, 5, 5, 5, 5);                  \n\n      //Creo il pannello in basso con due pulsanti\n      panel3 = new Panel();\n      panel3.setLayout(gridbag);\n      Utils.constrain(panel3, Annulla, 0, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.EAST, 0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(panel3, Conferma, 1, 0, 1, 1, GridBagConstraints.NONE,\n                        GridBagConstraints.WEST, 0, 0.0, 5, 5, 5, 5);\n\n      //Attacco i pannelli al frame\n      this.setLayout(gridbag);\n      Utils.constrain(this, panel1, 0, 0, 4, 8, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.NORTH, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(this,panel2, 0, 8, 4, 7, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);\n      Utils.constrain(this,panel3,0, 15, 4, 1, GridBagConstraints.HORIZONTAL,\n                        GridBagConstraints.SOUTH, 1.0, 0.0, 5, 5, 5, 5);\n    }"
        },
        {
            "parentClass": "MascheraSoggiorno",
            "name": "init",
            "sourceCode": "public void init()\n   {\n      Annulla.addActionListener(new ActionListener()\n      {\n         public void actionPerformed(ActionEvent e)\n         {\n            dispose();\n            padre.setEnabled(true);\n         }\n      });\n\t}"
        },
        {
            "parentClass": "MascheraSoggiorno",
            "name": "readDatiSogg",
            "sourceCode": "public Soggiornante readDatiSogg(Prenotazione pren, int cont)\n\t{\n\t\tFrame msg;\n\t\tString data_inizio,data_fine;\n\t\tDate data1, data2;\n\t\tSoggiornante sogg = new Soggiornante();\n\t\tsogg.setNumStanza(pren.getNumStanza());\n\t\tsogg.setCognome(testo2.getText());\n\t\tsogg.setNome(testo3.getText());\n\t\tsogg.setLuogoNasc(testo4.getText());\n\t\tsogg.setDataNasc(DateUtils.convertDate(testo5.getText()));\n\t\tsogg.setNumDoc(testo6.getText());\n\t\tsogg.setNumTel(testo7.getText());\n\t\tsogg.setIndirizzo(testo8.getText());\n\t\tsogg.setCap(testo9.getText());\n\t\tsogg.setComune(testo10.getText());\n\t\tsogg.setCitta(testo11.getText());\n\t\tsogg.setNazione(testo12.getText());\n        sogg.setInizioSogg(pren.getInizioSogg());\n        sogg.setFineSogg(pren.getFineSogg());\n        sogg.setIdPrenotazione(pren.getIdPrenotazione());\n        sogg.setIdSoggiornante(cont);\n        \n\t\tif (checkboxes[0].getState() == true)\n\t\t\tsogg.setPensionamento(Flag.SOLO_PERNOTTAMENTO);\n\t\telse\t\n\t\t\tif (checkboxes[1].getState() == true)\n\t\t\t\tsogg.setPensionamento(Flag.SOLO_COLAZIONE);\n\t\t\telse\n\t\t\t\tif (checkboxes[2].getState() == true)\n\t\t\t\t\tsogg.setPensionamento(Flag.MEZZA_PENSIONE);\n\t\t\t\telse\n\t\t\t\t\tif (checkboxes[3].getState() == true)\n\t\t\t\t\t\tsogg.setPensionamento(Flag.PENSIONE_COMPLETA);\n\t\t\n\t\tif (checkboxes1[0].getState() == true)\n\t\t\tsogg.setStatus(Flag.NEONATO);\n\t\telse\n\t\t\tif (checkboxes1[1].getState() == true)\n\t\t\t\tsogg.setStatus(Flag.BAMBINO);\n\t\t\telse\n\t\t\t\tif (checkboxes1[2].getState() == true)\n\t\t\t\t\tsogg.setStatus(Flag.RAGAZZO);\n\t\t\t\telse\n\t\t\t\t\tsogg.setStatus(Flag.ADULTO);\t\n\t\treturn sogg;\n\t\n\t}"
        },
        {
            "parentClass": "MascheraSoggiorno",
            "name": "writeDatiSogg",
            "sourceCode": "public void writeDatiSogg(Soggiornante sogg)\n\t{\n\t\ttesto1.setText(sogg.getNumStanza());\n\t\ttesto2.setText(sogg.getCognome());\n\t\ttesto3.setText(sogg.getNome());\n\t\ttesto4.setText(sogg.getLuogoNasc());\n\t\ttesto5.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(sogg.getDataNasc())));\n\t\ttesto6.setText(sogg.getNumDoc());\n\t\ttesto7.setText(sogg.getNumTel());\n\t\ttesto8.setText(sogg.getIndirizzo());\n\t\ttesto9.setText(sogg.getCap());\n\t\ttesto10.setText(sogg.getComune());\n\t\ttesto11.setText(sogg.getCitta());\n\t\ttesto12.setText(sogg.getNazione());\n\t\ttesto13.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(sogg.getInizioSogg())));\n\t\ttesto14.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(sogg.getFineSogg())));\n\t}"
        },
        {
            "parentClass": "MascheraSoggiorno",
            "name": "changeTitle",
            "sourceCode": "void changeTitle(int parz, int tot)\n\t{\n\t\tthis.setTitle(\"Inserimento dei dati del soggiornante  (\"+parz+\"/\"+tot+\")\");\n\t}"
        },
        {
            "parentClass": "MascheraSoggiorno",
            "name": "cleanFields",
            "sourceCode": "void cleanFields()\n\t{\n\t\ttesto2.setText(\"\");\n\t\ttesto3.setText(\"\");\n\t\ttesto4.setText(\"\");\n\t\ttesto5.setText(\"\");\n\t\ttesto6.setText(\"\");\n\t\ttesto7.setText(\"\");\n\t\ttesto8.setText(\"\");\n\t\ttesto9.setText(\"\");\n\t\ttesto10.setText(\"\");\n\t\ttesto11.setText(\"\");\n\t\ttesto12.setText(\"\");\n\t}"
        },
        {
            "parentClass": "MascheraSoggiorno",
            "name": "aggiornaDisp",
            "sourceCode": "void aggiornaDisp(Soggiornante sogg, char tipo)\n\t{\n\t\tDisponibilita disp_da_cambiare = new Disponibilita();\n\t\tListaDisponibilita elenco_disp = (Principale.db).elencoDisponibilita();\n\t\tif (elenco_disp == null)\n\t\t{\n\t\t\tFrame msg = new MessageDialog(this, \" Problemi con il database nella lettura delle disponibilita'! \");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tdisp_da_cambiare = Utils.getDispOfRoom(elenco_disp, sogg.getNumStanza(), true);\n\t\tdisp_da_cambiare.setDisponibilita(sogg.getInizioSogg(), sogg.getFineSogg(), tipo, Flag.ASSEGNATA) ;\n\t\t(Principale.db).changeDisponibilita( disp_da_cambiare.getNumStanza(), \n\t\t\t\t\t\t\t\t\t\t\tdisp_da_cambiare.getDispAnnoCorr(),\n\t\t\t\t\t\t\t\t\t\t\tdisp_da_cambiare.getDispAnnoProx() );\n\t}"
        },
        {
            "parentClass": "MascheraSoggiorno",
            "name": "errori",
            "sourceCode": "boolean errori()\n\t{\n\t\tFrame msg;\n\t\tString data_nasc = new String();  \n\t\t//Controllo data di nascita\n\t\tif ( (testo5.getText().equals(\"\")) )\n\t\t{\t\n\t\t\tmsg = new AvvisoDialog(this,\" Inserire la data di nascita! \");\n\t\t\treturn true;\n\t\t}\n\t\telse\t\t\n\t\t\tdata_nasc = DateUtils.parseDate(testo5.getText());\n\t\tif ( data_nasc.equals(Errore.DATA_NON_CORRETTA))\n\t\t{\t\n\t\t\tmsg = new MessageDialog(this,\" Data Nascita Errata! \");\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ( !( DateUtils.isDataRight(data_nasc)) )\n\t\t\t{\t\n\t\t\t\tmsg = new MessageDialog(this,\"Data Nascita Insensata\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif ( !((testo2.getText()).length() <= 20) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Il cognome deve essere composto da al piu' 20 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo3.getText()).length() <= 20) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Il nome deve essere composto da al piu' 20 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo4.getText()).length() <= 32) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Il luogo di nascita deve essere composto da al piu' 32 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo6.getText()).length() <= 16) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Il documento di identita' deve essere composto da al piu' 16 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo7.getText()).length() <= 16) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Il numero telefonico deve essere composto da al piu' 16 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo8.getText()).length() <= 32) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" L'indirizzo deve essere composto da al piu' 32 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo9.getText()).length() <= 5) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Il C.A.P. deve essere composto da al piu' 5 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo10.getText()).length() <= 32) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Il comune deve essere composto da al piu' 32 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo11.getText()).length() <= 20) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" La citta deve essere composto da al piu' 20 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\tif ( !((testo12.getText()).length() <= 20) )\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" La nazione deve essere composto da al piu' 20 caratteri! \");\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}"
        }
    ]
}