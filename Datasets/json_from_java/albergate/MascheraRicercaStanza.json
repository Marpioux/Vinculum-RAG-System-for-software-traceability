{
    "MascheraRicercaStanza": [
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "MascheraRicercaStanza",
            "sourceCode": "public MascheraRicercaStanza(String title, int c) \n    {\n        super(title);\n        caller = c;\n        setupPanels();\n        init();\n        pack();\n    }"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "setupPanels",
            "sourceCode": "void setupPanels()\n    {\n\t\tthis.setFont(ConfigurazioneSistema.font_base);\n        //Creo i TextField\n        data_inizio = new TextField(\"\", 12);\n        data_fine = new TextField(\"\", 12);\n\t\tnome_ag = new TextField(\"\", 20);\n\t\tnome_ag.setEditable(false);\n        \n        //Creo i pulsanti e ne disabilito due\n        Annulla = new Button(\"Indietro\");\n        Annulla1 = new Button(\"Annulla\");\n        Conferma = new Button(\" Scegli \");\n        Avvio = new Button(\"Avvio Ricerca\");\n        ShowDisp = new Button(\"Disponibilita'\");\n        Annulla1.setEnabled(false);\n        Conferma.setEnabled(false);\n\n        //Creo le etichette\n        etichetta= new Label(\"Periodo di soggiorno\");\n        etichetta.setFont(ConfigurazioneSistema.font_titolo);\n        etichetta1 = new Label(\"Data inizio:\");\n        etichetta2 = new Label(\"Data fine:\");\n        etichetta3 = new Label (\"Risultato della ricerca:\");\n        etichetta3.setFont(ConfigurazioneSistema.font_titolo);\n\t\tetichetta4 = new Label(\" Nome agenzia\");\n\t\tetichetta5 = new Label (\"Prenotazione di stanze commissionate:\");\n        etichetta5.setFont(ConfigurazioneSistema.font_titolo);\n\n        //Creo la lista\n        lista = new List(15, false);\n\n       \t//Creo il checkbox\n       \tcon_ag = new Checkbox(\" Prenotazione tramite agenzia\", false);\n       \n        //Creo il pannello in alto      \n        panel1 = new Panel();\n        panel1.setLayout(gridbag);\n        Utils.constrain(panel1, etichetta, 0, 0, 4, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 10, 0);\n        Utils.constrain(panel1, etichetta1, 0, 1, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);\n        Utils.constrain(panel1, data_inizio, 1, 1, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST,1.0,0.0,0,0,0,0);\n        Utils.constrain(panel1, etichetta2, 2, 1, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 0.0, 0.0, 0, 0, 0, 0);\n        Utils.constrain(panel1,data_fine, 3, 1, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);\n        \n        panel5 = new Panel();\n        panel5.setLayout(gridbag);\n        Utils.constrain(panel5, etichetta5, 0, 0, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);        \n        Utils.constrain(panel5, con_ag,     0, 1, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);\n        Utils.constrain(panel5, etichetta4, 1, 1, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);\n        Utils.constrain(panel5, nome_ag,    2, 1, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 0, 0, 0, 0);             \n\n        \n        \n        //Creo un pannello con due pulsanti\n        panel2 = new Panel();\n        panel2.setLayout(gridbag);\n        Utils.constrain(panel2, Annulla, 1, 0, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 0.3, 0.0, 0, 0, 0, 1);\n        Utils.constrain(panel2, Avvio, 2, 0, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 0.3, 0.0, 0, 0, 0, 1);\n        Utils.constrain(panel2, ShowDisp, 3, 0, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.NORTHWEST, 0.3, 0.0, 0, 0, 0, 1);             \n\n        //Creo il pannello contenente la lista\n        panel3 = new Panel();\n        panel3.setLayout(gridbag);\n        Utils.constrain(panel3, etichetta3, 0, 0, 2, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.WEST, 1.0, 0.0, 0, 0, 0, 0);\n        Utils.constrain(panel3,lista, 0, 1, 4, 3, GridBagConstraints.BOTH,\n                     GridBagConstraints.CENTER, 3.0, 3.0, 0, 0, 0, 0);\n\n        //Creo il pannello in basso con due pulsanti\n        panel4 = new Panel();\n        panel4.setLayout(gridbag);\n        Utils.constrain(panel4, Annulla1, 0, 1, 1, 1, GridBagConstraints.NONE,\n                     GridBagConstraints.SOUTHEAST, 0.3, 0.0, 0, 0, 0, 10);\n        Utils.constrain(panel4, Conferma, 1, 1, 1, 1,GridBagConstraints.NONE,\n                     GridBagConstraints.SOUTHWEST, 0.3, 0.0, 0, 0, 0, 0);\n\n        \n        //Attacco i pannelli al frame\n        this.setLayout(gridbag);\n        Utils.constrain(this, panel1, 0, 0, 4, 2, GridBagConstraints.HORIZONTAL,\n                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 15, 10, 10, 10);\n        Utils.constrain(this, panel5, 0, 2, 4, 1, GridBagConstraints.HORIZONTAL,\n                     GridBagConstraints.NORTHWEST, 1.0, 0.0, 15, 10, 10, 10);             \n        Utils.constrain(this, panel2, 0, 3, 4, 1,GridBagConstraints.HORIZONTAL,\n                     GridBagConstraints.NORTHEAST, 1.0, 0.0, 10, 10, 0, 10);\n        Utils.constrain(this, panel3, 0, 4, 4, 3, GridBagConstraints.BOTH,\n                     GridBagConstraints.CENTER, 2.0, 2.0, 10, 10, 10, 10);\n        Utils.constrain(this, panel4, 0, 7, 4, 1, GridBagConstraints.HORIZONTAL,\n                     GridBagConstraints.SOUTHWEST, 1.0, 1.0, 10, 10, 15, 10);\n\t\t\n\t\tif (caller == 1)\n\t\t{\t\t\n\t\t\tpanel5.setVisible(false);\n\t\t\tpack();\n\t\t}\n\t}"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "init",
            "sourceCode": "public void init()\n    {\n        //Ascoltatore del pulsante Avvio,se il pulsante viene premuto viene\n        //lanciata la procedura di ricerca stanze libere\n        Avvio.addActionListener(new ActionListener()\n        {\n            public void actionPerformed(ActionEvent e)\n            {\n\t\t\t\tctrlAvvio();\n            } \n        });\n\n        //Ascoltatore del pulsante Annulla,se il pulsante viene prumeto si torna\n        //alla maschera precedente\n        Annulla.addActionListener(new ActionListener()\n        {\n            public void actionPerformed(ActionEvent e)\n            {\n                dispose();\n                if (caller == 3)\n                \tfather.setEnabled(true);\n            \telse\n            \t   \tpadre.setEnabled(true);\n            }\n        });\n        \n        //Ascoltatore del pulsante ShowDisp,se il pulsante viene premuto si \n        //mostrera' una maschera con le disponibilita dell'albergo\n        ShowDisp.addActionListener(new ActionListener()\n        {\n            public void actionPerformed(ActionEvent e)\n            {\n\t\t\t\tlookDisp();                \n            }\n        });\n\n        //Ascoltatore del pulsante Annulla1,se il pulsante viene premuto si\n        //vengono riabilitati i componenti del pannello in alto e\n        //disabilitati quelli del pannello in basso\n        Annulla1.addActionListener(new ActionListener()\n        {\n            public void actionPerformed(ActionEvent e)\n            {\n            \tstartAnnulla1();\n\t\t\t}\n\t\t});\n\n        //Ascoltatore del pulsante Conferma, se il pulsante viene premuto si apre\n        //la finestra riguardante l'inserimento della prenotazione\n        Conferma.addActionListener(new ActionListener()\n        {\n            public void actionPerformed(ActionEvent e)\n            {\n\t\t\t\tstartInserimento();\n\t\t\t}\n\t\t});\n\t\t\t\n\t\tlista.addActionListener(new ActionListener()\n\t\t{\n\t\t\tpublic void actionPerformed(ActionEvent e)\n\t\t\t{\n\t\t\t\tstartInserimento();\n\t\t\t}\n        });\n\t\n\t\tcon_ag.addItemListener(new ItemListener()   \n      \t{\n         \tpublic void itemStateChanged(ItemEvent e)\n         \t{\n               \t\n               \tif (con_ag.getState())\n               \t\tnome_ag.setEditable(true);\n               \telse\n               \t{\n               \t\tnome_ag.setEditable(false);\n         \t\t\tnome_ag.setText(\"\");\n         \t\t}\n         \t}\n      \t});\n\t}"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "dataInizioIsNotBeforeToday",
            "sourceCode": "boolean dataInizioIsNotBeforeToday()\n\t{\n\t\tDate inizio_pren = DateUtils.convertDate(data_inizio.getText());\n\t\tDate today = new Date();\n\t\t\n\t\tif (inizio_pren.getYear() < today.getYear())\n\t\t\treturn false;\n\t\telse\n\t\t\tif (inizio_pren.getYear() > today.getYear())\n\t\t\t\treturn true;\n\t\t\telse // l'anno e' il medesimo\n\t\t\t\tif (inizio_pren.getMonth() < today.getMonth())\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\tif (inizio_pren.getMonth() > today.getMonth())\n\t\t\t\t\t\treturn true;\n\t\t\t\t\telse // l'anno e il mese sono i medesimi\n\t\t\t\t\t\tif (inizio_pren.getDate() < today.getDate())\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn true;\n\t}"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "ctrlAvvio",
            "sourceCode": "void ctrlAvvio()\n\t{\n\t\tFrame msg;\n\n\t\tif (Utils.dateEPeriodoCorretti(this, data_inizio.getText(), data_fine.getText()))\n\t\t{\n\t\t\tif (con_ag.getState() && nome_ag.getText().equals(\"\"))\n\t\t\t{\n\t\t\t\tmsg = new MessageDialog(this, \" Manca il nome dell'agenzia! \");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tListaDisponibilita L_disp = (Principale.db).elencoDisponibilita();\n\t\t\tif (L_disp == null)\n\t\t\t{\n\t\t\t\tmsg = new MessageDialog(this, \" Problemi con il database nella lettura delle disponibilita'! \");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (caller == 3)\n\t\t\t{\t\n\t\t\t\tif (Utils.data1MaggioreData2(DateUtils.convertDate(data_fine.getText()), save_date) )\n\t\t\t\t{\t\n\t\t\t\t\tmsg = new AvvisoDialog(this, \"ATTENZIONE: la data non puo' essere posticipata\");\n\t\t\t\t\tdata_fine.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(save_date)));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tif (Utils.data1MinoreData2(DateUtils.convertDate(data_fine.getText()), DateUtils.convertDate(data_inizio.getText()) ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tmsg = new AvvisoDialog(this, \"ATTENZIONE: la data non puo' essere precedente alla data di inizio\");\n\t\t\t\t\t\tdata_fine.setText(DateUtils.parseDate(DateUtils.giveStringOfDate(save_date)));\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstanze_disp = new ListaStanze();\n\t\t\t\t\t\tstartAvvio(L_disp, 0);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (dataInizioIsNotBeforeToday())\n\t\t\t\t{\n\t\t\t\t\tstanze_disp = new ListaStanze();\n\t\t\t\t\tstartAvvio(L_disp, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tmsg = new MessageDialog(this, \" La data di inizio deve essere maggiore o uguale di quella odierna! \");\n\t\t\t}\n\t\t}\n\t}"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "startAnnulla1",
            "sourceCode": "void startAnnulla1()\n\t{\n\t\tdata_inizio.setEditable(true);\n\t\tdata_fine.setEditable(true);\n\t\tcon_ag.setEnabled(true);\n\t\tif ( con_ag.getState() )\n\t\t\tnome_ag.setEditable(true);\n\t\tAnnulla.setEnabled(true);\n\t\tAvvio.setEnabled(true);\n\t\tAnnulla1.setEnabled(false);\n\t\tConferma.setEnabled(false);\n\t\tif (lista.getItemCount() > 0)\n\t\t\tlista.removeAll();\n\t\tstanze_disp = new ListaStanze();\n\t}"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "startAvvio",
            "sourceCode": "void startAvvio(ListaDisponibilita L_disp, int k)\n\t{\n\t\tif (con_ag.getState())\n\t\t\tstartSearchComm(L_disp, k);\n\t\t\n\t\t// le date sono corrette se si arriva qui in quanto controllate in ctrlAvvio()\n\t\tFrame msg;\n\t\tString str = new String(\"\");\n\t\tListaCommissionamenti L_comm = new ListaCommissionamenti();\n\t\tListaStanze elenco_stanze_disp = new ListaStanze();\n\n\t\t// variabili necessarie per passaggio dei parametri della Inserisci\n\t\tdata1 = DateUtils.parseDate(data_inizio.getText());\n\t\tdata2 = DateUtils.parseDate(data_fine.getText());\n\n\t\t// scansione delle disponibilita\n\t\tStanza stanza = null;\n\t\tDisponibilita disp_attuale = null;\n\t\tfor (int i = 1; i <= L_disp.length(); i++)\n\t\t{\n\t\t\tdisp_attuale = L_disp.getDisponibilita(i);\n\t\t\tif ( disp_attuale.isDisponibile( DateUtils.convertDate(data_inizio.getText()), DateUtils.convertDate(data_fine.getText()), Flag.DISPONIBILE) )\n\t\t\t{\n\t\t\t\tstanza = (Principale.db).readStanza(disp_attuale.getNumStanza());\n\t\t\t\tif (stanza != null)\n\t\t\t\t{\n\t\t\t\t\telenco_stanze_disp.addStanza(stanza);\n\t\t\t\t\tstanze_disp.addStanza(stanza);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tmsg = new MessageDialog(this, \" Problemi con il database! \");\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!stanze_disp.isEmpty())\n\t\t{\n\t\t\tAvvio.setEnabled(false);\n\t\t\tAnnulla.setEnabled(false);\n\t\t\tdata_inizio.setEditable(false);\n\t\t\tdata_fine.setEditable(false);\n\t\t\tAnnulla1.setEnabled(true);\n\t\t\tConferma.setEnabled(true);\n\t\t\tcon_ag.setEnabled(false);\n\t\t\tnome_ag.setEditable(false);\n\t\t\tfor (int i = 1; i <= elenco_stanze_disp.length(); i++)\n\t\t\t\tlista.addItem(str+(elenco_stanze_disp.getStanza(i)).toString());\n\t\t}\n\t\telse\n\t\t\tif (k == 0)\n\t\t\t\tif (!con_ag.getState())\n\t\t\t\t\tmsg = new AvvisoDialog(this, \" Nessuna stanza disponibile in tale periodo! \");\n\t\t\t\telse\n\t\t\t\t\tmsg = new AvvisoDialog(this, \" Nessuna stanza disponibile o commisionata in tale periodo! \");\t\n\t}"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "startSearchComm",
            "sourceCode": "void startSearchComm(ListaDisponibilita L_disp, int k)\n\t{\n\t\t// le date sono corrette se si arriva qui in quanto controllate in ctrlAvvio()\n\t\tFrame msg;\n\t\t\n\t\tCommissionamento c;\n\t\tStanza stanza = null;\n\t\tDisponibilita disp_loc = null;\n\t\tListaCommissionamenti L_comm = new ListaCommissionamenti();;\n\t\tListaStanze elenco_stanze_disp = new ListaStanze();\n\t\tDate d1 = DateUtils.convertDate(data_inizio.getText());\n \t\tDate d2 = DateUtils.convertDate(data_fine.getText());\n\t\t\n\t\tdata1 = DateUtils.parseDate(data_inizio.getText());\n\t\tdata2 = DateUtils.parseDate(data_fine.getText());\n\t\tL_comm = (Principale.db).foundCommissionamentiSenzaLike(nome_ag.getText());\n\t\tif (L_comm == null)\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Problemi con il database nella lettura delle commissioni! \");\n\t\t\treturn;\n\t\t}\n\t\tif ( !L_comm.isEmpty() )\n\t\t{\n\t\t\tnomi_agenzie = new String[L_comm.length()];\n\t\t\tint indice_nomi = 0;\n\t\t\tfor (int i = 1; i <= L_comm.length(); i++)\n\t\t\t{\n\t\t\t\tc = L_comm.getCommissionamento(i);\n\t\t\t\t// Controllo che le date inserite appartengano al periodo commissionato\n\t\t\t\tif( (!Utils.data1MaggioreData2(c.getInizioComm(), d1)) && (!(c.getFineComm()).before(d2))) \n\t\t\t\t{\n\t\t\t\t\tdisp_loc = Utils.getDispOfRoom(L_disp, c.getNumStanza(), false);\n\t\t\t\t\tif (disp_loc.isDisponibile(d1, d2, Flag.COMMISSIONATA))\n\t\t\t\t\t{\n\t\t\t\t\t\tstanza = (Principale.db).readStanza(disp_loc.getNumStanza());\n\t\t\t\t\t\tif (stanza != null)\n\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\telenco_stanze_disp.addStanza(stanza);\n\t\t\t\t\t\t\tstanze_disp.addStanza(stanza);\n\t\t\t\t\t\t\tnomi_agenzie[indice_nomi] = new String(c.getNomeAgenzia());\n\t\t\t\t\t\t\tindice_nomi++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmsg = new MessageDialog(this, \" Problemi con il database! \");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\tif (!stanze_disp.isEmpty())\n\t\t{\n\t\t\tAvvio.setEnabled(false);\n\t\t\tAnnulla.setEnabled(false);\n\t\t\tdata_inizio.setEditable(false);\n\t\t\tdata_fine.setEditable(false);\n\t\t\tAnnulla1.setEnabled(true);\n\t\t\tConferma.setEnabled(true);\n\t\t\tfor (int i = 1; i <= elenco_stanze_disp.length(); i++)\n\t\t\t\tlista.addItem(\"COMMISSIONATA A \"+nomi_agenzie[i-1]+\" \"+(elenco_stanze_disp.getStanza(i)).toString());\n\t\t}\n\t}"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "restartAvvio",
            "sourceCode": "void restartAvvio()\n\t{\n\t\tFrame msg;\n\t\t\n\t\tListaDisponibilita L_disp = (Principale.db).elencoDisponibilita();\n\t\tif (L_disp == null)\n\t\t{\n\t\t\tmsg = new MessageDialog(this, \" Problemi con il database nella lettura delle disponibilita'! \");\n\t\t\treturn;\n\t\t}\n\t\tstartAnnulla1();\n\t\tstartAvvio(L_disp, 1);\n\t}"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "startInserimento",
            "sourceCode": "void startInserimento()\n    {\n\t\tFrame msg;\n\t\tif (lista.getSelectedIndex() != -1)\n\t\t\tswitch (caller)\n\t\t\t{\n\t\t\t\tcase 1: visualInsertComm(); break;\n\t\t\t\tcase 2: visualInsertPren(); break;\n\t\t\t\tcase 3: returnFreeRoom(); break;\n\t\t\t}\t\n\t\telse\n\t\t\tmsg = new MessageDialog(this, \" Manca la selezione! \");\n    }"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "lookDisp",
            "sourceCode": "void lookDisp()\n    {\n   \t \t\tfiglio = new MascheraDisponibilita(this, nome_ag.getText());\n    }"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "visualInsertPren",
            "sourceCode": "void visualInsertPren()\n\t{\n        this.setEnabled(false);\n        Stanza stanza = stanze_disp.getStanza(lista.getSelectedIndex()+1);\n\t\tif (con_ag.getState())\n\t        pren = new InserisciPrenotazione(stanza, data1, data2, nome_ag.getText());\n\t\telse \n\t        pren = new InserisciPrenotazione(stanza, data1, data2, \"\");\n        pren.setVisible(true);\n        pren.mask_ricerca = this;\n    }"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "visualInsertComm",
            "sourceCode": "void visualInsertComm()\n\t{\n        this.setEnabled(false);\n        Stanza stanza = stanze_disp.getStanza(lista.getSelectedIndex()+1);\n        comm = new InserisciCommissioni(stanza, data1, data2);\n        comm.setVisible(true);\n        comm.mask_ricerca = this;\n    }"
        },
        {
            "parentClass": "MascheraRicercaStanza",
            "name": "returnFreeRoom",
            "sourceCode": "void returnFreeRoom()\n\t{\n        Stanza stanza = stanze_disp.getStanza(lista.getSelectedIndex()+1);\n        father.stanza2.setText(stanza.getNumStanza());\n        father.setEnabled(true);\n        father.stanza1.setEditable(false);\n        father.Ricerca.setEnabled(false);\n    \tfather.Conferma.setEnabled(true);\n    \tdispose();\n    }"
        }
    ]
}