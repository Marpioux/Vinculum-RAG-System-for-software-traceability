{
    "MascheraContoRistorazione": [
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "MascheraContoRistorazione",
            "sourceCode": "public MascheraContoRistorazione(Frame parent)\n        {\n                super(\"Servizio ristorazione\", \"Stampa del conto\");\n                padre = parent;\n                padre.setEnabled(false);\n                inizExtra();\n                setupPanello();\n                inizializza();\n                pack();\n                setVisible(true);\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "inizExtra",
            "sourceCode": "void inizExtra()\n        {\n\t\t\t\tMessageDialog msg;\n\t\t\t\t\n\t\t\t\telenco_extra = (Principale.db).menuRistorante();\n                if (elenco_extra != null)\n                {\n                \tif (extra.getItemCount() > 0)\n                    \textra.removeAll();\n                    int i=1;\n                    while (i <= elenco_extra.length())\n                    {\n\t                    extra.addItem( (elenco_extra.getBeneServizio(i)).toString() );\n                        i++;\n                    }\n                }\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "setupPanello",
            "sourceCode": "void setupPanello()\n        {\n                num_coperti = new TextField(\"\", 4);\n                num_coperti.setEditable(true);\n\n                // creo le label\n                etich1 = new Label(\"Gestione degli addebiti              \");\n                etich1.setFont(ConfigurazioneSistema.font_titolo);\n                etich2 = new Label(\"Scegliere l'extra da addebitare \");\n                etich3 = new Label(\"Numero di coperti \");\n\n                // creo pannello di sinistra\n                this.remove(panel1);\n                panel1 = new Panel();\n                panel1.setLayout(gridbag);\n                Utils.constrain(panel1, etich1, 0, 0, 6, 1);\n                Utils.constrain(panel1, etich2, 0, 1, 6, 1, 10, 0, 0, 0);\n                Utils.constrain(panel1, extra, 0, 2, 6, 4, GridBagConstraints.BOTH,\n                                GridBagConstraints.WEST, 1.0, 1.0, 0, 20, 0, 20);\n\n\t\t\t\t// creo pannello per coperti\n\t\t\t\tthis.remove(panel4);\n\t\t\t\tpanel4 = new Panel();\n\t\t\t\tpanel4.setLayout(gridbag);\n                Utils.constrain(panel4, etich3, 0, 0, 1, 1, 5, 5, 5, 5);\n                Utils.constrain(panel4, num_coperti, 1, 0, 1, 1, GridBagConstraints.NONE,\n                                GridBagConstraints.WEST, 1.0, 0.0, 5, 5, 5, 5);\n\n                // aggiungo il pannello appena creato al resto\n                Utils.constrain(this, panel1, 0, 0, 1, 1, GridBagConstraints.VERTICAL,\n                                        GridBagConstraints.WEST, 0.5, 0.5, 5, 5, 5, 5);\n                Utils.constrain(this, panel4, 0, 2, 1, 1, GridBagConstraints.VERTICAL,\n                                        GridBagConstraints.WEST, 0.5, 0.5, 5, 5, 5, 5);\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "inizializza",
            "sourceCode": "void inizializza()\n        {\n                conferma.addActionListener(new ActionListener()\n                {\n                        public void actionPerformed(ActionEvent e)\n                        {\n                                stampaConto();\n                        }\n                });\n\n                addebita.addActionListener(new ActionListener()\n                {\n                        public void actionPerformed(ActionEvent e)\n                        {\n                                if (!errore())\n                                {\n                                    aggiornaAvideo(true);\n                                }\n                        }\n                });\n\n                deaddebita.addActionListener(new ActionListener()\n                {\n                        public void actionPerformed(ActionEvent e)\n                        {\n                                if (!errore())\n                                {\n                                        aggiornaAvideo(false);\n                                }\n                        }\n                });\n\n                extra.addActionListener(new ActionListener()\n                {\n                        public void actionPerformed(ActionEvent e)\n                        {\n                                if (!errore())\n                                {\n                                        aggiornaAvideo(true);\n                                }\n                        }\n                });\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "errore",
            "sourceCode": "boolean errore()\n        {\n        \t\tFrame msg;\n        \t\t\n                if ((num_coperti.getText()).equals(\"\"))\n                {\n                        msg = new MessageDialog(this, \"Inserire il numero di coperti!\");\n                        return true;\n                }\n                else if ( !Utils.isIntPos(num_coperti.getText()) )\n                {\n                \t\tmsg = new MessageDialog(this, \"Il numero dei coperti deve essere un numero intero!\");\n                \t\treturn true;\n                }\n                else if (extra.getSelectedIndex() == -1)\n                {\n                        msg = new MessageDialog(this, \"Manca selezione!\");\n                        return true;\n                }\n                else\n                        return false;\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "posExtraInAddebiti",
            "sourceCode": "int posExtraInAddebiti(BeneServizio b)\n        {\n                for (int i = 1; i <= elenco_addebiti.length(); i++)\n                        if ( ((elenco_addebiti.getAddebito(i)).getCodExtra()).equals(b.getCodExtra()) )\n                                return i;\n                return -1;\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "aggiornaAvideo",
            "sourceCode": "void aggiornaAvideo(boolean addebito)\n        {\n        \t\tFrame msg;\n                int supp[];\n\n                BeneServizio extra_scelto = elenco_extra.getBeneServizio( extra.getSelectedIndex() + 1 );\n                int pos;\n                if ((pos = posExtraInAddebiti(extra_scelto)) < 0 && addebito)\n                {\n                        Addebito a = new Addebito(\"RIST\", extra_scelto.getCodExtra(), 0, 0);\n                        elenco_addebiti.addAddebito( a );\n                        elenco_extra_addebitati.addBeneServizio( extra_scelto );\n\n                        // allungo l'array delle quantita' modificate\n                        supp = new int[elenco_addebiti.length()];\n                        for (int i = 0; i<quantita_mod.length; i++)\n                                supp[i] = quantita_mod[i];\n                        supp[supp.length - 1] = 1;\n                        quantita_mod = supp;\n                        pos = quantita_mod.length;\n                        extra_add.setText(extra.getSelectedItem());\n                        continuaAggiornamento();\n                }\n                else\n                {\n                        if (pos < 0)\n                        {\n                                // sto cercando di togliere da un addebito inesistente\n                                msg = new AvvisoDialog(this, \"Stai cercando di togliere da un addebito ormai inesistente!\");\n                        }\n                        else\n                        {\n                                // aggiorno tale array per contenere l'addebito appena effettuato\n                                if (addebito)\n                                {\n                                        quantita_mod[pos - 1]++;\n                                        extra_add.setText(extra.getSelectedItem());\n                                        continuaAggiornamento();\n                                }\n                                else\n                                        if ( quantita_mod[pos - 1] > 0)\n                                        {\n                                                quantita_mod[pos - 1]--;\n                                                extra_add.setText(extra.getSelectedItem());\n                                                continuaAggiornamento();\n                                        }\n                                        else\n\t\t\t                                msg = new AvvisoDialog(this, \"Stai cercando di togliere da un addebito ormai inesistente!\");\n                        }\n                }\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "continuaAggiornamento",
            "sourceCode": "void continuaAggiornamento()\n        {\n                int i = 1;\n                BeneServizio e;\n                float conto = 0;\n                float conto_di_questo_extra;\n                \n                if (addebiti.getItemCount() > 0)\n                        addebiti.removeAll();\n                while ( i <= elenco_addebiti.length() )\n                {\n\t\t\t\t\t\tif (quantita_mod[i-1] != 0)\n\t\t\t\t\t\t{\n\t                        e = elenco_extra_addebitati.getBeneServizio(i);\n\t                        conto_di_questo_extra = quantita_mod[i-1]*e.getPxUnitario();\n    \t                    if ( Integer.parseInt(e.getCodExtra()) >= 40000000 && Integer.parseInt(e.getCodExtra()) < 50000000)\n        \t                        addebiti.addItem(\"S \"+Utils.completaStringa(e.getDescrizione(), 32)+\" \"+(Principale.config).getValuta()+\".\"+(elenco_addebiti.getAddebito(i)).getTotAddebito());\n            \t            else if ( Integer.parseInt(e.getCodExtra()) >= 50000000)\n                \t                addebiti.addItem(\"R \"+Utils.completaStringa(e.getDescrizione(), 32)+\" \"+(Principale.config).getValuta()+\".\"+(elenco_addebiti.getAddebito(i)).getTotAddebito());\n                    \t    else\n                        \t        addebiti.addItem( Utils.completaStringa(e.getDescrizione(),10)+Utils.completaStringa(\" x \"+quantita_mod[i-1], 5)+(Principale.config).getValuta()+\".\"+conto_di_questo_extra );\n\t                        conto = conto + conto_di_questo_extra;\n    \t                }\n   \t                    i++;\n                }\n                totale.setText((Principale.config).getValuta()+\".\"+conto);\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "stampaConto",
            "sourceCode": "void stampaConto()\n        {\n\t\t\tif (!errore())\n\t\t\t{\n\t        \twriteFile();\n                dispose();\n                padre.setEnabled(true);\n\t        }\n        }"
        },
        {
            "parentClass": "MascheraContoRistorazione",
            "name": "writeFile",
            "sourceCode": "private void writeFile()\n\t\t{\n\t\t\tFrame msg;\n\t\t\tfloat costo_coperti;\n\t\t\n\t\t\tDataOutputStream outStream;\n\t\t\ttry\n\t\t\t{\t\n\t\t\t\toutStream = new DataOutputStream(new FileOutputStream(\"conto.abg\"));\n\t\t\t}\n\t\t\tcatch (IOException ex)\n\t\t\t{\n\t\t\t\tmsg = new MessageDialog(this,\"Errore nell'apertura del file del conto\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry\n\t\t\t{\n\t\t\t\toutStream.writeBytes( (Principale.config).getNomeAlbergo()+\"\\n\" );\n\t\t\t\toutStream.writeBytes( \"\\n\" );\n\t\t\t\toutStream.writeBytes( (Principale.config).getRagSoc()+\"\\n\" );\n\t\t\t\toutStream.writeBytes( (Principale.config).getIndirizzoAlb()+\"\\n\" );\n\t\t\t\toutStream.writeBytes( (Principale.config).getComuneAlb()+\"\\n\" );\n\t\t\t\toutStream.writeBytes( (Principale.config).getCittaAlb()+\"\\n\" );\n\t\t\t\toutStream.writeBytes( \"\\n\" );\n\n\t\t\t\tBeneServizio extra;\n\t\t\t\tAddebito a;\t\t\t\t\n\t\t\t\tint num;\n\t\t\t\tString supporto;\n\t\t\t\tfloat conto_totale;\n\t\t\t\t\n\t\t\t\tfor(int i=1; i<=elenco_addebiti.length(); i++)\n\t\t\t\t{\n\t\t\t\t\tif (quantita_mod[i-1] != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = elenco_addebiti.getAddebito(i);\n\t\t\t\t\t\textra = elenco_extra_addebitati.getBeneServizio(i);\n\t\t\t\t\t\tnum = quantita_mod[i-1];\n\t\t\t\t\t\tif ( (extra.getCodExtra()).compareTo(\"40000000\") < 0 )\n\t\t\t\t\t\t\tsupporto = new String(extra.getDescrizione()+\" x \"+num+\" \");\n\t\t\t\t\t\telse if ( (extra.getCodExtra()).compareTo(\"50000000\") < 0 )\n\t\t\t\t\t\t\tsupporto = new String(\"Supplemento per \"+extra.getDescrizione()+\" \");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsupporto = new String(\"Riduzione per \"+extra.getDescrizione()+\" \");\n\t\t\t\t\t\twhile (supporto.length() < 52)\n\t\t\t\t\t\t\tsupporto = new String(supporto+\" \");\n\t\t\t\t\t\toutStream.writeBytes(supporto+(Principale.config).getValuta()+\".\"+\n\t\t\t\t\t\t\t\t\t\t\t\tnum*extra.getPxUnitario()+\"\\n\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsupporto = new String(\"Coperto x \"+num_coperti.getText());\n\t\t\t\twhile (supporto.length() < 52)\n\t\t\t\t\tsupporto = new String(supporto+\" \");\n\t\t\t\tcosto_coperti = Integer.parseInt(num_coperti.getText())*(Principale.config).getCoperto();\n\t\t\t\toutStream.writeBytes(supporto+(Principale.config).getValuta()+\".\"+costo_coperti+\"\\n\");\n\t\t\t\toutStream.writeBytes(\"\\n\");\n\t\t\t\tsupporto = new String(\"Totale\");\n\t\t\t\twhile (supporto.length() < 52)\n\t\t\t\t\tsupporto = new String(supporto+\" \");\n\t\t\t\tconto_totale = (Float.valueOf( new String((totale.getText()).substring(2)) )).floatValue()+costo_coperti;\n\t\t\t\toutStream.writeBytes( supporto+(Principale.config).getValuta()+\".\"+conto_totale );\n\t\t\t\toutStream.close();\n\t\t\t}\t\n\t\t\tcatch (IOException ex)\n\t\t\t{\n\t\t\t\tmsg = new MessageDialog(this,\"Errore nella scrittura del file del conto\");\t\n\t\t\t\treturn;\n\t\t\t}\t\t\t\n\t\t}"
        }
    ]
}