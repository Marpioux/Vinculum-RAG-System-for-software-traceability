{
    "VisitRemindersDAO": [
        {
            "parentClass": "VisitRemindersDAO",
            "name": "VisitRemindersDAO",
            "sourceCode": "public VisitRemindersDAO(DAOFactory factory) {\r\n\t\tthis.factory = factory;\r\n\t}"
        },
        {
            "parentClass": "VisitRemindersDAO",
            "name": "getPatients",
            "sourceCode": "public List<VisitReminderReturnForm> getPatients(long hcpid) throws DBException {\r\n\t\t\r\n\t\r\n\t\tVisitReminderReturnForm temp;\r\n\t\tVisitReminderReturnFormLoader loader = new VisitReminderReturnFormLoader();\r\n\t\tList<VisitReminderReturnForm> patients = new ArrayList<VisitReminderReturnForm>();\r\n\t\t\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\tResultSet rs = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\r\n\t\t\t\t\t  \"SELECT DISTINCT\" \r\n\t\t\t\t\t+ \"       ? as hid, \"\r\n\t\t\t\t\t+ \"       dhcp.patientid, \"\r\n\t\t\t\t\t+ \"       p.lastName, \"\r\n\t\t\t\t\t+ \"       p.firstName, \"\r\n\t\t\t\t\t+ \"       p.phone1, \"\r\n\t\t\t\t\t+ \"       p.phone2, \"\r\n\t\t\t\t\t+ \"       p.phone3 \"\r\n\t\t\t\t\t+ \"  FROM \"\r\n\t\t\t\t\t+ \"       Patients p, \"\r\n\t\t\t\t\t+ \"       declaredhcp dhcp \"\r\n\t\t\t\t\t+ \" WHERE \"\r\n\t\t\t\t\t+ \"\t\tdhcp.hcpid = ? \"\r\n\t\t\t\t\t+ \" AND \"\r\n\t\t\t\t\t+ \"     p.MID = dhcp.patientid \"\r\n\t\t\t\t\t+ \" AND \"\r\n\t\t\t\t\t+ \"\t\tp.dateofdeath is null \"\r\n\t\t\t\t\t+ \" AND \"\r\n\t\t\t\t\t+ \"     p.dateofbirth > DATE_SUB(CURDATE(), INTERVAL 19 YEAR) \"\r\n\t\t\t\t\t);\r\n\r\n\t\t\tps.setLong(1, hcpid);\r\n\t\t\tps.setLong(2, hcpid);\r\n\t\t\trs = ps.executeQuery();\r\n\r\n\t\t\twhile (rs.next()) {\r\n\t\t\t\ttemp = loader.loadSingle(rs);\r\n\t\t\t\tpatients.add(temp);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} \r\n\t\tfinally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t\treturn patients;\r\n\t}"
        },
        {
            "parentClass": "VisitRemindersDAO",
            "name": "getDiagnosedVisitNeeders",
            "sourceCode": "public List<VisitReminderReturnForm> getDiagnosedVisitNeeders(long hcpid) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\tResultSet rs = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\r\n\t\t\t\t\t  \"SELECT DISTINCT\" \r\n\t\t\t\t\t+ \"       ? as hid, \"\r\n\t\t\t\t\t+ \"       ov.PatientID, \"\r\n\t\t\t\t\t+ \"       p.lastName, \"\r\n\t\t\t\t\t+ \"       p.firstName, \"\r\n\t\t\t\t\t+ \"       p.phone1, \"\r\n\t\t\t\t\t+ \"       p.phone2, \"\r\n\t\t\t\t\t+ \"       p.phone3, \"\r\n\t\t\t\t\t+ \"       ovd.ICDCode, \"\r\n\t\t\t\t\t+ \"       ov.visitDate \"\r\n\t\t\t\t\t+ \"  FROM \"\r\n\t\t\t\t\t+ \"       Patients p, \"\r\n\t\t\t\t\t+ \"       OfficeVisits ov, \"\r\n\t\t\t\t\t+ \"       OVDiagnosis ovd \"\r\n\t\t\t\t\t+ \" WHERE \"\r\n\t\t\t\t\t+ \"       p.MID = ov.PatientID \"\r\n\t\t\t\t\t+ \"   AND \"\r\n\t\t\t\t\t+ \"       ov.ID = ovd.VisitID \"\r\n\t\t\t\t\t+ \"   AND \"\r\n\t\t\t\t\t+ \"       p.DateOfDeath is null \"\r\n\t\t\t\t\t+ \"   AND \"\r\n\t\t\t\t\t+ \"       ov.visitDate <= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) \"\r\n\t\t\t\t\t+ \"   AND \"\r\n\t\t\t\t\t+ \"       ( \"\r\n\t\t\t\t\t+ \"            ovd.ICDCode BETWEEN ? AND ? \" //250.00 AND 250.99\r\n\t\t\t\t\t+ \"         OR \"\r\n\t\t\t\t\t+ \"            ovd.ICDCode BETWEEN ? AND ? \" //390.00 AND 459.99\r\n\t\t\t\t\t+ \"         OR \"\r\n\t\t\t\t\t+ \"            ovd.ICDCode BETWEEN ? AND ? \" //493.00 AND 493.99\r\n\t\t\t\t\t+ \"        )\"\r\n\t\t\t\t\t+ \"GROUP BY \"\r\n\t\t\t\t\t+ \"       p.MID \"\r\n\t\t\t\t\t+ \"ORDER BY \"\r\n\t\t\t\t\t+ \" p.lastName, p.firstName, ov.PatientID \");\r\n\r\n\t\t\tps.setLong(1, hcpid);\r\n\t\t\t\r\n\t\t\tps.setFloat(2, 250.0f);\r\n\t\t\tps.setFloat(3, 250.99f);\r\n\t\t\t\t\r\n\t\t\tps.setFloat(4, 390.0f);\r\n\t\t\tps.setFloat(5, 459.99f);\r\n\t\t\t\t\r\n\t\t\tps.setFloat(6, 493.0f);\r\n\t\t\tps.setFloat(7, 493.99f);\r\n\t\t\t\r\n\t\t\trs = ps.executeQuery();\r\n\t\t\tList<VisitReminderReturnForm> patients = new ArrayList<VisitReminderReturnForm>();\r\n\t\t\tVisitReminderReturnForm temp;\r\n\t\t\tVisitReminderReturnFormLoader loader = new VisitReminderReturnFormLoader();\r\n\t\t\twhile (rs.next()) {\r\n\t\t\t\ttemp = loader.loadSingle(rs);\r\n\t\t\t\ttemp.addVisitFlag(new VisitFlag(VisitFlag.DIAGNOSED, rs.getString(8)));\r\n\t\t\t\ttemp.addVisitFlag(new VisitFlag(VisitFlag.LAST_VISIT, rs.getString(9)));\r\n\t\t\t\tpatients.add(temp);\r\n\t\t\t}\r\n\t\t\treturn patients;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "VisitRemindersDAO",
            "name": "getFluShotDelinquents",
            "sourceCode": "public List<VisitReminderReturnForm> getFluShotDelinquents(long hcpid) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\tResultSet rs = null;\r\n\r\n\t\t/*\r\n\t\t * Fall 2007 Bug Fix: Use the correct range for a zero-based calendar (eg January is 0)\r\n\t\t * \r\n\t\t */\r\n\t\tboolean thisYear = DateUtil.currentlyInMonthRange(8, 11);\r\n\r\n\t\tString flagType = thisYear ? VisitFlag.MISSING_MEDICATION : VisitFlag.MISSED_MEDICATION;\r\n\r\n\t\tjava.sql.Date september = new java.sql.Date(0l), december = new java.sql.Date(0l);\r\n\t\tDateUtil.setSQLMonthRange(september, 8, thisYear ? 0 : 1, december, 11, thisYear ? 0 : 1);\r\n\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT DISTINCT \"\r\n\t\t\t\t\t+ \"? as hid, ov.patientid, p.lastname, p.firstname, \" + \"p.phone1, p.phone2, p.phone3 \"\r\n\t\t\t\t\t+ \"FROM OfficeVisits ov, Patients p \" + \"WHERE ov.patientid=p.mid \"\r\n\t\t\t\t\t+ \"AND p.dateofdeath IS NULL \"\r\n\t\t\t\t\t+ \"AND p.dateofbirth < DATE_SUB(CURDATE(), INTERVAL 50 YEAR) \" + \"AND patientid NOT IN \"\r\n\t\t\t\t\t+ \"(SELECT patientid FROM OfficeVisits ov, OVMedication om \" + \"WHERE ov.id=om.visitid \"\r\n\t\t\t\t\t+ \"AND NDCode IN (90656, 90658, 90660) \" + \"AND ((StartDate BETWEEN ? AND ?) \"\r\n\t\t\t\t\t+ \"OR (EndDate BETWEEN ? AND ?))) \" + \"ORDER BY lastname, firstname, ov.patientid\");\r\n\t\t\tps.setLong(1, hcpid);\r\n\t\t\tps.setDate(2, september);\r\n\t\t\tps.setDate(3, december);\r\n\t\t\tps.setDate(4, september);\r\n\t\t\tps.setDate(5, december);\r\n\t\t\trs = ps.executeQuery();\r\n\t\t\tList<VisitReminderReturnForm> patients = new ArrayList<VisitReminderReturnForm>();\r\n\t\t\tVisitReminderReturnForm temp;\r\n\t\t\tVisitReminderReturnFormLoader loader = new VisitReminderReturnFormLoader();\r\n\t\t\twhile (rs.next()) {\r\n\t\t\t\ttemp = loader.loadSingle(rs);\r\n\t\t\t\ttemp.addVisitFlag(new VisitFlag(flagType, \"Flu Shot\"));\r\n\t\t\t\tpatients.add(temp);\r\n\t\t\t}\r\n\t\t\treturn patients;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        }
    ]
}