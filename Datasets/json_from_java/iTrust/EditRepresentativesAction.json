{
    "EditRepresentativesAction": [
        {
            "parentClass": "EditRepresentativesAction",
            "name": "EditRepresentativesAction",
            "sourceCode": "public EditRepresentativesAction(DAOFactory factory, long loggedInMID, String pidString)\r\n\t\t\tthrows iTrustException {\r\n\t\tsuper(factory, pidString);\r\n\t\tthis.loggedInMID = loggedInMID;\r\n\t\tthis.transDAO = factory.getTransactionDAO();\r\n\t\tthis.patientDAO = factory.getPatientDAO();\r\n\t\tthis.authDAO = factory.getAuthDAO();\r\n\t}"
        },
        {
            "parentClass": "EditRepresentativesAction",
            "name": "getRepresented",
            "sourceCode": "public List<PatientBean> getRepresented(long pid) throws iTrustException {\r\n\t\treturn patientDAO.getRepresented(pid);\r\n\t}"
        },
        {
            "parentClass": "EditRepresentativesAction",
            "name": "addRepresentative",
            "sourceCode": "public String addRepresentative(String pidString) throws iTrustException {\r\n\t\ttry {\r\n\t\t\tlong representee = Long.valueOf(pidString);\r\n\t\t\tif (authDAO.getUserRole(representee) != Role.PATIENT)\r\n\t\t\t\tthrow new iTrustException(\"This user is not a patient!\");\r\n\t\t\telse if (super.pid == representee)\r\n\t\t\t\tthrow new iTrustException(\"This user cannot represent themselves.\");\r\n\r\n\t\t\tboolean confirm = patientDAO.addRepresentative(pid, representee);\r\n\t\t\tif (confirm) {\r\n\t\t\t\ttransDAO.logTransaction(TransactionType.DECLARE_REPRESENTATIVE, loggedInMID, pid, \"patient \"\r\n\t\t\t\t\t\t+ pid + \" now represents patient \" + representee);\r\n\t\t\t\treturn \"Patient represented\";\r\n\t\t\t} else\r\n\t\t\t\treturn \"No change made\";\r\n\t\t} catch (NumberFormatException e) {\r\n\t\t\treturn \"MID not a number\";\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "EditRepresentativesAction",
            "name": "removeRepresentative",
            "sourceCode": "public String removeRepresentative(String input) throws iTrustException {\r\n\t\ttry {\r\n\t\t\tlong representee = Long.valueOf(input);\r\n\t\t\tboolean confirm = patientDAO.removeRepresentative(pid, representee);\r\n\t\t\tif (confirm) {\r\n\t\t\t\ttransDAO.logTransaction(TransactionType.DECLARE_REPRESENTATIVE, loggedInMID, pid, \"patient \"\r\n\t\t\t\t\t\t+ pid + \" no longer represents patient \" + representee);\r\n\t\t\t\treturn \"Patient represented\";\r\n\t\t\t} else\r\n\t\t\t\treturn \"No change made\";\r\n\t\t} catch (NumberFormatException e) {\r\n\t\t\treturn \"MID not a number\";\r\n\t\t}\r\n\t}"
        }
    ]
}