{
    "FakeEmailDAO": [
        {
            "parentClass": "FakeEmailDAO",
            "name": "FakeEmailDAO",
            "sourceCode": "public FakeEmailDAO(DAOFactory factory) {\r\n\t\tthis.factory = factory;\r\n\t}"
        },
        {
            "parentClass": "FakeEmailDAO",
            "name": "getAllEmails",
            "sourceCode": "public List<Email> getAllEmails() throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM FakeEmail ORDER BY AddedDate DESC\");\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn emailBeanLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "FakeEmailDAO",
            "name": "getEmailsByPerson",
            "sourceCode": "public List<Email> getEmailsByPerson(String email) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM FakeEmail WHERE ToAddr LIKE ? ORDER BY AddedDate DESC\");\r\n\t\t\tps.setString(1, \"%\" + email + \"%\");\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn emailBeanLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "FakeEmailDAO",
            "name": "sendEmailRecord",
            "sourceCode": "public void sendEmailRecord(Email email) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"INSERT INTO FakeEmail (ToAddr, FromAddr, Subject, Body) \"\r\n\t\t\t\t\t+ \"VALUES (?,?,?,?)\");\r\n\t\t\temailBeanLoader.loadParameters(ps, email);\r\n\t\t\tps.executeUpdate();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "FakeEmailDAO",
            "name": "getEmailWithBody",
            "sourceCode": "public List<Email> getEmailWithBody(String bodySubstring) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM FakeEmail WHERE Instr(Body,?)>0 ORDER BY AddedDate DESC\");\r\n\t\t\tps.setString(1, bodySubstring);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn emailBeanLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        }
    ]
}