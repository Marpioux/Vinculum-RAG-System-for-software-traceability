{
    "GetVisitRemindersAction": [
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "GetVisitRemindersAction",
            "sourceCode": "public GetVisitRemindersAction(DAOFactory factory, long loggedInMID) throws iTrustException {\r\n\t\tthis.transDAO = factory.getTransactionDAO();\r\n\t\tthis.loggedInMID = loggedInMID;\r\n\t\tvisitReminderDAO = factory.getVisitRemindersDAO();\r\n\t\tpatientDAO = factory.getPatientDAO();\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "getVisitReminders",
            "sourceCode": "public List<VisitReminderReturnForm> getVisitReminders(ReminderType type) throws iTrustException, FormValidationException {\r\n\t\t\r\n\t\tif (null == type)\r\n\t\t\tthrow new iTrustException(\"Reminder Type DNE\");\r\n\t\t\r\n\t\ttransDAO.logTransaction(TransactionType.PATIENT_REMINDERS, loggedInMID, 0l, type.getTypeName());\r\n\t\tswitch (type) {\r\n\t\t\tcase DIAGNOSED_CARE_NEEDERS:\r\n\t\t\t\treturn stripDupes(visitReminderDAO.getDiagnosedVisitNeeders(loggedInMID));\r\n\r\n\t\t\tcase FLU_SHOT_NEEDERS:\r\n\t\t\t\treturn visitReminderDAO.getFluShotDelinquents(loggedInMID);\r\n\t\t\t\t\r\n\t\t\tcase IMMUNIZATION_NEEDERS:\r\n\t\t\t\treturn getImmunizationNeeders(loggedInMID);\r\n\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new iTrustException(\"Reminder Type DNE\");\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "getImmunizationNeeders",
            "sourceCode": "private List<VisitReminderReturnForm> getImmunizationNeeders(long mid) throws iTrustException {\r\n\t\t\r\n\t\tList<VisitReminderReturnForm> formList;\r\n\t\tList<VisitReminderReturnForm> needList = new ArrayList<VisitReminderReturnForm>();\r\n\t\tString reason = \"\";\r\n\t\t// Get list of patients that designate this HCP\r\n\t\tformList = visitReminderDAO.getPatients(mid);\r\n\t\t\r\n\t\tfor (VisitReminderReturnForm r : formList) {\r\n\t\t\treason = checkImmunizations(r.getPatientID());\r\n\t\t\tif (0 < reason.length()) {\r\n\t\t\t\tneedList.add(r);\r\n\t\t\t\tr.addVisitFlag(new VisitFlag(VisitFlag.IMMUNIZATION, reason));\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\r\n\t\treturn needList;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "checkImmunizations",
            "sourceCode": "private String checkImmunizations(long pid) throws iTrustException {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tList<ProcedureBean> procs = patientDAO.getProcedures(pid);\r\n\t\tPatientBean patient = patientDAO.getPatient(pid);\r\n\t\tlong patientAge = patient.getAgeInWeeks();\r\n\t\tGender gen = patient.getGender();\r\n\t\t\r\n\t\tint hepB = 0;\r\n\t\tlong hepBTime = 0;\r\n\r\n\t\tint rota = 0;\r\n\t\tlong rotaTime = 0;\r\n\r\n\t\tint diptet = 0;\r\n\t\tlong deptetTime = 0;\r\n\t\t\r\n\t\tint haemoflu = 0;\r\n\t\tlong haemofluTime = 0;\r\n\t\tlong haemofluTimeFirst = 0;\r\n\t\t\r\n\t\tint pneumo = 0;\r\n\t\tlong pneumoTime = 0;\r\n\t\tlong pneumofluTimeFirst = 0;\r\n\t\t\r\n\t\tint polio = 0;\r\n\t\tlong polioTime = 0;\r\n\t\t\r\n\t\tint measles = 0;\r\n\t\tlong measlesTime = 0;\r\n\t\t\r\n\t\tint varicella = 0;\r\n\t\tlong varicellaTime = 0;\r\n\t\t\r\n\t\tint hepA = 0;\r\n\t\tlong hepATime = 0;\r\n\t\t\r\n\t\tint hpv = 0;\r\n\t\tlong hpvTime = 0;\r\n\t\t\r\n\t\tfor (ProcedureBean proc: procs) {\r\n\t\t\r\n\t\t\tString cpt = proc.getCPTCode();\r\n\t\t\t\r\n\t\t\t// Hep B (90371)\r\n\t\t\tif (cpt.equals(\"90371\")) {\r\n\t\t\t\thepB++;\r\n\t\t\t\thepBTime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t// Rotavirus (90681)\r\n\t\t\telse if (cpt.equals(\"90681\")) {\r\n\t\t\t\trota++;\r\n\t\t\t\trotaTime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Diptheria, Tetanus, Pertussis (90696)\r\n\t\t\telse if (cpt.equals(\"90696\")) {\r\n\t\t\t\tdiptet++;\r\n\t\t\t\tdeptetTime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Haemophilus influenza (90645)\r\n\t\t\telse if (cpt.equals(\"90645\")) {\r\n\t\t\t\tif (0 == haemoflu)\r\n\t\t\t\t\thaemofluTimeFirst = proc.getDate().getTime();\r\n\t\t\t\t\r\n\t\t\t\thaemoflu++;\r\n\t\t\t\thaemofluTime = proc.getDate().getTime();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Pneumococcal (90669)\r\n\t\t\telse if (cpt.equals(\"90669\")) {\r\n\t\t\t\tif (0 == pneumo)\r\n\t\t\t\t\tpneumofluTimeFirst = proc.getDate().getTime();\r\n\t\t\t\tpneumo++;\r\n\t\t\t\tpneumoTime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Poliovirus (90712)\r\n\t\t\telse if (cpt.equals(\"90712\")) {\r\n\t\t\t\tpolio++;\r\n\t\t\t\tpolioTime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Measles, Mumps, Rubella (90707)\r\n\t\t\telse if (cpt.equals(\"90707\")) {\r\n\t\t\t\tmeasles++;\r\n\t\t\t\tmeaslesTime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Varicella (90396)\r\n\t\t\telse if (cpt.equals(\"90396\")) {\r\n\t\t\t\tvaricella++;\r\n\t\t\t\tvaricellaTime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Hep A (90633)\r\n\t\t\telse if (cpt.equals(\"90633\")) {\r\n\t\t\t\thepA++;\r\n\t\t\t\thepATime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Human Papillomaavirus (90649)\r\n\t\t\telse if (cpt.equals(\"90649\")) {\r\n\t\t\t\thpv++;\r\n\t\t\t\thpvTime = proc.getDate().getTime();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (3 > hepB) {\r\n\t\t\treason += testHepB(hepB, patientAge, hepBTime);\r\n\t\t}\r\n\t\t\r\n\t\tif (3 > rota) {\r\n\t\t\treason += testRotaVirus(rota, patientAge, rotaTime);\r\n\t\t}\r\n\t\t\r\n\t\tif (6 > diptet) {\r\n\t\t\treason += testDipTet(diptet, patientAge, deptetTime);\r\n\t\t}\r\n\t\t\r\n\t\tif (3 > haemoflu) {\r\n\t\t\treason += testHaemoFlu(haemoflu, patientAge, haemofluTime, haemofluTimeFirst);\r\n\t\t}\r\n\t\t\r\n\t\tif (4 > pneumo) {\r\n\t\t\treason += testPneumo(pneumo, patientAge, pneumoTime, pneumofluTimeFirst);\r\n\t\t}\r\n\t\t\r\n\t\tif (3 > polio) {\r\n\t\t\treason += testPolio(polio, patientAge, polioTime);\r\n\t\t}\r\n\t\t\r\n\t\tif (2 > measles) {\r\n\t\t\treason += testMeasles(measles, patientAge, measlesTime);\r\n\t\t}\r\n\t\t\r\n\t\tif (2 > varicella) {\r\n\t\t\treason += testVaricella(varicella, patientAge, varicellaTime);\r\n\t\t}\r\n\t\t\r\n\t\tif (2 > hepA) {\r\n\t\t\treason += testHepA(hepA, patientAge, hepATime);\r\n\t\t}\r\n\t\t\r\n\t\tif (3 > hpv && gen.getName().equals(\"Female\")) {\r\n\t\t\treason += testHPV(hpv, patientAge, hpvTime);\r\n\t\t}\r\n\t\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testHPV",
            "sourceCode": "public static String testHPV(int count, long patientAge, long time) {\r\n\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (468 <= patientAge)\r\n\t\t\t\treason += \"90649 Human Papillomavirus (9 years) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (476 <= patientAge && 8 <= weeks)\r\n\t\t\t\treason += \"90649 Human Papillomavirus (9 years, 2 months) \";\r\n\t\t}\r\n\t\telse if (2 == count) {\r\n\t\t\tif (494 <= patientAge && 16 <= weeks)\r\n\t\t\t\treason += \"90649 Human Papillomavirus (9 years, 6 months) \";\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testHepA",
            "sourceCode": "public static String testHepA(int count, long patientAge, long time) {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (52 <= patientAge)\r\n\t\t\t\treason += \"90633 Hepatits A (12 months) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (78 <= patientAge && 26 <= weeks)\r\n\t\t\t\treason += \"90633 Hepatits A (18 months) \";\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\t\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testVaricella",
            "sourceCode": "public static String testVaricella(int count, long patientAge, long time) {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (52 <= patientAge)\r\n\t\t\t\treason += \"90396 Varicella (12 months) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (208 <= patientAge && 12 <= weeks)\r\n\t\t\t\treason += \"90396 Varicella (4 years) \";\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testMeasles",
            "sourceCode": "public static String testMeasles(int count, long patientAge, long time) {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (52 <= patientAge)\r\n\t\t\t\treason += \"90707 Measles, Mumps, Rubekka (12 months) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (208 <= patientAge && 12 <= weeks)\r\n\t\t\t\treason += \"90707 Measles, Mumps, Rubekka (4 years) \";\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testPolio",
            "sourceCode": "public static String testPolio(int count, long patientAge, long time) {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (6 <= patientAge)\r\n\t\t\t\treason += \"90712 Poliovirus (6 weeks) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (16 <= patientAge && 4 <= weeks)\r\n\t\t\t\treason += \"90712 Poliovirus (4 months) \";\r\n\t\t}\r\n\t\telse if (2 == count) {\r\n\t\t\tif (26 <= patientAge)\r\n\t\t\t\treason += \"90712 Poliovirus (6 months) \";\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\t\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testPneumo",
            "sourceCode": "public static String testPneumo(int count, long patientAge, long time, long firstDoseTime) {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\tlong ageFirst = patientAge - (firstDoseTime / (1000 * 60 * 60 * 24 * 7)); \r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (6 <= patientAge)\r\n\t\t\t\treason += \"90669 Pneumococcal (6 weeks) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (16 <= patientAge && 52 > ageFirst && 4 <= weeks)\r\n\t\t\t\treason += \"90669 Pneumococcal (4 months) \";\r\n\t\t\telse if (16 <= patientAge && 52 <= ageFirst && 60 >= ageFirst && 8 <= weeks)\r\n\t\t\t\treason += \"90669 Pneumococcal (4 months) \";\r\n\t\t}\r\n\t\telse if (2 == count) {\r\n\t\t\tif (26 <= patientAge && 4 <= weeks && 52 >= ageFirst)\r\n\t\t\t\treason += \"90669 Pneumococcal (6 months) \";\t\t\t\t\r\n\t\t}\r\n\t\telse if (3 == count) {\r\n\t\t\tif (52 <= patientAge && 8 <= weeks && 52 >= ageFirst)\r\n\t\t\t\treason += \"90669 Pneumococcal (12 months) \";\t\t\t\t\r\n\t\t}\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testHaemoFlu",
            "sourceCode": "public static String testHaemoFlu(int count, long patientAge, long time, long firstDoseTime) {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\tlong ageFirst = patientAge - (firstDoseTime / (1000 * 60 * 60 * 24 * 7)); \r\n\t\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (6 <= patientAge)\r\n\t\t\t\treason += \"90645 Haemophilus influenzae (6 weeks) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (16 <= patientAge && 52 > ageFirst && 4 <= weeks)\r\n\t\t\t\treason += \"90645 Haemophilus influenzae (4 months) \";\r\n\t\t\telse if (16 <= patientAge && 52 <= ageFirst && 60 >= ageFirst && 8 <= weeks)\r\n\t\t\t\treason += \"90645 Haemophilus influenzae (4 months) \";\r\n\t\t}\r\n\t\telse if (2 == count) {\r\n\t\t\tif (26 <= patientAge && 4 <= weeks && 52 > ageFirst)\r\n\t\t\t\treason += \"90645 Haemophilus influenzae (6 months) \";\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testDipTet",
            "sourceCode": "public static String testDipTet(int count, long patientAge, long time) {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (6 <= patientAge)\r\n\t\t\t\treason += \"90696 Diphtheria, Tetanus, Pertussis (6 weeks) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (16 <= patientAge && 4 <= weeks )\r\n\t\t\t\treason += \"90696 Diphtheria, Tetanus, Pertussis (4 months) \";\r\n\t\t}\r\n\t\telse if (2 == count) {\r\n\t\t\tif (26 <= patientAge && 4 <= weeks)\r\n\t\t\t\treason += \"90696 Diphtheria, Tetanus, Pertussis (6 months) \";\t\t\t\t\r\n\t\t}\r\n\t\telse if (3 == count) {\r\n\t\t\tif (15 <= patientAge && 26 <= weeks)\r\n\t\t\t\treason += \"90696 Diphtheria, Tetanus, Pertussis (15 weeks) \";\r\n\t\t}\r\n\t\telse if (4 == count) {\r\n\t\t\tif (208 <= patientAge && 26 <= weeks)\r\n\t\t\t\treason += \"90696 Diphtheria, Tetanus, Pertussis (4 years) \";\r\n\t\t}\r\n\t\telse if (5 == count) {\r\n\t\t\tif (572 <= patientAge && 260 <= weeks)\r\n\t\t\t\treason += \"90696 Diphtheria, Tetanus, Pertussis (11 years) \";\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testRotaVirus",
            "sourceCode": "public static String testRotaVirus(int count, long patientAge, long time) {\r\n\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (6 <= patientAge)\r\n\t\t\t\treason += \"90681 Rotavirus (6 weeks) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (16 <= patientAge && 4 <= weeks)\r\n\t\t\t\treason += \"90681 Rotavirus (4 months) \";\r\n\t\t}\r\n\t\telse if (2 == count) {\r\n\t\t\tif (26 <= patientAge && 4 <= weeks )\r\n\t\t\t\treason += \"90681 Rotavirus (6 months) \";\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "testHepB",
            "sourceCode": "public static String testHepB(int count, long patientAge, long time) {\r\n\t\t\r\n\t\tString reason = \"\";\r\n\t\tlong weeks = (Calendar.getInstance().getTimeInMillis() - time) / (1000 * 60 * 60 * 24 * 7);\r\n\t\t\r\n\t\tif (0 == count) {\r\n\t\t\tif (0 < patientAge)\r\n\t\t\t\treason += \"90371 Hepatitis B (birth) \";\r\n\t\t}\r\n\t\telse if (1 == count) {\r\n\t\t\tif (4 <= patientAge && 4 <= weeks)\r\n\t\t\t\treason += \"90371 Hepatitis B (1 month) \";\r\n\t\t}\r\n\t\telse if (2 == count) {\r\n\t\t\tif (26 <= patientAge && 8 <= weeks)\r\n\t\t\t\treason += \"90371 Hepatitis B (6 months) \";\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn reason;\r\n\t}"
        },
        {
            "parentClass": "GetVisitRemindersAction",
            "name": "stripDupes",
            "sourceCode": "private List<VisitReminderReturnForm> stripDupes(List<VisitReminderReturnForm> patients) {\r\n\t\tif (null == patients)\r\n\t\t\treturn null;\r\n\t\tif (0 == patients.size())\r\n\t\t\treturn patients;\r\n\t\tList<VisitReminderReturnForm> retPatients = new ArrayList<VisitReminderReturnForm>();\r\n\t\tVisitReminderReturnForm temp = patients.get(0);\r\n\t\tretPatients.add(temp);\r\n\t\tfor (VisitReminderReturnForm vr : patients) {\r\n\t\t\tif (vr.getPatientID() != temp.getPatientID())\r\n\t\t\t\tretPatients.add(vr);\r\n\t\t\ttemp = vr;\r\n\t\t}\r\n\t\treturn retPatients;\r\n\t}"
        }
    ]
}