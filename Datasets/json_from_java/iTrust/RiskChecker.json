{
    "RiskChecker": [
        {
            "parentClass": "RiskChecker",
            "name": "RiskChecker",
            "sourceCode": "public RiskChecker(DAOFactory factory, long patientID) throws DBException, NoHealthRecordsException {\r\n\t\tthis.factory = factory;\r\n\t\tHealthRecordsDAO hrDAO = factory.getHealthRecordsDAO();\r\n\t\tList<HealthRecord> records = hrDAO.getAllHealthRecords(patientID);\r\n\t\tif (records.size() > 0)\r\n\t\t\tcurrentHealthRecord = records.get(0);\r\n\t\telse\r\n\t\t\tthrow new NoHealthRecordsException();\r\n\r\n\t\tpatient = factory.getPatientDAO().getPatient(patientID);\r\n\t}"
        },
        {
            "parentClass": "RiskChecker",
            "name": "getName",
            "sourceCode": "abstract public String getName();"
        },
        {
            "parentClass": "RiskChecker",
            "name": "getDiseaseRiskFactors",
            "sourceCode": "abstract protected List<PatientRiskFactor> getDiseaseRiskFactors();"
        },
        {
            "parentClass": "RiskChecker",
            "name": "qualifiesForDisease",
            "sourceCode": "abstract public boolean qualifiesForDisease();"
        },
        {
            "parentClass": "RiskChecker",
            "name": "isAtRisk",
            "sourceCode": "public boolean isAtRisk() {\r\n\t\tif (qualifiesForDisease()) {\r\n\t\t\tint numRisks = 0;\r\n\t\t\tList<PatientRiskFactor> diseaseRiskFactors = getDiseaseRiskFactors();\r\n\t\t\tfor (PatientRiskFactor factor : diseaseRiskFactors) {\r\n\t\t\t\tif (factor.hasRiskFactor())\r\n\t\t\t\t\tnumRisks++;\r\n\t\t\t\tif (numRisks >= RISK_THRESHOLD)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false; // both an else from qualifies or NOT over the threshold\r\n\t}"
        },
        {
            "parentClass": "RiskChecker",
            "name": "getPatientRiskFactors",
            "sourceCode": "public List<PatientRiskFactor> getPatientRiskFactors() {\r\n\t\tList<PatientRiskFactor> patientRiskFactors = new ArrayList<PatientRiskFactor>();\r\n\t\tList<PatientRiskFactor> diseaseRiskFactors = getDiseaseRiskFactors();\r\n\t\tfor (PatientRiskFactor factor : diseaseRiskFactors) {\r\n\t\t\tif (factor.hasRiskFactor()) {\r\n\t\t\t\tpatientRiskFactors.add(factor);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn patientRiskFactors;\r\n\t}"
        }
    ]
}