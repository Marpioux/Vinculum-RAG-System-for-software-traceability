{
    "SetSecurityQuestionAction": [
        {
            "parentClass": "SetSecurityQuestionAction",
            "name": "SetSecurityQuestionAction",
            "sourceCode": "public SetSecurityQuestionAction(DAOFactory factory, long rLoggedInMID) throws iTrustException {\r\n\t\tthis.authDAO = factory.getAuthDAO();\r\n\t\tloggedInMID = checkMID(rLoggedInMID);\r\n\t}"
        },
        {
            "parentClass": "SetSecurityQuestionAction",
            "name": "updateInformation",
            "sourceCode": "public void updateInformation(SecurityQA a) throws Exception {\r\n\t\tSecurityQAValidator sqav = new SecurityQAValidator();\r\n\t\tsqav.validate(a);\r\n\t\tauthDAO.setSecurityQuestionAnswer(a.getQuestion(), a.getAnswer(), loggedInMID);\r\n\t}"
        },
        {
            "parentClass": "SetSecurityQuestionAction",
            "name": "retrieveInformation",
            "sourceCode": "public SecurityQA retrieveInformation() throws iTrustException {\r\n\t\tSecurityQA toRet = new SecurityQA();\r\n\t\ttoRet.setAnswer(authDAO.getSecurityAnswer(loggedInMID));\r\n\t\ttoRet.setQuestion(authDAO.getSecurityQuestion(loggedInMID));\r\n\t\treturn toRet;\r\n\t}"
        },
        {
            "parentClass": "SetSecurityQuestionAction",
            "name": "checkMID",
            "sourceCode": "private long checkMID(long mid) throws iTrustException {\r\n\t\tif (!authDAO.checkUserExists(mid))\r\n\t\t\tthrow new iTrustException(\"MID \" + mid + \" is not a user!\");\r\n\t\treturn mid;\r\n\t}"
        }
    ]
}