{
    "MonitorAdverseEventAction": [
        {
            "parentClass": "MonitorAdverseEventAction",
            "name": "MonitorAdverseEventAction",
            "sourceCode": "public MonitorAdverseEventAction(DAOFactory factory, long loggedInMID){\r\n\t\tthis.loggedInMID = loggedInMID;\r\n\t\tthis.transactionDAO = factory.getTransactionDAO();\r\n\t\tthis.patientDAO = factory.getPatientDAO();\r\n\t\tthis.emailer = new EmailUtil(factory);\r\n\t\tthis.adverseEventDAO = factory.getAdverseEventDAO();\r\n\t\tthis.messenger = new SendMessageAction(factory, loggedInMID);\r\n\t\t\r\n\t}"
        },
        {
            "parentClass": "MonitorAdverseEventAction",
            "name": "getReports",
            "sourceCode": "public List<AdverseEventBean> getReports(boolean isPrescription, String start, String end)throws iTrustException, FormValidationException, SQLException, ParseException {\r\n\t\tif(isPrescription) {\r\n\t\t\ttransactionDAO.logTransaction(TransactionType.ADVERSE_EVENT, loggedInMID, 0L, \"Adverse Prescription Reports Requested.\");\r\n\t\t\treturn adverseEventDAO.getPerscriptions(start, end);\r\n\t\t} else { //is Immunization\r\n\t\t\ttransactionDAO.logTransaction(TransactionType.ADVERSE_EVENT, loggedInMID, 0L, \"Adverse Immunization Report Requested.\");\r\n\t\t\treturn adverseEventDAO.getImmunizations(start, end);\r\n\t\t}\r\n\t\t\r\n\t}"
        },
        {
            "parentClass": "MonitorAdverseEventAction",
            "name": "getName",
            "sourceCode": "public String getName(long MID) {\r\n\t\ttry {\r\n\t\t\treturn patientDAO.getName(MID);\r\n\t\t} catch(DBException e) {\r\n\t\t\treturn \"\";\r\n\t\t} catch(iTrustException e) {\r\n\t\t\treturn \"Patient no longer exists\";\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "MonitorAdverseEventAction",
            "name": "sendEmail",
            "sourceCode": "public String sendEmail(long patientMID, String message) throws DBException{\r\n\t\tString rValue;\r\n\t\tList<String> toList = new ArrayList<String>();\r\n\t\tPatientBean receiver = patientDAO.getPatient(patientMID);\r\n\t\ttoList.add(receiver.getEmail());\r\n\t\tEmail mail = new Email();\r\n\t\tmail.setBody(message);\r\n\t\tmail.setFrom(loggedInMID + \"\");\r\n\t\tmail.setToList(toList);\r\n\t\temailer.sendEmail(mail);\r\n\t\ttransactionDAO.logTransaction(TransactionType.ADVERSE_EVENT, loggedInMID, 0L, \"Requested more information\");\r\n\t\trValue = \"\" + mail.getFrom() + \" \" + mail.getBody();\r\n\t\treturn rValue;\r\n\t}"
        },
        {
            "parentClass": "MonitorAdverseEventAction",
            "name": "remove",
            "sourceCode": "public void remove(int id) throws DBException, iTrustException, FormValidationException{\r\n\t\tlong HCPMID;\r\n\t\ttry{\r\n\t\tAdverseEventBean aeBean = adverseEventDAO.getReport(id);\r\n\t\tadverseEventDAO.removeReport(id);\r\n\t\tHCPMID = adverseEventDAO.getHCPMID(id);\r\n\t\tMessageBean mBeanTwo = new MessageBean();\r\n\t\tMessageBean mBeanOne = new MessageBean();\r\n\t\tString body = \"An adverse event for \" + aeBean.getDrug() + \" perscribed to \" + patientDAO.getName(Long.parseLong(aeBean.getMID())) +\" with description: (\" + aeBean.getDescription()+ \") was removed.\";\r\n\t\tmBeanOne.setTo(Long.parseLong(aeBean.getMID()));\r\n\t\tmBeanTwo.setTo(HCPMID);\r\n\t\tmBeanOne.setSubject(\"Subject\");\r\n\t\tmBeanTwo.setSubject(\"Subject\");\r\n\t\tmBeanOne.setBody(body);\r\n\t\tmBeanTwo.setBody(body);\r\n\t\tmBeanOne.setFrom(loggedInMID);\r\n\t\tmBeanTwo.setFrom(loggedInMID);\r\n\t\tmessenger.sendMessage(mBeanOne);\r\n\t\tmessenger.sendMessage(mBeanTwo);\r\n\t\ttransactionDAO.logTransaction(TransactionType.ADVERSE_EVENT, loggedInMID, 0L, \"Adverse Event Report Removed\");\r\n\t\t}catch(SQLException e){\r\n\t\t\tthrow new DBException(e);\r\n\t\t} \r\n\t}"
        }
    ]
}