{
    "BeanBuilder": [
        {
            "parentClass": "BeanBuilder",
            "name": "build",
            "sourceCode": "@SuppressWarnings(\"unchecked\")\r\n\tpublic T build(Map map, T bean) throws Exception {\r\n\t\t// JavaBeans should not have overloaded methods, according to their API\r\n\t\t// (a stupid limitation!)\r\n\t\t// Nevertheless, we should check for it\r\n\t\tcheckOverloadedMethods(bean);\r\n\r\n\t\t// Use an introspector to find all of the getXXX or setXXX, we only want\r\n\t\t// the setXXX\r\n\t\tPropertyDescriptor[] propertyDescriptors = Introspector.getBeanInfo(bean.getClass())\r\n\t\t\t\t.getPropertyDescriptors();\r\n\t\tfor (PropertyDescriptor descriptor : propertyDescriptors) {\r\n\t\t\t// if object is null, either it was ignored or empty - just go with\r\n\t\t\t// bean's default\r\n\t\t\tString[] value = (String[]) map.get(descriptor.getName());\r\n\t\t\tMethod writeMethod = descriptor.getWriteMethod();\r\n\t\t\tif (!\"class\".equals(descriptor.getName()) && value != null && writeMethod != null) {\r\n\t\t\t\t// descriptor's name is the name of your property; like\r\n\t\t\t\t// firstName\r\n\t\t\t\t// only take the first string\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Skip the setters for enumerations\r\n\t\t\t\t\tif (writeMethod.getParameterTypes()[0].getEnumConstants() == null)\r\n\t\t\t\t\t\twriteMethod.invoke(bean, new Object[] { value[0] });\r\n\t\t\t\t} catch (IllegalArgumentException e) {\r\n\t\t\t\t\t// Throw a more informative exception\r\n\t\t\t\t\tthrow new IllegalArgumentException(e.getMessage() + \" with \" + writeMethod.getName()\r\n\t\t\t\t\t\t\t+ \" and \" + value[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bean;\r\n\t}"
        },
        {
            "parentClass": "BeanBuilder",
            "name": "checkOverloadedMethods",
            "sourceCode": "private void checkOverloadedMethods(T bean) {\r\n\t\tMethod[] methods = bean.getClass().getDeclaredMethods();\r\n\t\tHashMap<String, String> nameMap = new HashMap<String, String>(methods.length);\r\n\t\tfor (Method method : methods) {\r\n\t\t\tif (nameMap.get(method.getName()) != null)\r\n\t\t\t\tthrow new IllegalArgumentException(bean.getClass().getName()\r\n\t\t\t\t\t\t+ \" should not have any overloaded methods, like \" + method.getName());\r\n\t\t\tif (!\"equals\".equals(method.getName())) // allow an equals override\r\n\t\t\t\tnameMap.put(method.getName(), \"exists\");\r\n\t\t}\r\n\r\n\t}"
        }
    ]
}