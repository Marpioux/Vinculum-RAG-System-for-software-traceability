{
    "UpdateLOINCListAction": [
        {
            "parentClass": "UpdateLOINCListAction",
            "name": "UpdateLOINCListAction",
            "sourceCode": "public UpdateLOINCListAction(DAOFactory factory, long performerID) {\r\n\t\tthis.performerID = performerID;\r\n\t\ttransDAO = factory.getTransactionDAO();\r\n\t\tlDAO = factory.getLOINCDAO();\r\n\t}"
        },
        {
            "parentClass": "UpdateLOINCListAction",
            "name": "add",
            "sourceCode": "public String add(LOINCbean diagn) throws FormValidationException, iTrustException {\r\n\t\tvalidator.validate(diagn);\r\n\r\n\t\tList<LOINCbean> lblist = lDAO.getAllLOINC();\r\n\r\n\t\tboolean correctID = false;\r\n\t\tfor (int i = 0; i < lblist.size(); i++) {\r\n\t\t\tif (lblist.get(i).getLabProcedureCode().equals(diagn.getLabProcedureCode())) {\r\n\t\t\t\tcorrectID = true;\r\n\t\t\t\ti = lblist.size();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (correctID) {\r\n\t\t\tthrow new FormValidationException(\"Error: Code already exists.\");\r\n\t\t}\r\n\t\tlDAO.addLOINC(diagn);\r\n\t\ttransDAO.logTransaction(TransactionType.MANAGE_LOINC, performerID, 0L, \"added LOINC code \"\r\n\t\t\t\t+ diagn.getLabProcedureCode());\r\n\t\treturn \"Success: \" + diagn.getLabProcedureCode() + \" added\";\r\n\t}"
        },
        {
            "parentClass": "UpdateLOINCListAction",
            "name": "updateInformation",
            "sourceCode": "public String updateInformation(LOINCbean diagn) throws FormValidationException {\r\n\t\tvalidator.validate(diagn);\r\n\t\ttry {\r\n\t\t\tint rows = lDAO.update(diagn);\r\n\t\t\tif (0 == rows) {\r\n\t\t\t\treturn \"Error: Code not found.\";\r\n\t\t\t} else {\r\n\t\t\t\ttransDAO.logTransaction(TransactionType.MANAGE_LOINC, performerID, 0L, \"updated LOINC code \"\r\n\t\t\t\t\t\t+ diagn.getLabProcedureCode());\r\n\t\t\t\treturn \"Success: \" + diagn.getLabProcedureCode() + \" updated\";\r\n\t\t\t}\r\n\t\t} catch (DBException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn e.getMessage();\r\n\t\t}\r\n\t}"
        }
    ]
}