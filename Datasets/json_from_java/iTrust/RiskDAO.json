{
    "RiskDAO": [
        {
            "parentClass": "RiskDAO",
            "name": "RiskDAO",
            "sourceCode": "public RiskDAO(DAOFactory factory) {\r\n\t\tthis.factory = factory;\r\n\t}"
        },
        {
            "parentClass": "RiskDAO",
            "name": "hasFamilyHistory",
            "sourceCode": "public boolean hasFamilyHistory(long patientID, double icdLower, double icdUpper) throws DBException {\r\n\t\tList<FamilyMemberBean> familyMembers = getFamilyMembers(patientID);\r\n\t\tfor (FamilyMemberBean famMember : familyMembers) {\r\n\t\t\tif (hadPriorDiagnoses(famMember.getMid(), icdLower, icdUpper))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}"
        },
        {
            "parentClass": "RiskDAO",
            "name": "getFamilyMembers",
            "sourceCode": "private List<FamilyMemberBean> getFamilyMembers(long patientID) throws DBException {\r\n\t\tFamilyDAO famDAO = factory.getFamilyDAO();\r\n\t\tList<FamilyMemberBean> familyMembers = famDAO.getParents(patientID);\r\n\t\tfamilyMembers.addAll(famDAO.getSiblings(patientID));\r\n\t\treturn familyMembers;\r\n\t}"
        },
        {
            "parentClass": "RiskDAO",
            "name": "hadChildhoodInfection",
            "sourceCode": "public boolean hadChildhoodInfection(long patientID, double... icdCodes) throws DBException {\r\n\t\t// Note the datediff call - this is a MySQL function that takes the difference between two\r\n\t\t// dates and returns that value in terms of days. 6570 days is 18 years (not counting leap years)\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM OVDiagnosis ovd, OfficeVisits ov, Patients p \"\r\n\t\t\t\t\t+ \"WHERE ovd.visitID=ov.id AND ov.patientid=p.mid AND p.mid=? \"\r\n\t\t\t\t\t+ \"AND datediff(ov.visitdate,p.dateofbirth) < 6570 AND ovd.icdcode IN (\"\r\n\t\t\t\t\t+ createPrepared(icdCodes.length) + \")\");\r\n\t\t\tps.setLong(1, patientID);\r\n\t\t\tsetICDs(2, ps, icdCodes);\r\n\t\t\treturn ps.executeQuery().next(); // if this query has ANY rows, then yes\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "RiskDAO",
            "name": "createPrepared",
            "sourceCode": "private String createPrepared(int length) {\r\n\t\tString str = \"\";\r\n\t\tfor (int i = 0; i < length; i++)\r\n\t\t\tstr += \"?,\";\r\n\t\treturn str.substring(0, str.length() - 1);\r\n\t}"
        },
        {
            "parentClass": "RiskDAO",
            "name": "setICDs",
            "sourceCode": "private void setICDs(int start, PreparedStatement ps, double[] icdCodes) throws SQLException {\r\n\t\tfor (double icdCode : icdCodes) {\r\n\t\t\tps.setDouble(start++, icdCode);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "RiskDAO",
            "name": "hasSmoked",
            "sourceCode": "public boolean hasSmoked(long patientID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn\r\n\t\t\t\t\t.prepareStatement(\"SELECT * FROM PersonalHealthInformation WHERE PatientID=? AND Smoker=1\");\r\n\t\t\tps.setLong(1, patientID);\r\n\t\t\treturn ps.executeQuery().next(); // if this query has ANY rows, then yes\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "RiskDAO",
            "name": "hadPriorDiagnoses",
            "sourceCode": "public boolean hadPriorDiagnoses(long patientID, double lowerICDCode, double upperICDCode)\r\n\t\t\tthrows DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM OVDiagnosis ovd, OfficeVisits ov, Patients p \"\r\n\t\t\t\t\t+ \"WHERE ovd.visitID=ov.id AND ov.patientid=p.mid AND p.mid=? \"\r\n\t\t\t\t\t+ \"AND ovd.icdcode>=? AND ovd.icdcode<?\");\r\n\t\t\tps.setLong(1, patientID);\r\n\t\t\tps.setDouble(2, lowerICDCode);\r\n\t\t\tps.setDouble(3, upperICDCode);\r\n\t\t\treturn ps.executeQuery().next(); // if this query has ANY rows, then yes\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        }
    ]
}