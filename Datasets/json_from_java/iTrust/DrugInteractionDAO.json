{
    "DrugInteractionDAO": [
        {
            "parentClass": "DrugInteractionDAO",
            "name": "DrugInteractionDAO",
            "sourceCode": "public DrugInteractionDAO(DAOFactory factory) {\r\n\t\tthis.factory = factory;\r\n\t\tinteractionLoader = new DrugInteractionBeanLoader();\r\n\t}"
        },
        {
            "parentClass": "DrugInteractionDAO",
            "name": "getInteractions",
            "sourceCode": "public List<DrugInteractionBean> getInteractions(String drugCode) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM druginteractions WHERE FirstDrug = ? OR SecondDrug = ?\");\r\n\t\t\tps.setString(1, drugCode);\r\n\t\t\tps.setString(2, drugCode);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn interactionLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "DrugInteractionDAO",
            "name": "reportInteraction",
            "sourceCode": "public boolean reportInteraction(String firstDrug, String secondDrug, String description) throws DBException, iTrustException {\r\n\t\tif(firstDrug.equals(secondDrug)) throw new iTrustException(\"Drug cannot interact with itself.\");\r\n\t\t\r\n\t\tList<DrugInteractionBean> currentIntsDrug2 = getInteractions(secondDrug);\r\n\t\tfor(DrugInteractionBean dib : currentIntsDrug2){\r\n\t\t\tif(dib.getSecondDrug().equals(firstDrug)){\r\n\t\t\t\tthrow new iTrustException(\"Error: Interaction between these drugs already exists.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"INSERT INTO druginteractions (FirstDrug, SecondDrug, Description) \" + \"VALUES (?,?,?)\");\r\n\t\t\tps.setString(1, firstDrug);\r\n\t\t\tps.setString(2, secondDrug);\r\n\t\t\tps.setString(3, description);\r\n\t\t\treturn (1 == ps.executeUpdate());\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tif (1062 == e.getErrorCode())\r\n\t\t\t\tthrow new iTrustException(\"Error: Interaction between these drugs already exists.\");\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "DrugInteractionDAO",
            "name": "deleteInteraction",
            "sourceCode": "public boolean deleteInteraction(String firstDrug,String secondDrug) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"DELETE FROM druginteractions WHERE (FirstDrug = ? OR SecondDrug = ?) AND (FirstDrug = ? OR SecondDrug = ?)\");\r\n\t\t\tps.setString(1, firstDrug);\r\n\t\t\tps.setString(2, firstDrug);\r\n\t\t\tps.setString(3, secondDrug);\r\n\t\t\tps.setString(4, secondDrug);\r\n\t\t\tif(ps.executeUpdate() == 0)\r\n\t\t\t\treturn false;\r\n\t\t\treturn true;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        }
    ]
}