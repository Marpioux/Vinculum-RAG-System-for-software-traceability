{
    "LabProcUAPAction": [
        {
            "parentClass": "LabProcUAPAction",
            "name": "LabProcUAPAction",
            "sourceCode": "public LabProcUAPAction(DAOFactory factory, long loggedInMID) {\r\n\t\ttransDAO = factory.getTransactionDAO();\r\n\t\tlpDAO = factory.getLabProcedureDAO();\r\n\t\tthis.loggedInMID = loggedInMID;\r\n\t\tvalidator = new LabProcedureValidator();\r\n\t\tthis.factory = factory;\r\n\t}"
        },
        {
            "parentClass": "LabProcUAPAction",
            "name": "updateProcedure",
            "sourceCode": "public void updateProcedure(LabProcedureBean b) throws DBException, FormValidationException{\r\n\t\tvalidator.validate(b);\r\n\t\t//need to check if status is what's being changed - if new status!=old status send email\r\n\t\tif(!b.getStatus().equals(lpDAO.getLabProcedure(b.getProcedureID()).getStatus())){\r\n\t\t\tnew EmailUtil(factory).sendEmail(makeEmail(b));\r\n\t\t}\r\n\t\tlpDAO.updateLabProcedure(b);\r\n\t\ttransDAO.logTransaction(TransactionType.ENTER_EDIT_LAB_PROCEDURE, loggedInMID, \r\n\t\t\t\tb.getPid(), \"UAP updated procedure id: \"\r\n\t\t\t\t+ b.getProcedureID());\r\n\t}"
        },
        {
            "parentClass": "LabProcUAPAction",
            "name": "makeEmail",
            "sourceCode": "private Email makeEmail(LabProcedureBean b) throws DBException{\r\n\t\t\r\n\t\tPatientBean p = new PatientDAO(factory).getPatient(b.getPid());\r\n\t\t\r\n\t\tEmail email = new Email();\r\n\t\temail.setFrom(\"no-reply@itrust.com\");\r\n\t\temail.setToList(Arrays.asList(p.getEmail()));\r\n\t\temail.setSubject(\"A Lab Procedure Was Updated\");\r\n\t\temail.setBody(String.format(\"Dear %s, \\n Your Lab Procedure (%s) has a new updated status of %s. Log on to iTrust to view.\",  p.getFullName(),b.getLoinc(),b.getStatus()));\r\n\t\treturn email;\r\n\t}"
        },
        {
            "parentClass": "LabProcUAPAction",
            "name": "viewProcedures",
            "sourceCode": "public List<LabProcedureBean> viewProcedures(long id) throws DBException {\r\n\t\ttransDAO.logTransaction(TransactionType.VIEW_LAB_PROCEDURE, loggedInMID,\r\n\t\t\t\tid, \"UAP viewed procedures\");\r\n\t\treturn lpDAO.getAllLabProceduresDate(id);\r\n\t}"
        }
    ]
}