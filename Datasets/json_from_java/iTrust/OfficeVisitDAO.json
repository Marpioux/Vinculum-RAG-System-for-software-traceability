{
    "OfficeVisitDAO": [
        {
            "parentClass": "OfficeVisitDAO",
            "name": "OfficeVisitDAO",
            "sourceCode": "public OfficeVisitDAO(DAOFactory factory) {\r\n\t\tthis.factory = factory;\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "add",
            "sourceCode": "public long add(OfficeVisitBean ov) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn\r\n\t\t\t\t\t.prepareStatement(\"INSERT INTO OfficeVisits (VisitDate, Notes, HCPID, PatientID, HospitalID) VALUES (?,?,?,?,?)\");\r\n\t\t\tsetValues(ps, ov);\r\n\t\t\tps.executeUpdate();\r\n\t\t\treturn DBUtil.getLastInsert(conn);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "setValues",
            "sourceCode": "private void setValues(PreparedStatement ps, OfficeVisitBean ov) throws SQLException {\r\n\t\tps.setDate(1, new java.sql.Date(ov.getVisitDate().getTime()));\r\n\t\tps.setString(2, ov.getNotes());\r\n\t\tps.setLong(3, ov.getHcpID());\r\n\t\tps.setLong(4, ov.getPatientID());\r\n\t\tps.setString(5, ov.getHospitalID());\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "update",
            "sourceCode": "public void update(OfficeVisitBean ov) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"UPDATE OfficeVisits SET VisitDate=?, Notes=?, HCPID=?, \"\r\n\t\t\t\t\t+ \"PatientID=?, HospitalID=? WHERE ID=?\");\r\n\t\t\tsetValues(ps, ov);\r\n\t\t\tps.setLong(6, ov.getID());\r\n\t\t\tps.executeUpdate();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getOfficeVisit",
            "sourceCode": "public OfficeVisitBean getOfficeVisit(long visitID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"Select * From OfficeVisits Where ID = ?\");\r\n\t\t\tps.setLong(1, visitID);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\tif (rs.next())\r\n\t\t\t\treturn loadFullOfficeVist(rs, visitID);\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "loadFullOfficeVist",
            "sourceCode": "private OfficeVisitBean loadFullOfficeVist(ResultSet rs, long visitID) throws SQLException, DBException {\r\n\t\tOfficeVisitBean ov = new OfficeVisitBean(visitID);\r\n\t\tov.setVisitDateStr(new SimpleDateFormat(\"MM/dd/yyyy\").format(new Date(rs.getDate(\"VisitDate\")\r\n\t\t\t\t.getTime())));\r\n\t\tov.setHcpID(rs.getLong(\"HCPID\"));\r\n\t\tov.setNotes(rs.getString(\"notes\"));\r\n\t\tov.setPatientID(rs.getLong(\"PatientID\"));\r\n\t\tov.setHospitalID(rs.getString(\"HospitalID\"));\r\n\t\tov.setDiagnoses(getDiagnoses(visitID));\r\n\t\tov.setPrescriptions(getPrescriptions(visitID));\r\n\t\tov.setProcedures(getProcedures(visitID));\r\n\r\n\t\treturn ov;\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getProcedures",
            "sourceCode": "public List<ProcedureBean> getProcedures(long visitID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\tList<ProcedureBean> procs;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"select * from ovprocedure ovp, officevisits ov, cptcodes cpt where ov.id=? and ovp.visitid=? and cpt.code=ovp.cptcode\");\r\n\t\t\tps.setLong(1, visitID);\r\n\t\t\tps.setLong(2, visitID);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\tprocs = procedureBeanLoader.loadList(rs);\r\n\t\t} \r\n\t\tcatch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} \r\n\t\tfinally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t\t\r\n\t\treturn procs;\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getPrescriptions",
            "sourceCode": "public List<PrescriptionBean> getPrescriptions(long visitID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"Select * From OVMedication,NDCodes Where OVMedication.VisitID = ? \"\r\n\t\t\t\t\t+ \"AND NDCodes.Code=OVMedication.NDCode\");\r\n\t\t\tps.setLong(1, visitID);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn prescriptionLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getDiagnoses",
            "sourceCode": "public List<DiagnosisBean> getDiagnoses(long visitID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"Select * From OVDiagnosis,ICDCodes Where OVDiagnosis.VisitID = ? \"\r\n\t\t\t\t\t+ \"AND ICDCodes.Code=OVDiagnosis.ICDCode\");\r\n\t\t\tps.setLong(1, visitID);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn diagnosisLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "addProcedureToOfficeVisit",
            "sourceCode": "public long addProcedureToOfficeVisit (String cptCode, long visitID, String hcpid) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"INSERT INTO OVProcedure (CPTCode,VisitID,HCPID) VALUES (?,?,?)\");\r\n\t\t\tps.setString(1, cptCode);\r\n\t\t\tps.setLong(2, visitID);\r\n\t\t\tps.setString(3, hcpid);\r\n\t\t\tps.executeUpdate();\r\n\t\t\treturn DBUtil.getLastInsert(conn);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "removeProcedureFromOfficeVisit",
            "sourceCode": "public void removeProcedureFromOfficeVisit(long ovProcedureID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"DELETE FROM OVProcedure WHERE ID=? \");\r\n\t\t\tps.setLong(1, ovProcedureID);\r\n\t\t\tps.executeUpdate();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "addPrescription",
            "sourceCode": "public long addPrescription(PrescriptionBean pres) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn\r\n\t\t\t\t\t.prepareStatement(\"INSERT INTO OVMedication (VisitID,NDCode,StartDate,EndDate,Dosage,Instructions) VALUES (?,?,?,?,?,?)\");\r\n\t\t\tprescriptionLoader.loadParameters(ps, pres);\r\n\t\t\tps.executeUpdate();\r\n\t\t\treturn DBUtil.getLastInsert(conn);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "editPrescription",
            "sourceCode": "public long editPrescription(PrescriptionBean pres) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\t//ps = conn.prepareStatement(\"UPDATE OVMedication (VisitID,NDCode,StartDate,EndDate,Dosage,Instructions) VALUES (?,?,?,?,?,?)\");\r\n\t\t\tString statement = \"UPDATE OVMedication \" +\r\n\t\t\t\t\"SET VisitID=?, NDCode=?, StartDate=?, EndDate=?, Dosage=?, Instructions=? \" +\r\n\t\t\t\t\"WHERE ID=?\";\r\n\t\t\tps = conn.prepareStatement(statement);\r\n\t\t\tprescriptionLoader.loadParameters(ps, pres);\r\n\t\t\tps.setLong(7, pres.getId());\r\n\t\t\tps.executeUpdate();\r\n\t\t\treturn DBUtil.getLastInsert(conn);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "removePrescription",
            "sourceCode": "public void removePrescription(long ovMedicationID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"DELETE FROM OVMedication WHERE ID=? \");\r\n\t\t\tps.setLong(1, ovMedicationID);\r\n\t\t\tps.executeUpdate();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "addDiagnosisToOfficeVisit",
            "sourceCode": "public long addDiagnosisToOfficeVisit(double icd, long visitID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"INSERT INTO OVDiagnosis (ICDCode,VisitID) VALUES (?,?)\");\r\n\t\t\tps.setDouble(1, icd);\r\n\t\t\tps.setLong(2, visitID);\r\n\t\t\tps.executeUpdate();\r\n\t\t\treturn DBUtil.getLastInsert(conn);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "removeDiagnosisFromOfficeVisit",
            "sourceCode": "public void removeDiagnosisFromOfficeVisit(long ovDiagnosisID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"DELETE FROM OVDiagnosis WHERE ID=? \");\r\n\t\t\tps.setLong(1, ovDiagnosisID);\r\n\t\t\tps.executeUpdate();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "addLabProcedureToOfficeVisit",
            "sourceCode": "public long addLabProcedureToOfficeVisit(String LOINCCode, long visitID, long pid) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"INSERT INTO LabProcedure (LaboratoryProcedureCode,OfficeVisitID,\" +\r\n\t\t\t\t\t\"Commentary, Results, PatientMID, Status, Rights) VALUES (?,?,?,?,?,?,?)\");\r\n\t\t\tps.setString(1, LOINCCode);\r\n\t\t\tps.setLong(2, visitID);\r\n\t\t\tps.setString(3, \"\");\r\n\t\t\tps.setString(4, \"\");\r\n\t\t\tps.setLong(5, pid);\r\n\t\t\tps.setString(6, LabProcedureBean.Not_Received);\r\n\t\t\tps.setString(7, \"ALLOWED\");\r\n\t\t\tps.executeUpdate();\r\n\t\t\treturn DBUtil.getLastInsert(conn);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "removeLabProcedureFromOfficeVisit",
            "sourceCode": "public void removeLabProcedureFromOfficeVisit(long labProcedureID) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"DELETE FROM LabProcedure WHERE LaboratoryProcedureID=?\");\r\n\t\t\tps.setLong(1, labProcedureID);\r\n\t\t\tps.executeUpdate();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "checkOfficeVisitExists",
            "sourceCode": "public boolean checkOfficeVisitExists(long ovID, long pid) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM OfficeVisits WHERE ID=? AND PatientID=?\");\r\n\t\t\tps.setLong(1, ovID);\r\n\t\t\tps.setLong(2, pid);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn rs.next();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getAllOfficeVisits",
            "sourceCode": "public List<OfficeVisitBean> getAllOfficeVisits(long pid) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn\r\n\t\t\t\t\t.prepareStatement(\"SELECT * FROM OfficeVisits WHERE PatientID=? ORDER BY VisitDate DESC\");\r\n\t\t\tps.setLong(1, pid);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn officeVisitLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getAllOfficeVisitsForLHCP",
            "sourceCode": "public List<OfficeVisitBean> getAllOfficeVisitsForLHCP(long mid) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tif (mid == 0L) throw new SQLException(\"HCPID cannot be null\");\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn\r\n\t\t\t\t\t.prepareStatement(\"SELECT * FROM OfficeVisits WHERE HCPID=? ORDER BY VisitDate DESC\");\r\n\t\t\tps.setLong(1, mid);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn officeVisitLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getOfficeVisitsWithNoSurvey",
            "sourceCode": "public List<OfficeVisitBean> getOfficeVisitsWithNoSurvey(long pid) throws DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn\r\n\t\t\t\t\t.prepareStatement(\"SELECT * FROM OfficeVisits where id not in (select visitid from OVSurvey) and PatientID = ? ORDER BY VisitDate DESC\");\r\n\t\t\tps.setLong(1, pid);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn officeVisitLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getPrescriptionReportsByDate",
            "sourceCode": "public List<PrescriptionReportBean> getPrescriptionReportsByDate(long patientID, String startDate, String endDate)\r\n\t\t\tthrows DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM NDCodes, OVMedication, OfficeVisits \"\r\n\t\t\t\t\t+ \"WHERE NDCodes.Code=OVMedication.NDCode AND OVMedication.VisitID=OfficeVisits.ID \"\r\n\t\t\t\t\t+ \"AND PatientID=? AND ((DATE(?) < OVMedication.EndDate AND DATE(?) > OVMedication.StartDate)\"\r\n\t\t\t\t\t+ \"OR (DATE(?) > OVMedication.StartDate  AND DATE(?) < OVMedication.EndDate ) OR \"\r\n\t\t\t\t\t+ \"(DATE(?) <= OVMedication.StartDate AND DATE(?) >= OVMedication.StartDate)) \"\r\n\t\t\t\t\t+ \"ORDER BY VisitDate DESC\");\r\n\t\t\tps.setLong(1, patientID);\r\n\t\t\tps.setString(2, startDate);\r\n\t\t\tps.setString(3, startDate);\r\n\t\t\tps.setString(4, endDate);\r\n\t\t\tps.setString(5, endDate);\r\n\t\t\tps.setString(6, startDate);\r\n\t\t\tps.setString(7, endDate);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn prescriptionReportBeanLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getPrescriptionReports",
            "sourceCode": "public List<PrescriptionReportBean> getPrescriptionReports(List<Long> ovIDs, long patientID)\r\n\t\t\tthrows DBException {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tString preps = buildPreps(ovIDs.size());\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM NDCodes, OVMedication, OfficeVisits \"\r\n\t\t\t\t\t+ \"WHERE NDCodes.Code=OVMedication.NDCode AND OVMedication.VisitID=OfficeVisits.ID \"\r\n\t\t\t\t\t+ \"AND PatientID=? AND VisitID IN(\" + preps + \") ORDER BY VisitDate DESC\");\r\n\t\t\tps.setLong(1, patientID);\r\n\t\t\tprepareOVIDs(ps, ovIDs);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn prescriptionReportBeanLoader.loadList(rs);\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "prepareOVIDs",
            "sourceCode": "private void prepareOVIDs(PreparedStatement ps, List<Long> ovIDs) throws SQLException {\r\n\t\tfor (int i = 0; i < ovIDs.size(); i++) {\r\n\t\t\tps.setLong(i + 2, ovIDs.get(i));\r\n\t\t}\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "buildPreps",
            "sourceCode": "private String buildPreps(int size) {\r\n\t\tString prep = \"\";\r\n\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\tprep += \"?,\";\r\n\t\t}\r\n\t\tif (prep.length() > 0)\r\n\t\t\treturn prep.substring(0, prep.length() - 1);\r\n\t\telse\r\n\t\t\treturn prep;\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getOfficeVisitsFromHospital",
            "sourceCode": "public List<OfficeVisitBean> getOfficeVisitsFromHospital(String hospitalID) throws DBException{\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\ttry {\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM officevisits WHERE hospitalID = ? ORDER BY ID DESC\");\r\n\t\t\tps.setString(1, hospitalID);\r\n\t\t\tResultSet rs = ps.executeQuery();\r\n\t\t\treturn officeVisitLoader.loadList(rs);\r\n\t\t} catch (SQLException e){\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t\t\r\n\t}"
        },
        {
            "parentClass": "OfficeVisitDAO",
            "name": "getAllOfficeVisitsForDiagnosis",
            "sourceCode": "public List<OfficeVisitBean> getAllOfficeVisitsForDiagnosis(String icdcode) throws DBException {\r\n\t\t\r\n\t\tList<DiagnosisBean> diags = null;\r\n\t\tList<OfficeVisitBean> ovs = new ArrayList<OfficeVisitBean>();\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement ps = null;\r\n\t\tResultSet rs= null;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (icdcode == null) \r\n\t\t\t\tthrow new SQLException(\"icdcode cannot be null\");\r\n\t\t\t\r\n\t\t\tconn = factory.getConnection();\r\n\t\t\t\r\n\t\t\tps = conn.prepareStatement(\"SELECT * FROM ovdiagnosis ovd, icdcodes icd WHERE ovd.ICDCode=? and icd.Code=?\");\r\n\t\t\tps.setString(1, icdcode);\r\n\t\t\tps.setString(2, icdcode);\r\n\t\t\trs = ps.executeQuery();\r\n\t\t\tdiags = diagnosisLoader.loadList(rs);\r\n\t\t\trs.close();\r\n\t\t\tps.close();\r\n\t\t\tps = null;\r\n\t\t\trs = null;\r\n\t\t\t\r\n\t\t\tfor (DiagnosisBean bean: diags) {\r\n\t\t\t\tps = conn.prepareStatement(\"SELECT * FROM officevisits ov WHERE ov.ID=?\");\r\n\t\t\t\tps.setInt(1, (int)bean.getVisitID());\r\n\t\t\t\trs = ps.executeQuery();\r\n\t\t\t\t\r\n\t\t\t\tif (rs.next()) {\r\n\t\t\t\t\tovs.add(loadFullOfficeVist(rs, bean.getVisitID()));\r\n\t\t\t\t}\r\n\t\t\t\trs.close();\r\n\t\t\t\tps.close();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn ovs;\r\n\t\t\r\n\t\t}\r\n\t\tcatch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tthrow new DBException(e);\r\n\t\t} finally {\r\n\t\t\tDBUtil.closeConnection(conn, ps);\r\n\t\t}\r\n\t}"
        }
    ]
}