{
    "HeartDiseaseRisks": [
        {
            "parentClass": "HeartDiseaseRisks",
            "name": "HeartDiseaseRisks",
            "sourceCode": "public HeartDiseaseRisks(DAOFactory factory, long patientID) throws DBException, NoHealthRecordsException {\r\n\t\tsuper(factory, patientID);\r\n\t}"
        },
        {
            "parentClass": "HeartDiseaseRisks",
            "name": "qualifiesForDisease",
            "sourceCode": "@Override\r\n\tpublic boolean qualifiesForDisease() {\r\n\t\treturn true;\r\n\t}"
        },
        {
            "parentClass": "HeartDiseaseRisks",
            "name": "getDiseaseRiskFactors",
            "sourceCode": "@Override\r\n\tprotected List<PatientRiskFactor> getDiseaseRiskFactors() {\r\n\t\tList<PatientRiskFactor> factors = new ArrayList<PatientRiskFactor>();\r\n\t\tfactors.add(new GenderFactor(patient, Gender.Male));\r\n\t\tfactors.add(new AgeFactor(patient, 45));\r\n\t\tfactors.add(new EthnicityFactor(patient, Hispanic, AfricanAmerican, AmericanIndian));\r\n\t\tfactors.add(new WeightFactor(currentHealthRecord, 30));\r\n\t\tfactors.add(new HypertensionFactor(currentHealthRecord));\r\n\t\tfactors.add(new CholesterolFactor(currentHealthRecord));\r\n\t\tfactors.add(new SmokingFactor(factory, patient.getMID()));\r\n\t\tfactors.add(new PriorDiagnosisFactor(factory, patient.getMID(), 250.0, 251.0));\r\n\t\tfactors.add(new FamilyHistoryFactor(factory, patient.getMID(), 350.0, 460.0));\r\n\t\treturn factors;\r\n\t}"
        },
        {
            "parentClass": "HeartDiseaseRisks",
            "name": "getName",
            "sourceCode": "@Override\r\n\tpublic String getName() {\r\n\t\treturn \"Heart Disease\";\r\n\t}"
        }
    ]
}