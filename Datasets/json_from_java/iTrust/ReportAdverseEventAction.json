{
    "ReportAdverseEventAction": [
        {
            "parentClass": "ReportAdverseEventAction",
            "name": "ReportAdverseEventAction",
            "sourceCode": "public ReportAdverseEventAction(String hcpID, DAOFactory factory, long loggedInMID){\r\n\t\tthis.loggedInMID = loggedInMID;\r\n\t\tthis.patientDAO = factory.getPatientDAO();\r\n\t\tthis.personnelDAO = factory.getPersonnelDAO();\r\n\t\tthis.emailer = new EmailUtil(factory);\r\n\t\tthis.adverseEventDAO = factory.getAdverseEventDAO();\r\n\t\tthis.transactionDAO = factory.getTransactionDAO();\r\n\t\tthis.hcpID = Long.parseLong(hcpID);\r\n\t\tthis.validator = new AdverseEventValidator();\r\n\t\t\r\n\t\t\r\n\t}"
        },
        {
            "parentClass": "ReportAdverseEventAction",
            "name": "ReportAdverseEventAction",
            "sourceCode": "public ReportAdverseEventAction(String hcpID, DAOFactory factory, long loggedInMID){\r\n\t\tthis.loggedInMID = loggedInMID;\r\n\t\tthis.patientDAO = factory.getPatientDAO();\r\n\t\tthis.personnelDAO = factory.getPersonnelDAO();\r\n\t\tthis.emailer = new EmailUtil(factory);\r\n\t\tthis.adverseEventDAO = factory.getAdverseEventDAO();\r\n\t\tthis.transactionDAO = factory.getTransactionDAO();\r\n\t\tthis.hcpID = Long.parseLong(hcpID);\r\n\t\tthis.validator = new AdverseEventValidator();\r\n\t\t\r\n\t\t\r\n\t}"
        },
        {
            "parentClass": "ReportAdverseEventAction",
            "name": "sendMails",
            "sourceCode": "public Email sendMails(List<AdverseEventBean> aeList) throws iTrustException, FormValidationException, DBException {\r\n\t\tList<String> MIDlist = new ArrayList<String>();\r\n\t\tString patientID = \"\";\r\n\t\t\r\n\t\tfor(AdverseEventBean beaner : aeList){\r\n\t\t\tpatientID = beaner.getMID();\r\n\t\t\tString newDesc = \" Drug: \" + beaner.getDrug() + \" (\" + beaner.getCode() + \") Description: \" + beaner.getDescription();\r\n\t\t\tbeaner.setDescription(newDesc);\r\n\t\t}\r\n\t\tfor(AdverseEventBean beano : aeList){\r\n\t\t\tif(!MIDlist.contains(beano.getPrescriber())){\r\n\t\t\t\tMIDlist.add(beano.getPrescriber());\r\n\t\t\t}\r\n\t\t}\r\n\t\tEmail email = new Email();\r\n\t\t\r\n\t\tfor(String num : MIDlist){\r\n\t\t\tString message = \" Patient: \" + patientDAO.getName(Long.parseLong(patientID)) \r\n\t\t\t\t+ \" (MID \" + patientID + \") Has Reported the following adverse event(s)\";\r\n\t\t\tfor(AdverseEventBean beano : aeList){\r\n\t\t\t\tif(beano.getPrescriber().equals(num)){\r\n\t\t\t\t\tmessage = message + beano.getDescription();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tString fromEmail;\r\n\t\t\temail.setFrom(\"noreply@itrust.com\");\r\n\t\t\tPatientBean sender = patientDAO.getPatient(loggedInMID);\r\n\t\t\tPersonnelBean receiver = personnelDAO.getPersonnel(Long.parseLong(num));\r\n\t\t\tList<String> toList = new ArrayList<String>();\r\n\t\t\ttoList.add(receiver.getEmail());\r\n\t\t\tfromEmail = sender.getEmail();\r\n\t\t\t\r\n\t\t\temail.setToList(toList);\r\n\t\t\temail.setFrom(fromEmail);\r\n\t\t\temail.setSubject(String.format(\"Adverse Event Report(Prescription)\"));\r\n\t\t\temail.setBody(message);\r\n\t\t\temailer.sendEmail(email);\r\n\t\t\ttransactionDAO.logTransaction(TransactionType.SEND_MESSAGE, loggedInMID);\r\n\t\t\t\r\n\t\t}\r\n\t\treturn email;\r\n\t}"
        },
        {
            "parentClass": "ReportAdverseEventAction",
            "name": "sendMail",
            "sourceCode": "public Email sendMail (AdverseEventBean aeBean)throws iTrustException, FormValidationException, DBException{\r\n\t\tEmail email = new Email();\r\n\t\tString fromEmail;\r\n\t\temail.setFrom(\"noreply@itrust.com\");\r\n\t\tList<String> toList = new ArrayList<String>();\r\n\t\t\r\n\t\tPatientBean sender = patientDAO.getPatient(loggedInMID);\r\n\t\tPersonnelBean receiver = personnelDAO.getPersonnel(hcpID);\r\n\t\t\r\n\t\ttoList.add(receiver.getEmail());\r\n\t\tfromEmail = sender.getEmail();\r\n\t\t\r\n\t\temail.setToList(toList);\r\n\t\temail.setFrom(fromEmail);\r\n\t\temail.setSubject(String.format(\"Adverse Event Report (Immunization)\"));\r\n\t\temail.setBody(String.format(\r\n\t\t\t\t\" Patient: \" + patientDAO.getName(Long.parseLong(aeBean.getMID())) \r\n\t\t\t\t+ \" (MID \" + aeBean.getMID() + \") Has Reported the following adverse event\" +\r\n\t\t\t\t\" Drug: \" + aeBean.getDrug() + \"(\" + aeBean.getCode() + \") Description: \" + aeBean.getDescription()\r\n\t\t\t\t));\r\n\t\temailer.sendEmail(email);\r\n\t\t\r\n\t\ttransactionDAO.logTransaction(TransactionType.SEND_MESSAGE, loggedInMID);\r\n\t\t\r\n\t\treturn email;\r\n\t}"
        },
        {
            "parentClass": "ReportAdverseEventAction",
            "name": "addReport",
            "sourceCode": "public String addReport(AdverseEventBean aeBean)throws iTrustException, FormValidationException, DBException {\r\n\t\t\r\n\t\ttry{\r\n\t\t\tvalidator.validate(aeBean);\r\n\t\t}catch (FormValidationException e){\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn e.getMessage();\r\n\t\t\t}\r\n\t\ttry{\r\n\t\t\tadverseEventDAO.addReport(aeBean, hcpID);\r\n\t\t}\r\n\t\tcatch( DBException e ){\r\n\t\t\tthrow new iTrustException(e.getMessage());\r\n\t\t}\r\n\t\t/**\r\n\t\t * Old code used to send a single e-mail. Keep for reference\r\n\t\tEmail email = new Email();\r\n\t\tString senderName;\r\n\t\tString fromEmail;\r\n\t\temail.setFrom(\"noreply@itrust.com\");\r\n\t\tList<String> toList = new ArrayList<String>();\r\n\t\t\r\n\t\tPatientBean sender = patientDAO.getPatient(loggedInMID);\r\n\t\tPersonnelBean receiver = personnelDAO.getPersonnel(hcpID);\r\n\t\t\r\n\t\ttoList.add(receiver.getEmail());\r\n\t\tsenderName = sender.getFullName();\r\n\t\tfromEmail = sender.getEmail();\r\n\t\t\r\n\t\temail.setToList(toList);\r\n\t\temail.setFrom(fromEmail);\r\n\t\temail.setSubject(String.format(\"Adverse Event Report\"));\r\n\t\temail.setBody(String.format(\r\n\t\t\t\t\" Patient: \" + patientDAO.getName(Long.parseLong(aeBean.getMID())) \r\n\t\t\t\t+ \" (MID \" + aeBean.getMID() + \") Has Reported the following adverse event(s)\" +\r\n\t\t\t\t\" Drug: \" + aeBean.getDrug() + \"(\" + aeBean.getCode() + \") Description: \" + aeBean.getDescription()\r\n\t\t\t\t));\r\n\t\temailer.sendEmail(email);\r\n\t\t\r\n\t\ttransactionDAO.logTransaction(TransactionType.SEND_MESSAGE, loggedInMID);*/\r\n\t\ttransactionDAO.logTransaction(TransactionType.ADVERSE_EVENT, loggedInMID);\r\n\t\treturn \"\";\r\n\t}"
        }
    ]
}