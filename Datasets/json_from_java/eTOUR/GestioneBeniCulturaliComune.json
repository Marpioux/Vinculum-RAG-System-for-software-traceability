{
    "GestioneBeniCulturaliComune": [
        {
            "parentClass": "GestioneBeniCulturaliComune",
            "name": "GestioneBeniCulturaliComune",
            "sourceCode": "public GestioneBeniCulturaliComune() throws RemoteException {\r\n        // Class Supercostruttore UnicastRemoteObject\r\n        super();\r\n\r\n        // We instantiate objects\r\n        try {\r\n            dbbc = new DBBeneCulturale();\r\n            dbtag = new DBTag();\r\n            dbvisita = new DBVisitaBC();\r\n            dbturista = new DBTurista();\r\n        } catch (Exception e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n        }\r\n    }"
        },
        {
            "parentClass": "GestioneBeniCulturaliComune",
            "name": "ottieniBeneCulturale",
            "sourceCode": "public BeanBeneCulturale ottieniBeneCulturale(int pBeneCulturaleID) throws RemoteException {\r\n        if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID)) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n        }\r\n\r\n        BeanBeneCulturale bbc = null;\r\n\r\n        try {\r\n            bbc = dbbc.ottieniBeneCulturale(pBeneCulturaleID);\r\n        } catch (SQLException e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n        } catch (Exception e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n        }\r\n\r\n        return bbc;\r\n    }"
        },
        {
            "parentClass": "GestioneBeniCulturaliComune",
            "name": "ottieniTagBeneCulturale",
            "sourceCode": "public ArrayList<BeanTag> ottieniTagBeneCulturale(int pBeneCulturaleID) throws RemoteException {\r\n        if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID)) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n        }\r\n\r\n        ArrayList<BeanTag> btag = null;\r\n\r\n        try {\r\n            btag = dbtag.ottieniTagBeneCulturale(pBeneCulturaleID);\r\n        } catch (SQLException e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n        } catch (Exception e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n        }\r\n\r\n        return btag;\r\n    }"
        },
        {
            "parentClass": "GestioneBeniCulturaliComune",
            "name": "ottieniFeedbackBeneCulturale",
            "sourceCode": "public HashMap<BeanVisitaBC, String> ottieniFeedbackBeneCulturale(int pBeneCulturaleID) throws RemoteException {\r\n        if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID)) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n        }\r\n\r\n        HashMap<BeanVisitaBC, String> mappaRitorno;\r\n\r\n        try {\r\n            // Instantiate the map of the same size as the list of BeanVisitaBC\r\n            mappaRitorno = new HashMap<>(dbvisita.ottieniListaVisitaBC(pBeneCulturaleID).size());\r\n\r\n            // For each visit by adding their username\r\n            for (BeanVisitaBC b : dbvisita.ottieniListaVisitaBC(pBeneCulturaleID)) {\r\n                mappaRitorno.put(b, dbturista.ottieniTurista(b.getIdTurista()).getUserName());\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n        } catch (Exception e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n        }\r\n\r\n        return mappaRitorno;\r\n    }"
        },
        {
            "parentClass": "GestioneBeniCulturaliComune",
            "name": "ottieniStatisticheBeneCulturale",
            "sourceCode": "public ArrayList<Integer> ottieniStatisticheBeneCulturale(int pBeneCulturaleID) throws RemoteException {\r\n        if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID)) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n        }\r\n\r\n        ArrayList<Integer> listaRisultati = new ArrayList<>(5);\r\n\r\n        // Set all the indices to 0\r\n        for (int i = 0; i < 5; i++) {\r\n            listaRisultati.add(0);\r\n        }\r\n\r\n        // Calculate the date for the last thirty days\r\n        Date ultimiTrentaGiorni = new Date(new Date().getTime() - CostantiGlobali.TRENTA_GIORNI);\r\n\r\n        try {\r\n            // Get all visits of a certain cultural\r\n            // Loop looking for the requests / feedback obtained within the last thirty days\r\n            for (BeanVisitaBC b : dbvisita.ottieniListaVisitaBC(pBeneCulturaleID)) {\r\n                if (b.getDataVisita().after(ultimiTrentaGiorni)) {\r\n                    listaRisultati.set(b.getVoto() - 1, listaRisultati.get(b.getVoto() - 1) + 1);\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n        } catch (Exception e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n        }\r\n\r\n        return listaRisultati;\r\n    }"
        },
        {
            "parentClass": "GestioneBeniCulturaliComune",
            "name": "modificaFeedbackBeneCulturale",
            "sourceCode": "public boolean modificaFeedbackBeneCulturale(int pBeneCulturaleID, BeanVisitaBC pBeanVisitaBC) throws RemoteException {\r\n        if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID) ||\r\n            !ControlloVisiteBeniCulturali.controllaDatiVisitaBeneCulturale(pBeanVisitaBC)) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n        }\r\n\r\n        // Please check that the vote has not changed.\r\n        // If the vote is changed to an exception is raised\r\n        boolean votoOk = true;\r\n\r\n        try {\r\n            votoOk = dbvisita.ottieniVisitaBC(pBeneCulturaleID, pBeanVisitaBC.getIdTurista()).getVoto() == pBeanVisitaBC.getVoto();\r\n        } catch (SQLException e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n        } catch (Exception e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n        }\r\n\r\n        // If the vote is not changed we proceed to send the message to the method of\r\n        // Change the layer's database.\r\n        if (votoOk) {\r\n            try {\r\n                return dbvisita.modificaVisitaBC(pBeanVisitaBC);\r\n            } catch (SQLException e) {\r\n                throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n            } catch (Exception e) {\r\n                throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }"
        }
    ]
}