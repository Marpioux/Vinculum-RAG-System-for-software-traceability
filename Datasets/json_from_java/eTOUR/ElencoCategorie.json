{
    "ElencoCategorie": [
        {
            "parentClass": "ElencoCategorie",
            "name": "ElencoCategorie",
            "sourceCode": "public ElencoCategorie() {\r\n        categories = new Hashtable<>();\r\n        totTermini = new Hashtable<>();\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "getMaxDist",
            "sourceCode": "public float getMaxDist() {\r\n        return maxDist;\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "getAllCategorie",
            "sourceCode": "public Hashtable<String, Categoria> getAllCategorie() {\r\n        return categories;\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "getTotTermini",
            "sourceCode": "public Hashtable<String, float[]> getTotTermini() {\r\n        return totTermini;\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "getCategoria",
            "sourceCode": "public Categoria getCategoria(String pNomeCategoria) {\r\n        if (esisteCategoria(pNomeCategoria)) { // if there is the appropriate category\r\n            return categories.get(pNomeCategoria); // returns the category associated with pNomeCategoria\r\n        }\r\n        return null; // otherwise null\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "getTermine",
            "sourceCode": "public float[] getTermine(String pTermine) {\r\n        if (esisteTermine(pTermine)) { // if the term is present in table\r\n            return totTermini.get(pTermine); // return the value associated\r\n        }\r\n        return null; // null otherwise\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "addCategoria",
            "sourceCode": "public boolean addCategoria(String pNomeCategoria, Categoria pCategoria) {\r\n        if (!esisteCategoria(pNomeCategoria)) { // if the category exists\r\n            return false; // returns false\r\n        }\r\n        categories.put(pNomeCategoria, pCategoria); // otherwise load the category in the table\r\n        return true; // returns true\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "setCategoria",
            "sourceCode": "public boolean setCategoria(String pNomeCategoria, Categoria pCategoria) {\r\n        if (!esisteCategoria(pNomeCategoria)) { // if the category does not exist\r\n            return false; // returns false\r\n        }\r\n        categories.put(pNomeCategoria, pCategoria); // update the table of categories\r\n        return true; // returns true\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "setTermine",
            "sourceCode": "public void setTermine(String pTermine, float[] pVal) {\r\n        totTermini.put(pTermine, pVal);\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "setMaxDist",
            "sourceCode": "public void setMaxDist(float pMaxDist) {\r\n        maxDist = pMaxDist;\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "getCategorie",
            "sourceCode": "public Iterable<String> getCategorie() {\r\n        List<String> toReturn = new ArrayList<>(); // create a new list\r\n        for (Enumeration<String> val = categories.keys(); val.hasMoreElements();) { // iterates through categories\r\n            toReturn.add(val.nextElement()); // adds to the list the name of a category\r\n        }\r\n        return toReturn;\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "esisteCategoria",
            "sourceCode": "public boolean esisteCategoria(String PKEY) {\r\n        try {\r\n            categories.get(PKEY); // try to extract the category name PKEY from the table of categories\r\n            return true; // if the transaction does not raise exceptions, category exists and returns true\r\n        } catch (NullPointerException e) {\r\n            return false; // false otherwise\r\n        }\r\n    }"
        },
        {
            "parentClass": "ElencoCategorie",
            "name": "esisteTermine",
            "sourceCode": "public boolean esisteTermine(String PKEY) {\r\n        try {\r\n            if (totTermini.get(PKEY) != null) {\r\n                return true;\r\n            }\r\n        } catch (NullPointerException e) {\r\n            return false;\r\n        }\r\n        return false;\r\n    }"
        }
    ]
}