{
    "ScrollableTable": [
        {
            "parentClass": "ScrollableTable",
            "name": "ScrollableTable",
            "sourceCode": "public ScrollableTable() {\r\n        super();\r\n    }"
        },
        {
            "parentClass": "ScrollableTable",
            "name": "ScrollableTable",
            "sourceCode": "public ScrollableTable() {\r\n        super();\r\n    }"
        },
        {
            "parentClass": "ScrollableTable",
            "name": "getPreferredScrollableViewportSize",
            "sourceCode": "@Override\r\n    public Dimension getPreferredScrollableViewportSize() {\r\n        return getPreferredSize();\r\n    }"
        },
        {
            "parentClass": "ScrollableTable",
            "name": "getScrollableUnitIncrement",
            "sourceCode": "@Override\r\n    public int getScrollableUnitIncrement(Rectangle visibleRect, int orientation, int direction) {\r\n        int posCorrente;\r\n        if (orientation == SwingConstants.HORIZONTAL) {\r\n            posCorrente = visibleRect.x;\r\n        } else {\r\n            posCorrente = visibleRect.y;\r\n        }\r\n\r\n        if (direction < 0) {\r\n            int newPos = posCorrente - (posCorrente / maxUnitIncrement) * maxUnitIncrement;\r\n            return (newPos == 0) ? maxUnitIncrement : newPos;\r\n        } else {\r\n            return ((posCorrente / maxUnitIncrement) + 1) * maxUnitIncrement - posCorrente;\r\n        }\r\n    }"
        },
        {
            "parentClass": "ScrollableTable",
            "name": "getScrollableBlockIncrement",
            "sourceCode": "@Override\r\n    public int getScrollableBlockIncrement(Rectangle visibleRect, int orientation, int direction) {\r\n        if (orientation == SwingConstants.HORIZONTAL) {\r\n            return visibleRect.width - maxUnitIncrement;\r\n        } else {\r\n            return visibleRect.height - maxUnitIncrement;\r\n        }\r\n    }"
        },
        {
            "parentClass": "ScrollableTable",
            "name": "getScrollableTracksViewportWidth",
            "sourceCode": "@Override\r\n    public boolean getScrollableTracksViewportWidth() {\r\n        return false;\r\n    }"
        },
        {
            "parentClass": "ScrollableTable",
            "name": "getScrollableTracksViewportHeight",
            "sourceCode": "@Override\r\n    public boolean getScrollableTracksViewportHeight() {\r\n        return false;\r\n    }"
        }
    ]
}