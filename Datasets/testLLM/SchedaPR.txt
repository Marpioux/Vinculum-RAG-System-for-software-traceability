{
  "SchedaPR": [
    {
      "parentClass": "JInternalFrame",
      "name": "SchedaPR",
      "sourceCode": "public SchedaPR() { super(\"New Refreshment\"); campoCompilato = new ActionListener() { public void actionPerformed(ActionEvent actionEvent) { ((JComponent) actionEvent.getSource()).transferFocus(); } }; validating = new FocusListener() { private final Color ERROR_BACKGROUND = new Color(255, 215, 215); private final Color WARNING_BACKGROUND = new Color(255, 235, 205); private String text; public void focusGained(FocusEvent fe) { if (fe.getSource() instanceof JTextField) { JTextField textbox = (JTextField) fe.getSource(); text = textbox.getText(); } } public void focusLost(FocusEvent fe) { if (fe.getSource() instanceof JTextField) { JTextField textbox = (JTextField) fe.getSource(); if (!text.equals(textbox.getText())) { text = textbox.getText(); if (text.equals(\"\")) { textbox.setBackground(ERROR_BACKGROUND); Rectangle bounds = textbox.getBounds(); JLabel newLabel = new JLabel(); newLabel.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/images/error.png\"))); newLabel.setBounds(bounds.x - 24, bounds.y, 24, 24); newLabel.setToolTipText(\"Field \" + textbox.getName() + \" cannot be empty!\"); datiPR.add(newLabel, null); datiPR.repaint(); } } } } }; initialize(); }"
    },
    {
      "parentClass": "JInternalFrame",
      "name": "SchedaPR",
      "sourceCode": "public SchedaPR(BeanPuntoDiRistoro pr, boolean edit) { this(); nomePR.setText(pr.getNome()); setTitle(pr.getNome()); capPR.setText(pr.getCap()); cittaPR.setText(pr.getCitta()); descrizionePR.setText(pr.getDescrizione()); StringTokenizer tokenizer = new StringTokenizer(pr.getVia()); String[] via = {\"Via\", \"P.zza\", \"V.le\", \"V.co\", \"Largo\", \"Corso\"}; String string = tokenizer.nextToken(); int i; for (i = 0; i < via.length; i++) { if (string.equalsIgnoreCase(via[i])) { break; } } this.indirizzoPR1.setSelectedIndex(i); while (tokenizer.hasMoreTokens()) { this.indirizzoPR.setText(indirizzoPR.getText() + \" \" + tokenizer.nextToken()); } this.provPR.setSelectedItem(pr.getProvincia()); Punto3D pos = pr.getPosizione(); this.posGeoX.setText(\"\" + pos.getX()); this.posGeoY.setText(\"\" + pos.getY()); this.posGeoZ.setText(\"\" + pos.getZ()); this.telefonoPR.setText(pr.getTelefono()); int minutes = pr.getOrarioApertura().getMinutes(); if (minutes == 0) { this.orarioApMinPR.setSelectedIndex(0); } else { this.orarioApMinPR.setSelectedItem(minutes); } int hours = pr.getOrarioApertura().getHours(); if (hours < 10) { this.orarioAPOrePR.setSelectedItem(\"0\" + hours); } else { this.orarioAPOrePR.setSelectedItem(hours); } this.orarioCHMinPR.setSelectedItem(pr.getOrarioChiusura().getMinutes()); this.orarioAPOrePR.setSelectedItem(pr.getOrarioApertura().getHours()); this.orarioCHOrePR.setSelectedItem(pr.getOrarioChiusura().getHours()); if (edit) { btnModifica.setSelected(true); } else { makeEditable(); } }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "initialize",
      "sourceCode": "private void initialize() { this.setIconifiable(true); this.setBounds(new Rectangle(0, 0, 600, 540)); this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE); this.setFrameIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/scheda.png\"))); this.setClosable(true); this.setContentPane(getJContentPane()); }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "makeEditable",
      "sourceCode": "private void makeEditable() { Component[] components = datiPR.getComponents(); for (int i = 0; i < components.length; i++) { Component current = components[i]; if (current instanceof JTextField) { JTextField textbox = (JTextField) current; textbox.setEditable(!textbox.isEditable()); textbox.setBackground(Color.white); } else if (current instanceof JComboBox) { JComboBox<?> combo = (JComboBox<?>) current; combo.setEnabled(!combo.isEnabled()); } } descrizionePR.setEditable(!descrizionePR.isEditable()); pannelloTag.attivaDisattiva(); }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getJContentPane",
      "sourceCode": "private JPanel getJContentPane() { if (jContentPane == null) { jContentPane = new JPanel(); jContentPane.setLayout(new BorderLayout()); jContentPane.add(getJTabbedPane(), BorderLayout.CENTER); jContentPane.add(getToolbarSchedaPR(), BorderLayout.NORTH); } return jContentPane; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getBtnModifica",
      "sourceCode": "private JToggleButton getBtnModifica() { if (btnModifica == null) { btnModifica = new JToggleButton(); btnModifica.setText(\"Change Data\"); btnModifica.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/modifica.png\"))); btnModifica.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent arg0) { makeEditable(); btnSalva.setVisible(btnModifica.isSelected()); btnAnnulla.setVisible(btnModifica.isSelected()); } }); } return btnModifica; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getBtnSalva",
      "sourceCode": "private JButton getBtnSalva() { if (btnSalva == null) { btnSalva = new JButton(); btnSalva.setText(\"Save\"); btnSalva.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/salva.png\"))); btnSalva.setVisible(false); } return btnSalva; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getBtnAnnulla",
      "sourceCode": "private JButton getBtnAnnulla() { if (btnAnnulla == null) { btnAnnulla = new JButton(); btnAnnulla.setText(\"Cancel\"); btnAnnulla.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/annulla.png\"))); btnAnnulla.setVisible(false); } return btnAnnulla; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getBtnModificaCommento",
      "sourceCode": "private JButton getBtnModificaCommento() { if (btnModificaCommento == null) { btnModificaCommento = new JButton(); btnModificaCommento.setText(\"Edit Comment\"); btnModificaCommento.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/modificaCommento.png\"))); btnModificaCommento.setVisible(false); } return btnModificaCommento; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getJTabbedPane",
      "sourceCode": "private JTabbedPane getJTabbedPane() { if (jTabbedPane == null) { jTabbedPane = new JTabbedPane(); jTabbedPane.setCursor(new Cursor(Cursor.DEFAULT_CURSOR)); jTabbedPane.addTab(\"Data Refreshment\", new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/dati.png\")), getDatiPR(), null); jTabbedPane.addTab(\"MenuTuristico\", new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/stat24.png\")), null, null); jTabbedPane.addTab(\"Statistics\", new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/stat24.png\")), getStatistiche(), null); jTabbedPane.addTab(\"Feedback received\", new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/feedback.png\")), getFeedback(), null); } return jTabbedPane; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getDatiPR",
      "sourceCode": "private JPanel getDatiPR() { if (datiPR == null) { datiPR = new JPanel(); datiPR.setLayout(new GridBagLayout()); datiPR.setBorder(new SoftBevelBorder(SoftBevelBorder.LOWERED)); GridBagConstraints gridBagConstraints = new GridBagConstraints(); gridBagConstraints.fill = GridBagConstraints.HORIZONTAL; gridBagConstraints.insets = new Insets(5, 5, 5, 5); gridBagConstraints.gridx = 0; gridBagConstraints.gridy = 0; txtNome = new JLabel(\"Name Refreshment\"); txtIndirizzo = new JLabel(\"Address\"); txtCitta = new JLabel(\"City\"); txtLocalità = new JLabel(\"Location\"); txtCAP = new JLabel(\"CAP\"); txtProvincia = new JLabel(\"Province\"); txtPos = new JLabel(\"Geographic Position\"); txtTel = new JLabel(\"Phone\"); txtOraAp = new JLabel(\"Opening Hours\"); txtOraCh = new JLabel(\"Closing Time\"); datiPR.add(txtNome, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtIndirizzo, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtCitta, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtLocalità, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtCAP, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtProvincia, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtPos, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtTel, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtOraAp, gridBagConstraints); gridBagConstraints.gridy++; datiPR.add(txtOraCh, gridBagConstraints); } return datiPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getStatistiche",
      "sourceCode": "private JPanel getStatistiche() { if (statistics == null) { statistics = new JPanel(); statistics.setLayout(new GridBagLayout()); GridBagConstraints gridBagConstraints = new GridBagConstraints(); gridBagConstraints.gridx = 0; gridBagConstraints.gridwidth = 1; gridBagConstraints.fill = GridBagConstraints.HORIZONTAL; gridBagConstraints.insets = new Insets(20, 0, 0, 0); gridBagConstraints.gridy = 0; mediaVotoPR = new JLabel(\"Average Vote\"); statistics.add(mediaVotoPR, gridBagConstraints); } return statistics; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getFeedback",
      "sourceCode": "private JPanel getFeedback() { if (feedback == null) { feedback = new JPanel(); feedback.setLayout(new GridBagLayout()); GridBagConstraints gridBagConstraints = new GridBagConstraints(); gridBagConstraints.fill = GridBagConstraints.BOTH; gridBagConstraints.gridy = 0; gridBagConstraints.weightx = 1.0; gridBagConstraints.weighty = 1.0; gridBagConstraints.gridx = 0; feedback.add(getJScrollPane2(), gridBagConstraints); } return feedback; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getIndirizzoPR",
      "sourceCode": "private JTextField getIndirizzoPR() { if (indirizzoPR == null) { indirizzoPR = new JTextField(); indirizzoPR.setColumns(12); indirizzoPR.addActionListener(campoCompilato); } return indirizzoPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getIndirizzoPR1",
      "sourceCode": "private JComboBox<String> getIndirizzoPR1() { if (indirizzoPR1 == null) { indirizzoPR1 = new JComboBox<>(); indirizzoPR1.setPreferredSize(new Dimension(60, 20)); indirizzoPR1.setMinimumSize(new Dimension(60, 25)); indirizzoPR1.addItem(\"Via\"); indirizzoPR1.addItem(\"P.zza\"); indirizzoPR1.addItem(\"V.le\"); indirizzoPR1.addItem(\"V.co\"); indirizzoPR1.addItem(\"Largo\"); indirizzoPR1.addItem(\"Corso\"); } return indirizzoPR1; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getCittaPR",
      "sourceCode": "private JTextField getCittaPR() { if (cittaPR == null) { cittaPR = new JTextField(); cittaPR.setColumns(12); cittaPR.addActionListener(campoCompilato); } return cittaPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getLocalitaPR",
      "sourceCode": "private JComboBox<String> getLocalitaPR() { if (localitaPR == null) { localitaPR = new JComboBox<>(); localitaPR.setMinimumSize(new Dimension(80, 25)); localitaPR.setPreferredSize(new Dimension(80, 20)); localitaPR.addActionListener(campoCompilato); } return localitaPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getCapPR",
      "sourceCode": "private JTextField getCapPR() { if (capPR == null) { capPR = new JTextField(); capPR.setColumns(8); capPR.addActionListener(campoCompilato); } return capPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getJScrollPane",
      "sourceCode": "private JScrollPane getJScrollPane() { if (jScrollPane == null) { jScrollPane = new JScrollPane(); jScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS); jScrollPane.setViewportView(getDescrizionePR()); } return jScrollPane; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getDescrizionePR",
      "sourceCode": "private JTextArea getDescrizionePR() { if (descrizionePR == null) { descrizionePR = new JTextArea(); descrizionePR.setColumns(12); descrizionePR.setCursor(new Cursor(Cursor.TEXT_CURSOR)); } return descrizionePR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getTelefonoPR",
      "sourceCode": "private JTextField getTelefonoPR() { if (telefonoPR == null) { telefonoPR = new JTextField(); telefonoPR.setColumns(12); telefonoPR.addActionListener(campoCompilato); } return telefonoPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getOrarioAPOrePR",
      "sourceCode": "private JComboBox<String> getOrarioAPOrePR() { if (orarioAPOrePR == null) { orarioAPOrePR = new JComboBox<>(); orarioAPOrePR.setPreferredSize(new Dimension(40, 20)); for (int i = 0; i < 24; i++) { if (i < 10) { orarioAPOrePR.addItem(\"0\" + i); } else { orarioAPOrePR.addItem(i); } } orarioAPOrePR.addActionListener(campoCompilato); } return orarioAPOrePR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getOrarioApMinPR",
      "sourceCode": "private JComboBox<String> getOrarioApMinPR() { if (orarioApMinPR == null) { orarioApMinPR = new JComboBox<>(); orarioApMinPR.setPreferredSize(new Dimension(40, 20)); orarioApMinPR.addItem(\"00\"); orarioApMinPR.addItem(\"15\"); orarioApMinPR.addItem(\"30\"); orarioApMinPR.addItem(\"45\"); orarioApMinPR.addActionListener(campoCompilato); } return orarioApMinPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getOrarioCHMinPR",
      "sourceCode": "private JComboBox<String> getOrarioCHMinPR() { if (orarioCHMinPR == null) { orarioCHMinPR = new JComboBox<>(); orarioCHMinPR.setPreferredSize(new Dimension(40, 20)); orarioCHMinPR.addItem(\"00\"); orarioCHMinPR.addItem(\"15\"); orarioCHMinPR.addItem(\"30\"); orarioCHMinPR.addItem(\"45\"); orarioCHMinPR.addActionListener(campoCompilato); } return orarioCHMinPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getProvPR",
      "sourceCode": "private JComboBox<String> getProvPR() { if (provPR == null) { final String[] province = {\"AG\", \"AL\", \"AN\", \"AO\", \"AQ\", \"AR\", \"AP\", \"AT\", \"AV\", \"BA\", \"BL\", \"BN\", \"BG\", \"BI\", \"BO\", \"BR\", \"BS\", \"BZ\", \"CA\", \"CB\", \"CE\", \"CH\", \"CI\", \"CL\", \"CN\", \"CO\", \"CR\", \"CS\", \"KR\", \"EN\", \"FC\", \"FE\", \"FI\", \"FG\", \"FR\", \"GE\", \"GO\", \"GR\", \"IM\", \"IS\", \"LC\", \"LE\", \"LI\", \"LO\", \"LT\", \"LU\", \"MC\", \"ME\", \"MF\", \"MN\", \"MO\", \"MS\", \"MT\", \"NA\", \"NO\", \"NU\", \"OG\", \"OR\", \"OT\", \"PA\", \"PC\", \"PD\", \"PE\", \"PG\", \"PO\", \"PR\", \"PU\", \"R\", \"RA\", \"RC\", \"RE\", \"RG\", \"RI\", \"RM\", \"RN\", \"RO\", \"SA\", \"SI\", \"SO\", \"SP\", \"SS\", \"SV\", \"TA\", \"TE\", \"TN\", \"TP\", \"TR\", \"TS\", \"TV\", \"UD\", \"VA\", \"VB\", \"VC\", \"VE\", \"VI\", \"VR\", \"VS\", \"VT\", \"VV\"}; provPR = new JComboBox<>(); for (String provincia : province) { provPR.addItem(provincia); } provPR.addActionListener(campoCompilato); } return provPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getNomePR",
      "sourceCode": "private JTextField getNomePR() { if (nomePR == null) { nomePR = new JTextField(); nomePR.setColumns(12); nomePR.setPreferredSize(new Dimension(180, 20)); nomePR.addActionListener(campoCompilato); nomePR.addFocusListener(validating); nomePR.setDocument(new DocumentoNumerico(20)); } return nomePR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getJPanel",
      "sourceCode": "private JPanel getJPanel() { if (jPanel == null) { jPanel = new JPanel(); jPanel.setLayout(new BorderLayout()); jPanel.setBorder(BorderFactory.createTitledBorder( BorderFactory.createEmptyBorder(), \"Tag the 'Search\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), Color.black)); BeanTag[] test = new BeanTag[8]; test[0] = new BeanTag(0, \"castle\", \"really a castle\"); test[1] = new BeanTag(1, \"stronghold\", \"really a hostel\"); test[2] = new BeanTag(2, \"statue\", \"really a basket\"); test[3] = new BeanTag(3, \"column\", \"really a basket\"); test[4] = new BeanTag(4, \"internal\", \"really a basket\"); test[5] = new BeanTag(5, \"external\", \"really a basket\"); test[6] = new BeanTag(6, \"eight hundred\", \"really a basket\"); test[7] = new BeanTag(7, \"Novecento\", \"really a basket\"); pannelloTag = new TagPanel(test); jPanel.add(pannelloTag, BorderLayout.CENTER); } return jPanel; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getJScrollPane2",
      "sourceCode": "private JScrollPane getJScrollPane2() { if (jScrollPane2 == null) { jScrollPane2 = new JScrollPane(); jScrollPane2.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS); jScrollPane2.setViewportView(getFeedbackTable()); } return jScrollPane2; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getFeedbackTable",
      "sourceCode": "private JTable getFeedbackTable() { if (feedbackTable == null) { feedbackTable = new JTable(); } return feedbackTable; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getStatisticheMeseCorrente",
      "sourceCode": "private JPanel getStatisticheMeseCorrente() { if (statisticheMeseCorrente == null) { statisticheMeseCorrente = new JPanel(); statisticheMeseCorrente.setLayout(new GridBagLayout()); statisticheMeseCorrente.setPreferredSize(new Dimension(500, 120)); } return statisticheMeseCorrente; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getStatisticheTotali",
      "sourceCode": "private JPanel getStatisticheTotali() { if (statisticheTotali == null) { statisticheTotali = new JPanel(); statisticheTotali.setLayout(new GridBagLayout()); statisticheTotali.setPreferredSize(new Dimension(500, 120)); } return statisticheTotali; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getToolbarSchedaPR",
      "sourceCode": "private JToolBar getToolbarSchedaPR() { if (toolbarSchedaPR == null) { toolbarSchedaPR = new JToolBar(); toolbarSchedaPR.setFloatable(false); toolbarSchedaPR.add(getBtnModifica()); toolbarSchedaPR.addSeparator(); toolbarSchedaPR.add(getBtnSalva()); toolbarSchedaPR.addSeparator(); toolbarSchedaPR.add(getBtnAnnulla()); toolbarSchedaPR.addSeparator(); toolbarSchedaPR.add(getBtnModificaCommento()); toolbarSchedaPR.addSeparator(); } return toolbarSchedaPR; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getPosGeoX",
      "sourceCode": "private JTextField getPosGeoX() { if (posGeoX == null) { posGeoX = new JTextField(); } return posGeoX; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getPosGeoY",
      "sourceCode": "private JTextField getPosGeoY() { if (posGeoY == null) { posGeoY = new JTextField(); } return posGeoY; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getPosGeoZ",
      "sourceCode": "private JTextField getPosGeoZ() { if (posGeoZ == null) { posGeoZ = new JTextField(); } return posGeoZ; }"
    },
    {
      "parentClass": "SchedaPR",
      "name": "getOrarioCHOrePR",
      "sourceCode": "private JComboBox<String> getOrarioCHOrePR() { if (orarioCHOrePR == null) { orarioCHOrePR = new JComboBox<>(); orarioCHOrePR.setPreferredSize(new Dimension(40, 20)); } return orarioCHOrePR; }"
    }
  ]
}