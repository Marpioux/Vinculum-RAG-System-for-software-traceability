[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    panel[11].setLayout(gridbag);\r\n    elenco_extra1 = new Label(\"Scegliere il bene o servizio, appartenente\");\r\n    elenco_extra2 = new Label(\"alla categoria selezionata, da modificare\");\r\n    elenco = new List(3, false);\r\n    annulla3 = new Button(\" Fine \");\r\n    Utils.constrain(panel[11], elenco_extra1, 0, 0, 5, 1, GridBagConstraints.NONE, GridBagConstraints.WEST, 0.0, 0.0, 0, 0, 0, 0);\r\n    Utils.constrain(panel[11], elenco_extra2, 0, 1, 5, 1, GridBagConstraints.NONE, GridBagConstraints.WEST, 0.0, 0.0, 0, 0, 5, 0);\r\n    Utils.constrain(panel[11], elenco, 0, 2, 5, 1, GridBagConstraints.HORIZONTAL, GridBagConstraints.CENTER, 1.0, 0.0, 0, 5, 5, 0);\r\n    Utils.constrain(panel[11], annulla3, 2, 3, 1, 1, GridBagConstraints.NONE, GridBagConstraints.CENTER, 1.0, 0.0, 5, 5, 5, 5);\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": " void setupPannello()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    scelta_piatto[4].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_piatto[4].getState()) {\r\n                level = 1;\r\n                codice = composeCode(level, BeneServizio.DESSERT);\r\n                p();\r\n            }\r\n        }\r\n    });\r\n    scelta_piatto[5].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_piatto[5].getState()) {\r\n                level = 1;\r\n                codice = composeCode(level, BeneServizio.FRUTTA);\r\n                p();\r\n            }\r\n        }\r\n    });\r\n    scelta_servizio[0].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_servizio[0].getState()) {\r\n                level = 1;\r\n                codice = composeCode(level, BeneServizio.RICREATIVI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_servizio[1].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_servizio[1].getState()) {\r\n                level = 1;\r\n                codice = composeCode(level, BeneServizio.ALTRO);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_bevanda[0].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_bevanda[0].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.CAFFETTERIA);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_bevanda[1].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_bevanda[1].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.ANALCOLICI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_bevanda[2].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_bevanda[2].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.ALCOLICI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_cibo[0].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_cibo[0].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.DOLCI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_cibo[1].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_cibo[1].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.SALATI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_antipasto[0].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_antipasto[0].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.FREDDI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_antipasto[1].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_antipasto[1].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.CALDI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_primo[0].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_primo[0].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.SOLIDI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_primo[1].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_primo[1].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.LIQUIDI);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_secondo[0].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_secondo[0].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.CARNE);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_secondo[1].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_secondo[1].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.PESCE);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_contorno[0].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_contorno[0].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.VERDURA_COTTA);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_contorno[1].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_contorno[1].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.VERDURA_CRUDA);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    scelta_contorno[2].addItemListener(new ItemListener() {\r\n\r\n        public void itemStateChanged(ItemEvent e) {\r\n            if (scelta_contorno[2].getState()) {\r\n                level = 2;\r\n                codice = composeCode(level, BeneServizio.FORMAGGIO);\r\n                o();\r\n            }\r\n        }\r\n    });\r\n    conferma.addActionListener(new ActionListener() {\r\n\r\n        public void actionPerformed(ActionEvent e) {\r\n            startConferma();\r\n        }\r\n    });\r\n    annulla3.addActionListener(new ActionListener() {\r\n\r\n        public void actionPerformed(ActionEvent e) {\r\n            dispose();\r\n            padre.setEnabled(true);\r\n        }\r\n    });\r\n    elenco.addActionListener(new ActionListener() {\r\n\r\n        public void actionPerformed(ActionEvent e) {\r\n            beneSelezionato();\r\n        }\r\n    });\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void initialize()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_piatto[4].getState()) {\r\n        level = 1;\r\n        codice = composeCode(level, BeneServizio.DESSERT);\r\n        p();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_piatto[5].getState()) {\r\n        level = 1;\r\n        codice = composeCode(level, BeneServizio.FRUTTA);\r\n        p();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_servizio[0].getState()) {\r\n        level = 1;\r\n        codice = composeCode(level, BeneServizio.RICREATIVI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_servizio[1].getState()) {\r\n        level = 1;\r\n        codice = composeCode(level, BeneServizio.ALTRO);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_bevanda[0].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.CAFFETTERIA);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_bevanda[1].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.ANALCOLICI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_bevanda[2].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.ALCOLICI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_cibo[0].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.DOLCI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_cibo[1].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.SALATI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_antipasto[0].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.FREDDI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_antipasto[1].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.CALDI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_primo[0].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.SOLIDI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_primo[1].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.LIQUIDI);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_secondo[0].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.CARNE);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_secondo[1].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.PESCE);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_contorno[0].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.VERDURA_COTTA);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_contorno[1].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.VERDURA_CRUDA);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (scelta_contorno[2].getState()) {\r\n        level = 2;\r\n        codice = composeCode(level, BeneServizio.FORMAGGIO);\r\n        o();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void itemStateChanged(ItemEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    startConferma();\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void actionPerformed(ActionEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    dispose();\r\n    padre.setEnabled(true);\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void actionPerformed(ActionEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    beneSelezionato();\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void actionPerformed(ActionEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    int id;\r\n    MessageDialog msg;\r\n    if (!errore()) {\r\n        Float px = Float.valueOf(testo4.getText());\r\n        int j;\r\n        if ((j = (Principale.db).changeBeneServizio(extra.getCodExtra(), testo3.getText(), px.floatValue())) == DataBase.OK) {\r\n            for (int i = 1; i < 13; ++i) if (panel[i].isVisible())\r\n                remove(panel[i]);\r\n            panel[0].setVisible(true);\r\n        } else\r\n            msg = new MessageDialog(this, \"Problemi con il data base: \" + DataBase.strErrore(j));\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": " void startConferma()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    extra = L.getBeneServizio((elenco.getSelectedIndexes())[0] + 1);\r\n    remove(panel[11]);\r\n    this.add(panel[10]);\r\n    testo3.setText(extra.getDescrizione());\r\n    testo4.setText(extra.getPxUnitario() + \"\");\r\n    panel[10].setVisible(true);\r\n    setVisible(true);\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": " void beneSelezionato()",
                "comments": null,
                "innerComments": null
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    super(\"Modifica dei dati di un bene o servizio\");\r\n    setupPannello();\r\n    initialize();\r\n}",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public ModificaBeniServizi()",
                "comments": null,
                "innerComments": null
            }
        ],
        "signature": "ModificaBeniServizi",
        "variables": [
            " BeneServizio extra",
            " Label elenco_extra1",
            " Label elenco_extra2",
            " Button annulla3"
        ]
    }
]