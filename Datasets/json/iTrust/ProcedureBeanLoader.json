[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    ArrayList<ProcedureBean> list = new ArrayList<ProcedureBean>();\r\n    while (rs.next()) {\r\n        list.add(loadSingle(rs));\r\n    }\r\n    return list;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public List<ProcedureBean> loadList(ResultSet)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Loads a list of ProcedureBeans from the given ResultSet.\n * \n * @param rs the ResultSet containing the data to be loaded\n * @return a List of ProcedureBeans loaded from the ResultSet\n * \n * This method iterates through the ResultSet and creates a new ProcedureBean object for each row of data.\n * It then adds each ProcedureBean to an ArrayList and returns the list of ProcedureBeans.\n */"
            },
            {
                "body": "Optional[{\r\n    ProcedureBean procedure = new ProcedureBean(rs.getString(\"Code\"));\r\n    procedure.setDescription(rs.getString(\"Description\"));\r\n    procedure.setAttribute(rs.getString(\"Attribute\"));\r\n    if (loadOVProcedureID) {\r\n        procedure.setOvProcedureID(rs.getLong(\"ID\"));\r\n        procedure.setDate(rs.getDate(\"visitDate\"));\r\n    }\r\n    return procedure;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public ProcedureBean loadSingle(ResultSet)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Loads a single ProcedureBean object from the given ResultSet.\n * \n * @param rs the ResultSet containing the data for the ProcedureBean object\n * @return a ProcedureBean object with the data from the ResultSet\n */\npublic ProcedureBean loadSingle(ResultSet rs) {\n    ProcedureBean procedure = new ProcedureBean(rs.getString(\"Code\"));\n    procedure.setDescription(rs.getString(\"Description\"));\n    procedure.setAttribute(rs.getString(\"Attribute\"));\n    if (loadOVProcedureID) {\n        procedure.setOvProcedureID(rs.getLong(\"ID\"));\n        procedure.setDate(rs.getDate(\"visitDate\"));\n    }\n    return procedure;\n}"
            },
            {
                "body": "Optional[{\r\n    ps.setString(1, bean.getDescription());\r\n    return ps;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public PreparedStatement loadParameters(PreparedStatement, ProcedureBean)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Loads the parameters of a PreparedStatement with the values from a ProcedureBean.\n * \n * @param ps the PreparedStatement to load parameters into\n * @param bean the ProcedureBean containing the values to set\n * @return the PreparedStatement with parameters loaded\n */"
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    this.loadOVProcedureID = false;\r\n}",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public ProcedureBeanLoader()",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * This constructor initializes a new ProcedureBeanLoader object with the default settings.\n * \n * Parameters:\n * None\n * \n * Behavior:\n * Sets the loadOVProcedureID flag to false, indicating that the ProcedureBeanLoader will not load the OVProcedureID during initialization.\n */"
            },
            {
                "body": "{\r\n    this.loadOVProcedureID = loadOVProcedureID;\r\n}",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public ProcedureBeanLoader(boolean)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Constructs a new ProcedureBeanLoader with the specified boolean value for loading OV Procedure ID.\n * \n * @param loadOVProcedureID a boolean value indicating whether to load OV Procedure ID\n * \n * @return a new ProcedureBeanLoader object with the specified loadOVProcedureID value\n */"
            }
        ],
        "signature": "ProcedureBeanLoader",
        "variables": [
            "private boolean loadOVProcedureID"
        ],
        "generated_class_comment": "Sure! Here is a comprehensive JavaDoc comment for the class:\n\n/**\n * This class represents a data access object for loading ProcedureBean objects from a ResultSet.\n * It provides methods to load a single ProcedureBean object or a list of ProcedureBean objects from the ResultSet.\n * \n * The loadList method iterates through the ResultSet and creates a new ProcedureBean object for each row of data.\n * It then adds each ProcedureBean to an ArrayList and returns the list of ProcedureBeans.\n * \n * The loadSingle method loads a single ProcedureBean object from the ResultSet by setting its attributes.\n * \n * This class encapsulates the logic for loading ProcedureBean objects from a ResultSet and provides a clean interface for accessing this functionality.\n */\npublic class ProcedureDAO {\n    // class implementation goes here\n}\n*/\n/**\n * The ProcedureBeanLoader class is responsible for loading parameters into a PreparedStatement object from a ProcedureBean object.\n * It provides methods to set and load parameters, as well as constructors to initialize the loader with specific settings.\n * \n * Main functionalities:\n * - Load parameters from a ProcedureBean into a PreparedStatement\n * - Set the loadOVProcedureID flag to indicate whether to load the OV Procedure ID\n * \n * Overall behavior:\n * - The class can be used to efficiently load parameters into a PreparedStatement object for database operations.\n * - It offers flexibility through constructors to customize the loading behavior based on the loadOVProcedureID flag.\n * \n * Variables:\n * - private boolean loadOVProcedureID: a flag indicating whether to load the OV Procedure ID during initialization\n * \n * Methods:\n * - public PreparedStatement loadParameters(PreparedStatement ps, ProcedureBean bean): Loads parameters into a PreparedStatement from a ProcedureBean\n * \n * Constructors:\n * - public ProcedureBeanLoader(): Initializes a new ProcedureBeanLoader object with default settings\n * - public ProcedureBeanLoader(boolean loadOVProcedureID): Constructs a new ProcedureBeanLoader with a specified boolean value for loading OV Procedure ID\n * \n * @author [Your Name]\n * @version 1.0\n */"
    }
]