[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    ArrayList<VisitReminderReturnForm> list = new ArrayList<VisitReminderReturnForm>();\r\n    while (rs.next()) {\r\n        list.add(loadSingle(rs));\r\n    }\r\n    return list;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public List<VisitReminderReturnForm> loadList(ResultSet)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Retrieves a list of VisitReminderReturnForm objects from the given ResultSet.\n * \n * @param rs the ResultSet containing the data to be loaded into VisitReminderReturnForm objects\n * @return a List of VisitReminderReturnForm objects populated with data from the ResultSet\n * @throws SQLException if an error occurs while accessing the ResultSet\n */\npublic List<VisitReminderReturnForm> loadList(ResultSet rs) throws SQLException {\n    ArrayList<VisitReminderReturnForm> list = new ArrayList<VisitReminderReturnForm>();\n    while (rs.next()) {\n        list.add(loadSingle(rs));\n    }\n    return list;\n}"
            },
            {
                "body": "Optional[{\r\n    int i = 0;\r\n    return new // hcpid\r\n    VisitReminderReturnForm(// hcpid\r\n    rs.getLong(++i), // patient ID\r\n    rs.getLong(++i), // last name\r\n    rs.getString(++i), // first\r\n    rs.getString(++i), // phone1\r\n    rs.getString(++i), // phone2\r\n    rs.getString(++i), // ,// phone3\r\n    rs.getString(++i));\r\n    // \"diagnosis: \" + rs.getString(++i),\r\n    // \"last visit: \" + rs.getString(++i));\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public VisitReminderReturnForm loadSingle(ResultSet)",
                "comments": null,
                "innerComments": "Optional[[// \"diagnosis: \" + rs.getString(++i),\r\n, // \"last visit: \" + rs.getString(++i));\r\n, // hcpid\r\n, // hcpid\r\n, // patient ID\r\n, // last name\r\n, // first\r\n, // phone1\r\n, // phone2\r\n, // ,// phone3\r\n]]",
                "generated_comment": "/**\n * Loads a single VisitReminderReturnForm object from the given ResultSet.\n * \n * @param rs the ResultSet containing the data to load into the VisitReminderReturnForm object\n * @return a VisitReminderReturnForm object with the data loaded from the ResultSet\n * \n * The ResultSet should contain the following columns in the specified order:\n * 1. hcpid\n * 2. patient ID\n * 3. last name\n * 4. first name\n * 5. phone1\n * 6. phone2\n * 7. phone3\n * \n * The method increments the index 'i' for each column to retrieve the data from the ResultSet.\n * \n * @throws SQLException if there is an error accessing the ResultSet\n */"
            },
            {
                "body": "Optional[{\r\n    throw new IllegalStateException(\"unimplemented!\");\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public PreparedStatement loadParameters(PreparedStatement, VisitReminderReturnForm)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Loads parameters into a PreparedStatement object based on the given VisitReminderReturnForm object.\n * \n * @param preparedStatement the PreparedStatement object to load parameters into\n * @param visitReminderReturnForm the VisitReminderReturnForm object containing the parameters to be loaded\n * @return the PreparedStatement object with parameters loaded\n * @throws IllegalStateException if the method is not implemented\n */\npublic PreparedStatement loadParameters(PreparedStatement preparedStatement, VisitReminderReturnForm visitReminderReturnForm) {\n    throw new IllegalStateException(\"unimplemented!\");\n}"
            }
        ],
        "constructors": [],
        "signature": "VisitReminderReturnFormLoader",
        "variables": [],
        "generated_class_comment": "/**\n * This class is responsible for loading VisitReminderReturnForm objects from a ResultSet.\n * It contains methods to load a single VisitReminderReturnForm object and a list of VisitReminderReturnForm objects.\n * \n * The loadSingle method retrieves data from the ResultSet and creates a new VisitReminderReturnForm object with the extracted data.\n * \n * The loadList method iterates through the ResultSet and calls the loadSingle method to populate a List of VisitReminderReturnForm objects.\n * \n * Overall, this class provides functionality to extract data from a ResultSet and create VisitReminderReturnForm objects, making it easier to work with data retrieved from a database in the form of VisitReminderReturnForm objects.\n */\n/**\n * The VisitReminderReturnFormLoader class is responsible for loading data from a ResultSet into a VisitReminderReturnForm object\n * and for loading parameters into a PreparedStatement object based on the VisitReminderReturnForm object.\n * \n * The loadVisitReminderReturnForm method retrieves data from the ResultSet and constructs a VisitReminderReturnForm object\n * with the data loaded from the ResultSet columns in the specified order: hcpid, patient ID, last name, first name, phone1, phone2, phone3.\n * The method increments the index 'i' for each column to retrieve the data from the ResultSet.\n * \n * The loadParameters method loads parameters into a PreparedStatement object based on the given VisitReminderReturnForm object.\n * It takes a PreparedStatement object and a VisitReminderReturnForm object as parameters and returns the PreparedStatement object with parameters loaded.\n * \n * If the loadParameters method is not implemented, an IllegalStateException is thrown.\n * \n * @author [Author Name]\n * @version 1.0\n * @see VisitReminderReturnForm\n * @see PreparedStatement\n * @see ResultSet\n */"
    }
]