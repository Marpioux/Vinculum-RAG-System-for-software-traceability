[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    return role;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public String getRole()",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Returns the role of the user.\n * \n * @return the role of the user as a String\n */"
            },
            {
                "body": "Optional[{\r\n    this.role = role;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void setRole(String)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Sets the role of the object.\n * \n * @param role the new role to set\n * \n * This method sets the role of the object to the specified role. \n * \n * @return void\n */"
            },
            {
                "body": "Optional[{\r\n    return addedInfo;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public String getAddedInfo()",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Retrieves the additional information associated with this object.\n * \n * @return the additional information as a String\n */"
            },
            {
                "body": "Optional[{\r\n    this.addedInfo = addedInfo;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void setAddedInfo(String)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Sets the additional information for the object.\n * \n * @param addedInfo the additional information to be set\n * \n * This method sets the additional information for the object to the specified value.\n * \n * @return void\n */"
            },
            {
                "body": "Optional[{\r\n    return loggedInMID;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public long getLoggedInMID()",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Retrieves the unique identifier of the currently logged in user.\n * \n * @return the unique identifier of the currently logged in user\n */"
            },
            {
                "body": "Optional[{\r\n    this.loggedInMID = loggedInMID;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void setLoggedInMID(long)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Sets the logged in member ID.\n * \n * @param loggedInMID the member ID of the logged in user\n * \n * This method sets the member ID of the currently logged in user to the specified value.\n * \n * @return void\n */"
            },
            {
                "body": "Optional[{\r\n    return secondaryMID;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public long getSecondaryMID()",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Retrieves the secondary MID (Machine Identification Number) associated with this object.\n * \n * @return the secondary MID of this object\n */"
            },
            {
                "body": "Optional[{\r\n    this.secondaryMID = secondaryMID;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void setSecondaryMID(long)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Sets the secondary MID (Message ID) for this object.\n * \n * @param secondaryMID the secondary MID to set\n * \n * This method sets the secondary MID for this object to the specified value.\n * \n * @return void\n */"
            },
            {
                "body": "Optional[{\r\n    return timeLogged;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public Timestamp getTimeLogged()",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Returns the timestamp representing the time at which the log entry was created.\n * \n * @return the timestamp representing the time at which the log entry was created\n */"
            },
            {
                "body": "Optional[{\r\n    this.timeLogged = timeLogged;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void setTimeLogged(Timestamp)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Sets the time that the log was recorded.\n * \n * @param timeLogged the timestamp representing the time the log was recorded\n * @return void\n */"
            },
            {
                "body": "Optional[{\r\n    return transactionType;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public TransactionType getTransactionType()",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Retrieves the transaction type associated with this transaction.\n * \n * @return the transaction type of this transaction\n */"
            },
            {
                "body": "Optional[{\r\n    this.transactionType = tranactionType;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void setTransactionType(TransactionType)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Sets the transaction type for this object.\n * \n * @param transactionType the transaction type to be set\n * @return void\n */\npublic void setTransactionType(TransactionType transactionType) {\n    this.transactionType = transactionType;\n}"
            },
            {
                "body": "Optional[{\r\n    return transactionID;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public long getTransactionID()",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Retrieves the transaction ID associated with this object.\n * \n * @return The transaction ID as a long value.\n */"
            },
            {
                "body": "Optional[{\r\n    this.transactionID = transactionID;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void setTransactionID(long)",
                "comments": null,
                "innerComments": null,
                "generated_comment": "/**\n * Sets the transaction ID for this object.\n * \n * @param transactionID the unique identifier for the transaction\n * \n * This method sets the transaction ID to the specified value. \n * \n * @return void\n */"
            }
        ],
        "constructors": [],
        "signature": "TransactionBean",
        "variables": [
            "private long transactionID",
            "private long loggedInMID",
            "private long secondaryMID",
            "private TransactionType transactionType",
            "private Timestamp timeLogged",
            "private String addedInfo",
            "private String role"
        ],
        "generated_class_comment": "/**\n * This class represents a User object that stores information about a user in a system.\n * It includes attributes such as role, additional information, and the unique identifier of the currently logged in user.\n * \n * The main functionalities of this class include:\n * - Getting and setting the role of the user\n * - Getting and setting additional information associated with the user\n * - Getting and setting the unique identifier of the currently logged in user\n * \n * The overall behavior of this class is to provide methods for managing user information within the system.\n * Users can retrieve and update their role, additional information, and unique identifier using the provided methods.\n */\n**/\n/**\n * The LogEntry class represents a log entry in a logging system. It contains information about the user who is logged in, the secondary Machine Identification Number (MID), the timestamp when the log entry was created, and the transaction type.\n * \n * This class provides methods to set and retrieve the logged in member ID, secondary MID, time logged, and transaction type. It also includes methods to set these values.\n * \n * The main functionalities of this class include:\n * - Setting and retrieving the logged in member ID\n * - Setting and retrieving the secondary MID\n * - Setting and retrieving the time logged\n * - Retrieving the transaction type\n * \n * The overall behavior of this class is to store and manage log entries in a logging system. It allows for the tracking of user activities, timestamps, and transaction types for auditing and monitoring purposes.\n */\n/**\n * The TransactionBean class represents a transaction object that encapsulates information about a specific transaction.\n * It contains various attributes such as transaction ID, logged-in member ID, secondary member ID, transaction type, time logged, added information, and role.\n * This class provides methods to retrieve and set these attributes, as well as perform operations related to transactions.\n * \n * The main functionalities of this class include:\n * - Retrieving and setting the transaction ID associated with the transaction.\n * - Retrieving and setting the logged-in member ID and secondary member ID.\n * - Retrieving and setting the transaction type for the transaction.\n * - Retrieving and setting the time when the transaction was logged.\n * - Retrieving and setting any additional information related to the transaction.\n * - Retrieving and setting the role of the transaction.\n * \n * Overall, the TransactionBean class serves as a data structure for storing transaction information and provides methods to manipulate and access this information.\n */"
    }
]