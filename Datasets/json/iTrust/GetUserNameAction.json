[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    try {\r\n        long mid = Long.valueOf(inputMID);\r\n        return factory.getAuthDAO().getUserName(mid);\r\n    } catch (NumberFormatException e) {\r\n        throw new iTrustException(\"MID not in correct form\");\r\n    }\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public String getUserName(String)",
                "comments": "Optional[/**\r\n * Returns the person's name that matches the inputMID param\r\n *\r\n * @param inputMID The MID to look up.\r\n * @return the person's name\r\n * @throws DBException\r\n * @throws iTrustException\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    this.factory = factory;\r\n}",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public GetUserNameAction(DAOFactory)",
                "comments": "Optional[/**\r\n * Set up defaults\r\n *\r\n * @param factory The DAOFactory used for creating the DAOs for this action.\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "signature": "GetUserNameAction",
        "variables": [
            "private DAOFactory factory"
        ]
    }
]