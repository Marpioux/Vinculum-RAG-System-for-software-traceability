[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    this.setSize(700, 480);\r\n    this.setPreferredSize(new Dimension(790, 520));\r\n    this.setFrameIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/immagini/statistics-32x32.png\")));\r\n    this.setIconifiable(true);\r\n    this.setMaximizable(true);\r\n    this.setClosable(true);\r\n    this.setTitle(\"Statistical Report\");\r\n    this.setContentPane(getJContentPane());\r\n    caricaCombo(this.getJComboBox());\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private void initialize()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jContentPane == null) {\r\n        BorderLayout borderLayout = new BorderLayout();\r\n        borderLayout.setHgap(0);\r\n        borderLayout.setVgap(5);\r\n        jContentPane = new JPanel();\r\n        jContentPane.setLayout(borderLayout);\r\n        jContentPane.add(getJToolBar(), BorderLayout.NORTH);\r\n        jContentPane.add(getCentralPanel(), BorderLayout.CENTER);\r\n        jContentPane.add(getSouthPanel(), BorderLayout.SOUTH);\r\n    }\r\n    return jContentPane;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getJContentPane()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jToolBar == null) {\r\n        jToolBar = new JToolBar();\r\n        jToolBar.setFloatable(false);\r\n        jToolBar.setLayout(new GridBagLayout());\r\n        jToolBar.setPreferredSize(new Dimension(1, 30));\r\n        jToolBar.add(getJLabel());\r\n        jToolBar.addSeparator();\r\n        jToolBar.add(getJComboBox());\r\n    }\r\n    return jToolBar;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JToolBar getJToolBar()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    JLabel jLabel = new JLabel();\r\n    jLabel.setText(\"Select Location\");\r\n    jLabel.setLocation(new Point(16, 6));\r\n    return jLabel;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JLabel getJLabel()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jComboBox == null) {\r\n        jComboBox = new JComboBox<>();\r\n        jComboBox.setLocation(new Point(140, 4));\r\n        jComboBox.setPreferredSize(new Dimension(150, 20));\r\n        jComboBox.setSize(new Dimension(140, 20));\r\n    }\r\n    return jComboBox;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JComboBox<String> getJComboBox()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    BeanPuntoDiRistoro[] pr = new BeanPuntoDiRistoro[5];\r\n    for (int i = 0; i < 5; i++) {\r\n        pr[i] = new BeanPuntoDiRistoro(1, 12, 3.5, \"Arturo\", \"Vicino al mare, great view, romantic\", \"089203202\", \"mountains\", \"Amalfi\", \"Via Principe 35\", \"84123\", \"NA\", \"1234567898741\", new Punto3D(12, 324, 3), new Date(2, 23, 3), new Date(3, 3, 4), \"Monday\");\r\n    }\r\n    BeanBeneCulturale[] bc = new BeanBeneCulturale[5];\r\n    for (int i = 0; i < 5; i++) {\r\n        bc[i] = new BeanBeneCulturale(0.120, \"Castle Arechi\", \"Salerno\", \"089723088\", \"The castle stands on a hill, overlooking the city\", \"Salerno\", \"Largo Castelli 12\", \"84100\", \"SA\", new Punto3D(10, 30, 40), new Date(0, 0, 0, 9, 0), new Date(0, 0, 0, 23, 0), \"Monday\", 12.5, 4.5);\r\n    }\r\n    for (int i = 0; i < pr.length; i++) {\r\n        if (isUnique(combo, pr[i].getLocal())) {\r\n            jComboBox.addItem(pr[i].getLocal());\r\n        }\r\n    }\r\n    for (int i = 0; i < bc.length; i++) {\r\n        if (isUnique(combo, bc[i].getLocal())) {\r\n            jComboBox.addItem(bc[i].getLocal());\r\n        }\r\n    }\r\n    tabellas.setModel(new ReportTableModel(bc, pr));\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void caricaCombo(JComboBox<String>)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    for (int i = 0; i < combo.getItemCount(); i++) {\r\n        if (combo.getItemAt(i).equals(loc)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private boolean isUnique(JComboBox<String>, String)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (centralPanel == null) {\r\n        centralPanel = new JPanel();\r\n        centralPanel.setLayout(new BorderLayout());\r\n        centralPanel.add(getJScrollPane(), BorderLayout.CENTER);\r\n        centralPanel.add(getJPanel(), BorderLayout.EAST);\r\n    }\r\n    return centralPanel;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getCentralPanel()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jScrollPane == null) {\r\n        jScrollPane = new JScrollPane();\r\n        jScrollPane.setViewportView(getTabellaSiti());\r\n    }\r\n    return jScrollPane;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JScrollPane getJScrollPane()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (tabellas == null) {\r\n        tabellas = new JTable();\r\n    }\r\n    return tabellas;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JTable getTabellaSiti()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (southPanel == null) {\r\n        GridBagConstraints gridBagConstraints11 = new GridBagConstraints();\r\n        gridBagConstraints11.anchor = GridBagConstraints.SOUTH;\r\n        gridBagConstraints11.insets = new Insets(0, 0, 5, 0);\r\n        GridBagConstraints gridBagConstraints = new GridBagConstraints();\r\n        gridBagConstraints.fill = GridBagConstraints.BOTH;\r\n        gridBagConstraints.weighty = 1.0;\r\n        gridBagConstraints.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints.gridx = 0;\r\n        gridBagConstraints.gridy = 0;\r\n        gridBagConstraints.weightx = 1.0;\r\n        southPanel = new JPanel();\r\n        southPanel.setLayout(new GridBagLayout());\r\n        southPanel.add(getJTabbedPane(), gridBagConstraints);\r\n        southPanel.add(getGuidainlinea(), gridBagConstraints11);\r\n    }\r\n    return southPanel;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getSouthPanel()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jTabbedPane == null) {\r\n        jTabbedPane = new JTabbedPane();\r\n        jTabbedPane.setPreferredSize(new Dimension(100, 200));\r\n        jTabbedPane.setName(\"\");\r\n        jTabbedPane.setTabPlacement(JTabbedPane.TOP);\r\n        jTabbedPane.addTab(\"General Statistics\", null, getGenStat(), null);\r\n        jTabbedPane.addTab(\"Site Statistics\", null, getEvdStat(), null);\r\n        jTabbedPane.addTab(\"Additional Statistics\", null, getStat(), null);\r\n    }\r\n    return jTabbedPane;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JTabbedPane getJTabbedPane()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (guidainlinea == null) {\r\n        GridBagConstraints gridBagConstraints1 = new GridBagConstraints();\r\n        gridBagConstraints1.fill = GridBagConstraints.BOTH;\r\n        gridBagConstraints1.weighty = 1.0;\r\n        gridBagConstraints1.weightx = 1.0;\r\n        guidainlinea = new JPanel();\r\n        guidainlinea.setLayout(new GridBagLayout());\r\n        guidainlinea.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(51, 102, 255), 3), \"Help\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(51, 153, 255)));\r\n        guidainlinea.setPreferredSize(new Dimension(180, 200));\r\n        guidainlinea.add(getJTextPane(), gridBagConstraints1);\r\n    }\r\n    return guidainlinea;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getGuidainlinea()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jTextPane == null) {\r\n        jTextPane = new JTextPane();\r\n        jTextPane.setPreferredSize(new Dimension(160, 100));\r\n    }\r\n    return jTextPane;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JTextPane getJTextPane()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (genStat == null) {\r\n        GridBagConstraints gridBagConstraints14 = new GridBagConstraints();\r\n        gridBagConstraints14.gridx = 2;\r\n        gridBagConstraints14.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints14.gridy = 3;\r\n        jLabel9 = new JLabel();\r\n        jLabel9.setText(\"Bells\");\r\n        GridBagConstraints gridBagConstraints13 = new GridBagConstraints();\r\n        gridBagConstraints13.gridx = 1;\r\n        gridBagConstraints13.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints13.gridy = 3;\r\n        jLabel8 = new JLabel();\r\n        jLabel8.setText(\"3.5\");\r\n        GridBagConstraints gridBagConstraints12 = new GridBagConstraints();\r\n        gridBagConstraints12.gridx = 0;\r\n        gridBagConstraints12.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints12.gridy = 3;\r\n        jLabel7 = new JLabel();\r\n        jLabel7.setText(\"Media Ratings:\");\r\n        GridBagConstraints gridBagConstraints10 = new GridBagConstraints();\r\n        gridBagConstraints10.gridx = 1;\r\n        gridBagConstraints10.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints10.gridy = 2;\r\n        jLabel6 = new JLabel();\r\n        jLabel6.setText(\"90\");\r\n        GridBagConstraints gridBagConstraints9 = new GridBagConstraints();\r\n        gridBagConstraints9.gridx = 0;\r\n        gridBagConstraints9.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints9.gridy = 2;\r\n        jLabel5 = new JLabel();\r\n        jLabel5.setText(\"Number of votes not enough\");\r\n        GridBagConstraints gridBagConstraints8 = new GridBagConstraints();\r\n        gridBagConstraints8.gridx = 1;\r\n        gridBagConstraints8.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints8.gridy = 1;\r\n        jLabel4 = new JLabel();\r\n        jLabel4.setText(\"99\");\r\n        GridBagConstraints gridBagConstraints7 = new GridBagConstraints();\r\n        gridBagConstraints7.gridx = 0;\r\n        gridBagConstraints7.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints7.gridy = 1;\r\n        jLabel3 = new JLabel();\r\n        jLabel3.setText(\"Number enough votes:\");\r\n        GridBagConstraints gridBagConstraints6 = new GridBagConstraints();\r\n        gridBagConstraints6.gridx = 1;\r\n        gridBagConstraints6.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints6.gridy = 0;\r\n        jLabel2 = new JLabel();\r\n        jLabel2.setText(\"189\");\r\n        GridBagConstraints gridBagConstraints5 = new GridBagConstraints();\r\n        gridBagConstraints5.gridx = 0;\r\n        gridBagConstraints5.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints5.anchor = GridBagConstraints.CENTER;\r\n        gridBagConstraints5.gridy = 0;\r\n        jLabel1 = new JLabel();\r\n        jLabel1.setText(\"Number of votes issued:\");\r\n        genStat = new JPanel();\r\n        genStat.setLayout(new GridBagLayout());\r\n        genStat.add(jLabel1, gridBagConstraints5);\r\n        genStat.add(jLabel2, gridBagConstraints6);\r\n        genStat.add(jLabel3, gridBagConstraints7);\r\n        genStat.add(jLabel4, gridBagConstraints8);\r\n        genStat.add(jLabel5, gridBagConstraints9);\r\n        genStat.add(jLabel6, gridBagConstraints10);\r\n        genStat.add(jLabel7, gridBagConstraints12);\r\n        genStat.add(jLabel8, gridBagConstraints13);\r\n        genStat.add(jLabel9, gridBagConstraints14);\r\n    }\r\n    return genStat;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getGenStat()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (evdStat == null) {\r\n        GridBagConstraints gridBagConstraints25 = new GridBagConstraints();\r\n        gridBagConstraints25.gridx = 2;\r\n        gridBagConstraints25.insets = new Insets(0, 80, 0, 5);\r\n        gridBagConstraints25.ipadx = 1;\r\n        gridBagConstraints25.gridy = 3;\r\n        GridBagConstraints gridBagConstraints28 = new GridBagConstraints();\r\n        gridBagConstraints28.gridx = 3;\r\n        gridBagConstraints28.anchor = GridBagConstraints.WEST;\r\n        gridBagConstraints28.insets = new Insets(0, 5, 0, 5);\r\n        gridBagConstraints28.gridy = 3;\r\n        jLabel22 = new JLabel();\r\n        jLabel22.setText(\"6\");\r\n        GridBagConstraints gridBagConstraints27 = new GridBagConstraints();\r\n        gridBagConstraints27.gridx = 3;\r\n        gridBagConstraints27.anchor = GridBagConstraints.WEST;\r\n        gridBagConstraints27.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints27.gridy = 0;\r\n        jLabel21 = new JLabel();\r\n        jLabel21.setText(\"29\");\r\n        GridBagConstraints gridBagConstraints26 = new GridBagConstraints();\r\n        gridBagConstraints26.gridx = 1;\r\n        gridBagConstraints26.anchor = GridBagConstraints.WEST;\r\n        gridBagConstraints26.gridwidth = 1;\r\n        gridBagConstraints26.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints26.gridy = 0;\r\n        jLabel20 = new JLabel();\r\n        jLabel20.setText(\"35\");\r\n        jLabel19 = new JLabel();\r\n        jLabel19.setText(\"Feedback link under the sufficiency: \");\r\n        GridBagConstraints gridBagConstraints24 = new GridBagConstraints();\r\n        gridBagConstraints24.gridx = 2;\r\n        gridBagConstraints24.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints24.anchor = GridBagConstraints.EAST;\r\n        gridBagConstraints24.gridy = 0;\r\n        jLabel18 = new JLabel();\r\n        jLabel18.setText(\"Feedback enough:\");\r\n        GridBagConstraints gridBagConstraints23 = new GridBagConstraints();\r\n        gridBagConstraints23.gridx = 0;\r\n        gridBagConstraints23.gridwidth = 1;\r\n        gridBagConstraints23.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints23.gridy = 0;\r\n        jLabel17 = new JLabel();\r\n        jLabel17.setText(\"Feedback received in full:\");\r\n        GridBagConstraints gridBagConstraints15 = new GridBagConstraints();\r\n        gridBagConstraints15.gridx = 0;\r\n        gridBagConstraints15.gridwidth = 4;\r\n        gridBagConstraints15.gridy = 4;\r\n        evdStat = new JPanel();\r\n        evdStat.setLayout(new GridBagLayout());\r\n        evdStat.setEnabled(false);\r\n        evdStat.add(getJPanel1(), gridBagConstraints15);\r\n        evdStat.add(jLabel17, gridBagConstraints23);\r\n        evdStat.add(jLabel18, gridBagConstraints24);\r\n        evdStat.add(jLabel20, gridBagConstraints26);\r\n        evdStat.add(jLabel21, gridBagConstraints27);\r\n        evdStat.add(jLabel22, gridBagConstraints28);\r\n        evdStat.add(jLabel19, gridBagConstraints25);\r\n    }\r\n    return evdStat;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getEvdStat()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (stat == null) {\r\n        stat = new JPanel();\r\n        stat.setLayout(new GridBagLayout());\r\n        stat.setEnabled(false);\r\n    }\r\n    return stat;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getStat()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jPanel == null) {\r\n        GridBagConstraints gridBagConstraints4 = new GridBagConstraints();\r\n        gridBagConstraints4.insets = new Insets(5, 5, 5, 5);\r\n        GridBagConstraints gridBagConstraints3 = new GridBagConstraints();\r\n        gridBagConstraints3.gridx = 0;\r\n        gridBagConstraints3.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints3.gridy = 2;\r\n        GridBagConstraints gridBagConstraints2 = new GridBagConstraints();\r\n        gridBagConstraints2.gridx = 0;\r\n        gridBagConstraints2.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints2.gridy = 1;\r\n        jPanel = new JPanel();\r\n        jPanel.setLayout(new GridBagLayout());\r\n        jPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(0, 51, 255), 3), \"Show for:\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(0, 51, 255)));\r\n        jPanel.add(getJButton(), gridBagConstraints4);\r\n        jPanel.add(getJButton1(), gridBagConstraints2);\r\n        jPanel.add(getJButton2(), gridBagConstraints3);\r\n    }\r\n    return jPanel;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getJPanel()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jButton == null) {\r\n        jButton = new JButton();\r\n        jButton.setText(\"Well <html> <br> Cultural </html>\");\r\n        jButton.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/images/Sphinx-icon.gif\")));\r\n    }\r\n    return jButton;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JButton getJButton()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jButton1 == null) {\r\n        jButton1 = new JButton();\r\n        jButton1.setText(\"<html> point <br> Refreshments </html>\");\r\n        jButton1.setPreferredSize(new Dimension(121, 42));\r\n        jButton1.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/images/Java.png\")));\r\n    }\r\n    return jButton1;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JButton getJButton1()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jButton2 == null) {\r\n        jButton2 = new JButton();\r\n        jButton2.setText(\"All\");\r\n        jButton2.setPreferredSize(new Dimension(121, 42));\r\n        jButton2.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/immagini/Globe_32x32.png\")));\r\n    }\r\n    return jButton2;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JButton getJButton2()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jPanel1 == null) {\r\n        GridBagConstraints gridBagConstraints29 = new GridBagConstraints();\r\n        gridBagConstraints29.gridx = 2;\r\n        gridBagConstraints29.gridy = 4;\r\n        GridBagConstraints gridBagConstraints22 = new GridBagConstraints();\r\n        gridBagConstraints22.gridx = 1;\r\n        gridBagConstraints22.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints22.gridy = 3;\r\n        jLabel16 = new JLabel();\r\n        jLabel16.setText(\"Comment deleted by moderator feedback\");\r\n        GridBagConstraints gridBagConstraints21 = new GridBagConstraints();\r\n        gridBagConstraints21.gridx = 0;\r\n        gridBagConstraints21.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints21.gridy = 3;\r\n        jLabel15 = new JLabel();\r\n        jLabel15.setText(\"Bells\");\r\n        GridBagConstraints gridBagConstraints20 = new GridBagConstraints();\r\n        gridBagConstraints20.gridx = 1;\r\n        gridBagConstraints20.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints20.anchor = GridBagConstraints.WEST;\r\n        gridBagConstraints20.gridy = 2;\r\n        jLabel14 = new JLabel();\r\n        jLabel14.setText(\"We eat good, bad beer\");\r\n        GridBagConstraints gridBagConstraints19 = new GridBagConstraints();\r\n        gridBagConstraints19.gridx = 3;\r\n        gridBagConstraints19.gridy = 2;\r\n        jLabel13 = new JLabel();\r\n        jLabel13.setText(\"\");\r\n        GridBagConstraints gridBagConstraints18 = new GridBagConstraints();\r\n        gridBagConstraints18.gridx = 0;\r\n        gridBagConstraints18.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints18.gridy = 2;\r\n        jLabel12 = new JLabel();\r\n        jLabel12.setText(\"Bells\");\r\n        GridBagConstraints gridBagConstraints17 = new GridBagConstraints();\r\n        gridBagConstraints17.gridx = 1;\r\n        gridBagConstraints17.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints17.anchor = GridBagConstraints.WEST;\r\n        gridBagConstraints17.gridy = 0;\r\n        jLabel11 = new JLabel();\r\n        jLabel11.setText(\"Really a nice place, we'll be back!\");\r\n        GridBagConstraints gridBagConstraints16 = new GridBagConstraints();\r\n        gridBagConstraints16.gridx = 0;\r\n        gridBagConstraints16.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints16.gridy = 0;\r\n        jLabel10 = new JLabel();\r\n        jLabel10.setText(\"Bells\");\r\n        jPanel1 = new JPanel();\r\n        jPanel1.setLayout(new GridBagLayout());\r\n        jPanel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(0, 51, 255), 3), \"Last feedback issued:\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(0, 102, 255)));\r\n        jPanel1.add(jLabel10, gridBagConstraints16);\r\n        jPanel1.add(jLabel11, gridBagConstraints17);\r\n        jPanel1.add(jLabel12, gridBagConstraints18);\r\n        jPanel1.add(jLabel13, gridBagConstraints19);\r\n        jPanel1.add(jLabel14, gridBagConstraints20);\r\n        jPanel1.add(jLabel15, gridBagConstraints21);\r\n        jPanel1.add(jLabel16, gridBagConstraints22);\r\n        jPanel1.add(getBtnVisualizza(), gridBagConstraints29);\r\n    }\r\n    return jPanel1;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JPanel getJPanel1()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (btnVisualizza == null) {\r\n        btnVisualizza = new JButton();\r\n        btnVisualizza.setText(\"View All\");\r\n        btnVisualizza.setMnemonic(KeyEvent.VK_UNDEFINED);\r\n        btnVisualizza.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/images/Forward 216.png\")));\r\n    }\r\n    return btnVisualizza;\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private JButton getBtnVisualizza()",
                "comments": null,
                "innerComments": null
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    super();\r\n    initialize();\r\n}",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public ReportStatistici()",
                "comments": null,
                "innerComments": null
            }
        ],
        "signature": "ReportStatistici",
        "variables": [
            "private  static  final long serialVersionUID",
            "private Vector<String> data",
            "private JPanel jContentPane",
            "private JToolBar jToolBar",
            "private JComboBox<String> jComboBox",
            "private JPanel centralPanel",
            "private JScrollPane jScrollPane",
            "private JTable tabellas",
            "private JPanel southPanel",
            "private JTabbedPane jTabbedPane",
            "private JPanel guidainlinea",
            "private JTextPane jTextPane",
            "private JPanel genStat",
            "private JPanel evdStat",
            "private JPanel stat",
            "private JPanel jPanel",
            "private JButton jButton",
            "private JButton jButton1",
            "private JButton jButton2",
            "private JLabel jLabel1",
            "private JLabel jLabel2",
            "private JLabel jLabel3",
            "private JLabel jLabel4",
            "private JLabel jLabel5",
            "private JLabel jLabel6",
            "private JLabel jLabel7",
            "private JLabel jLabel8",
            "private JLabel jLabel9",
            "private JPanel jPanel1",
            "private JLabel jLabel10",
            "private JLabel jLabel11",
            "private JLabel jLabel12",
            "private JLabel jLabel13",
            "private JLabel jLabel14",
            "private JLabel jLabel15",
            "private JLabel jLabel16",
            "private JLabel jLabel17",
            "private JLabel jLabel18",
            "private JLabel jLabel19",
            "private JLabel jLabel20",
            "private JLabel jLabel21",
            "private JLabel jLabel22",
            "private JButton btnVisualizza"
        ]
    }
]