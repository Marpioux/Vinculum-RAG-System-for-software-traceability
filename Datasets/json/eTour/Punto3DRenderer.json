[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    if (!(pValue instanceof Punto3D)) {\r\n        throw new IllegalArgumentException(\"Value Cella unexpected.\");\r\n    }\r\n    Punto3D punto = (Punto3D) pValue;\r\n    String point = punto.getLatitudine() + \";\" + punto.getLongitudine() + \";\" + punto.getAltitudine();\r\n    JLabel aLabel = new JLabel(point, SwingConstants.CENTER);\r\n    if (pSelected) {\r\n        aLabel.setForeground(pTable.getSelectionForeground());\r\n        aLabel.setBackground(pTable.getSelectionBackground());\r\n    }\r\n    return aLabel;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public Component getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)",
                "comments": "Optional[/**\r\n * Method that returns the custom component for the\r\n * display of the data contained in the cell of a table.\r\n *\r\n * @param pTable JTable - the table.\r\n * @param Object pValue - the data.\r\n * @param boolean pSelected --\r\n * <ul>\r\n * <li><i>True</i> if the cell is selected.\r\n * <li><i>False</i> otherwise.\r\n * </ul>\r\n * @param boolean pHasFocus --\r\n * <ul>\r\n * <li><i>True</i> if the cell has the focus.\r\n * <li><i>False</i> otherwise.\r\n * </ul>\r\n * @param int pRow - the row number.\r\n * @param int pColumn - the column number.\r\n * @return Component - the component that customizes render the cell.\r\n * @throws IllegalArgumentException - if the value of the cell cannot\r\n * be rendered by this renderer.\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "constructors": [],
        "signature": "Punto3DRenderer",
        "variables": []
    }
]