[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    this.setSize(508, 398);\r\n    this.setFrameIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/images/Properties.png\")));\r\n    this.setTitle(\"Manage Tag\");\r\n    this.setContentPane(getJContentPane());\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private void initialize()",
                "comments": "Optional[/**\r\n * This method initializes this\r\n *\r\n * @return void\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == jContentPane) {\r\n        jContentPane = new JPanel();\r\n        jContentPane.setLayout(new BorderLayout());\r\n        jContentPane.add(getCenterPanel(), BorderLayout.CENTER);\r\n        jContentPane.add(getEastPanel(), BorderLayout.EAST);\r\n        jContentPane.add(getJJToolBarBar(), BorderLayout.NORTH);\r\n    }\r\n    return jContentPane;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getJContentPane()",
                "comments": "Optional[/**\r\n * This method initializes jContentPane\r\n *\r\n * @return javax.swing.JPanel\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == CenterPanel) {\r\n        GridBagConstraints gridBagConstraints = new GridBagConstraints();\r\n        gridBagConstraints.fill = GridBagConstraints.BOTH;\r\n        gridBagConstraints.weighty = 1.0;\r\n        gridBagConstraints.weightx = 1.0;\r\n        CenterPanel = new JPanel();\r\n        CenterPanel.setLayout(new GridBagLayout());\r\n        CenterPanel.add(getJScrollPane(), gridBagConstraints);\r\n    }\r\n    return CenterPanel;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getCenterPanel()",
                "comments": "Optional[/**\r\n * This method initializes CenterPanel\r\n *\r\n * @return javax.swing.JPanel\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == EastPanel) {\r\n        GridBagConstraints gridBagConstraints3 = new GridBagConstraints();\r\n        gridBagConstraints3.gridy = 1;\r\n        GridBagConstraints gridBagConstraints2 = new GridBagConstraints();\r\n        gridBagConstraints2.gridx = 0;\r\n        gridBagConstraints2.gridy = 0;\r\n        EastPanel = new JPanel();\r\n        EastPanel.setLayout(new GridBagLayout());\r\n        EastPanel.add(getJPanelUp(), gridBagConstraints2);\r\n        EastPanel.add(getJPanelHelp(), gridBagConstraints3);\r\n    }\r\n    return EastPanel;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getEastPanel()",
                "comments": "Optional[/**\r\n * This method initializes EastPanel\r\n *\r\n * @return javax.swing.JPanel\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jScrollPane == null) {\r\n        jScrollPane = new JScrollPane();\r\n        jScrollPane.setViewportView(getJTable());\r\n    }\r\n    return jScrollPane;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JScrollPane getJScrollPane()",
                "comments": "Optional[/**\r\n * This method initializes JScrollPane\r\n *\r\n * @return javax.swing.JScrollPane\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jTable == null) {\r\n        jTable = new JTable();\r\n        BeanTag[] listaTag = new BeanTag[11];\r\n        listaTag[0] = new BeanTag(1, \"romantic\", \"place for couples and unforgettable moments\");\r\n        listaTag[1] = new BeanTag(2, \"esoteric\", \"places of magic\");\r\n        listaTag[2] = new BeanTag(3, \"pizza\", \"The best pizza\");\r\n        listaTag[3] = new BeanTag(6, \"music\", \"live music venues, concerts ...\");\r\n        listaTag[4] = new BeanTag(76, \"trattoria\", \"typical\");\r\n        listaTag[5] = new BeanTag(7, \"fairs\", \"for important purchases or souvenirs bellissimi\");\r\n        listaTag[6] = new BeanTag(9, \"Market\", \"typical\");\r\n        listaTag[7] = new BeanTag(8, \"History\", \"typical\");\r\n        listaTag[8] = new BeanTag(5, \"nineteenth century\", \"typical\");\r\n        listaTag[9] = new BeanTag(4, \"range\", \"typical\");\r\n        listaTag[10] = new BeanTag(56, \"Cinema\", \"typical\");\r\n    }\r\n    return jTable;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JTable getJTable()",
                "comments": "Optional[/**\r\n * This method initializes JTable\r\n *\r\n * @return javax.swing.JTable\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == jJToolBarBar) {\r\n        jJToolBarBar = new JToolBar();\r\n        jJToolBarBar.add(getBtnModifica());\r\n        jJToolBarBar.add(getBtnElimina());\r\n        jJToolBarBar.addSeparator();\r\n        jJToolBarBar.add(getBtnExit());\r\n    }\r\n    return jJToolBarBar;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JToolBar getJJToolBarBar()",
                "comments": "Optional[/**\r\n * This method initializes jJToolBarBar\r\n *\r\n * @return javax.swing.JToolBar\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnModifica) {\r\n        btnModifica = new JButton();\r\n        btnModifica.setText(\"Edit Tag\");\r\n        btnModifica.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/immagini/edit-32x32.png\")));\r\n    }\r\n    return btnModifica;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnModifica()",
                "comments": "Optional[/**\r\n * This method initializes btnModifica\r\n *\r\n * @return javax.swing.JButton\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnElimina) {\r\n        btnElimina = new JButton();\r\n        btnElimina.setText(\"Remove Tag\");\r\n        btnElimina.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/immagini/button-cancel-32x32.png\")));\r\n    }\r\n    return btnElimina;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnElimina()",
                "comments": "Optional[/**\r\n * This method initializes btnElimina\r\n *\r\n * @return javax.swing.JButton\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnExit) {\r\n        btnExit = new JButton();\r\n        btnExit.setText(\"Exit\");\r\n        btnExit.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/images/Forward 2.png\")));\r\n    }\r\n    return btnExit;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnExit()",
                "comments": "Optional[/**\r\n * This method initializes btnExit\r\n *\r\n * @return javax.swing.JButton\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == jPanelUp) {\r\n        GridBagConstraints gridBagConstraints9 = new GridBagConstraints();\r\n        gridBagConstraints9.gridx = 1;\r\n        gridBagConstraints9.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints9.gridy = 4;\r\n        GridBagConstraints gridBagConstraints8 = new GridBagConstraints();\r\n        gridBagConstraints8.gridx = 0;\r\n        gridBagConstraints8.insets = new Insets(5, 5, 5, 5);\r\n        gridBagConstraints8.gridy = 4;\r\n        GridBagConstraints gridBagConstraints7 = new GridBagConstraints();\r\n        gridBagConstraints7.fill = GridBagConstraints.BOTH;\r\n        gridBagConstraints7.gridy = 3;\r\n        gridBagConstraints7.weightx = 1.0;\r\n        gridBagConstraints7.weighty = 1.0;\r\n        gridBagConstraints7.gridwidth = 2;\r\n        gridBagConstraints7.insets = new Insets(5, 0, 5, 0);\r\n        gridBagConstraints7.gridx = 0;\r\n        GridBagConstraints gridBagConstraints6 = new GridBagConstraints();\r\n        gridBagConstraints6.gridx = 0;\r\n        gridBagConstraints6.gridwidth = 2;\r\n        gridBagConstraints6.insets = new Insets(5, 0, 5, 0);\r\n        gridBagConstraints6.gridy = 2;\r\n        description = new JLabel();\r\n        description.setText(\"Description:\");\r\n        GridBagConstraints gridBagConstraints5 = new GridBagConstraints();\r\n        gridBagConstraints5.fill = GridBagConstraints.VERTICAL;\r\n        gridBagConstraints5.gridy = 1;\r\n        gridBagConstraints5.weightx = 1.0;\r\n        gridBagConstraints5.gridwidth = 2;\r\n        gridBagConstraints5.insets = new Insets(5, 0, 5, 0);\r\n        gridBagConstraints5.gridx = 0;\r\n        GridBagConstraints gridBagConstraints4 = new GridBagConstraints();\r\n        gridBagConstraints4.gridx = 0;\r\n        gridBagConstraints4.gridwidth = 2;\r\n        gridBagConstraints4.insets = new Insets(5, 0, 5, 0);\r\n        gridBagConstraints4.gridy = 0;\r\n        tagname = new JLabel();\r\n        tagname.setText(\"Tag Name:\");\r\n        jPanelUp = new JPanel();\r\n        jPanelUp.setLayout(new GridBagLayout());\r\n        jPanelUp.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(0, 102, 255), 3), \"Insert New\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(0, 102, 255)));\r\n        jPanelUp.add(tagname, gridBagConstraints4);\r\n        jPanelUp.add(getJTextField(), gridBagConstraints5);\r\n        jPanelUp.add(description, gridBagConstraints6);\r\n        jPanelUp.add(getJTextArea(), gridBagConstraints7);\r\n        jPanelUp.add(getBtnOk(), gridBagConstraints8);\r\n        jPanelUp.add(getBtnResetta(), gridBagConstraints9);\r\n    }\r\n    return jPanelUp;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getJPanelUp()",
                "comments": "Optional[/**\r\n * This method initializes jPanelUp\r\n *\r\n * @return javax.swing.JPanel\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == jPanelHelp) {\r\n        GridBagConstraints gridBagConstraints1 = new GridBagConstraints();\r\n        gridBagConstraints1.fill = GridBagConstraints.BOTH;\r\n        gridBagConstraints1.weighty = 1.0;\r\n        gridBagConstraints1.weightx = 1.0;\r\n        jPanelHelp = new JPanel();\r\n        jPanelHelp.setLayout(new GridBagLayout());\r\n        jPanelHelp.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(0, 102, 255), 3), \"Help\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(51, 153, 255)));\r\n        jPanelHelp.add(getJTextPane(), gridBagConstraints1);\r\n    }\r\n    return jPanelHelp;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getJPanelHelp()",
                "comments": "Optional[/**\r\n * This method initializes jPanelHelp\r\n *\r\n * @return javax.swing.JPanel\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == jTextPane) {\r\n        jTextPane = new JTextPane();\r\n        jTextPane.setPreferredSize(new Dimension(190, 80));\r\n    }\r\n    return jTextPane;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JTextPane getJTextPane()",
                "comments": "Optional[/**\r\n * This method initializes jTextPane\r\n *\r\n * @return javax.swing.JTextPane\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jTextField == null) {\r\n        jTextField = new JTextField();\r\n        jTextField.setColumns(10);\r\n    }\r\n    return jTextField;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JTextField getJTextField()",
                "comments": "Optional[/**\r\n * This method initializes JTextField\r\n *\r\n * @return javax.swing.JTextField\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (jTextArea == null) {\r\n        jTextArea = new JTextArea();\r\n        jTextArea.setRows(3);\r\n    }\r\n    return jTextArea;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JTextArea getJTextArea()",
                "comments": "Optional[/**\r\n * This method initializes JTextArea\r\n *\r\n * @return javax.swing.JTextArea\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (btnOK == null) {\r\n        btnOK = new JButton();\r\n        btnOK.setText(\"Ok\");\r\n        btnOK.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/immagini/Button_ok16.png\")));\r\n    }\r\n    return btnOK;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnOk()",
                "comments": "Optional[/**\r\n * This method initializes btnOK\r\n *\r\n * @return javax.swing.JButton\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnResetta) {\r\n        btnResetta = new JButton();\r\n        btnResetta.setText(\"Reset\");\r\n        btnResetta.setIcon(new ImageIcon(getClass().getResource(\"/interfacceAgenzia/images/Trash.png\")));\r\n    }\r\n    return btnResetta;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnResetta()",
                "comments": "Optional[/**\r\n * This method initializes btnResetta\r\n *\r\n * @return javax.swing.JButton\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    super();\r\n    initialize();\r\n}",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public Tag()",
                "comments": "Optional[/**\r\n * This is the default constructor\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "signature": "Tag",
        "variables": [
            "private JPanel jContentPane",
            "private JPanel CenterPanel",
            "private JPanel EastPanel",
            "private JScrollPane jScrollPane",
            "private JTable jTable",
            "private JToolBar jJToolBarBar",
            "private JButton btnModifica",
            "private JButton btnElimina",
            "private JButton btnExit",
            "private JPanel jPanelUp",
            "private JPanel jPanelHelp",
            "private JTextPane jTextPane",
            "private JLabel tagname",
            "private JTextField jTextField",
            "private JLabel description",
            "private JTextArea jTextArea",
            "private JButton btnOK",
            "private JButton btnResetta"
        ]
    }
]