[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    JInternalFrame frame = (JInternalFrame) pEvent.getInternalFrame();\r\n    // Setting up of remote objects for the management of cultural heritage.\r\n    try {\r\n        Registry reg = LocateRegistry.getRegistry(Home.HOST);\r\n        tags = (IGestioneTagComune) reg.lookup(\"GestioneTagComune\");\r\n        gestioneBC = (IGestioneBeniCulturaliAgenzia) reg.lookup(\"GestioneBeniCulturaliAgenzia\");\r\n        // Load data.\r\n        caricaTags();\r\n    } catch (Exception ex) {\r\n        JLabel error = new JLabel(\"<html> <h2> Unable to communicate with the server eTour. </h2>\" + \"<h3> <u> Card for entering a new cultural asset will be closed. </u> </h3>\" + \"<p> <b> Possible Causes: </b>\" + \"<ul> <li> No connection to the network. </li>\" + \"<li> Server inactive. </li>\" + \"<li> Server clogged. </li> </ul>\" + \"<p> Please try again later. </p>\" + \"<p> If the error persists, please contact technical support. </p>\" + \"<p> We apologize for the inconvenience. </html>\");\r\n        ImageIcon err = new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"error48.png\"));\r\n        JOptionPane.showMessageDialog(frame, error, \"Error!\", JOptionPane.ERROR_MESSAGE, err);\r\n        frame.dispose();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public void internalFrameOpened(InternalFrameEvent)",
                "comments": null,
                "innerComments": "Optional[[// Setting up of remote objects for the management of cultural heritage.\r\n, // Load data.\r\n]]"
            },
            {
                "body": "Optional[{\r\n    JPanel root = new JPanel(new BorderLayout());\r\n    JLabel message = new JLabel(\"Are you sure you want to cancel the creation of a new cultural asset?\");\r\n    message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n    JLabel alert = new JLabel(\"Warning! Unsaved data will be lost.\", SwingConstants.CENTER);\r\n    alert.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"warning16.png\")));\r\n    root.add(message, BorderLayout.NORTH);\r\n    root.add(alert, BorderLayout.CENTER);\r\n    String[] options = { \"Close\", \"Cancel\" };\r\n    int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Confirm closure\", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, getFrameIcon(), options, options[1]);\r\n    if (choice == JOptionPane.OK_OPTION) {\r\n        parent.closeScheda((SchedaBC) pEvent.getInternalFrame());\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void internalFrameClosing(InternalFrameEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (bc == null) {\r\n        return -1;\r\n    }\r\n    return bc.getId();\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public int getId()",
                "comments": "Optional[/**\r\n * This method returns the id of the cultural property for which you are viewing the\r\n * Contact or changing data.\r\n *\r\n * @return int - the id of the cultural property.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    setTitle(bc.getNome());\r\n    // Dialog closed frame\r\n    addInternalFrameListener(new InternalFrameAdapter() {\r\n\r\n        public void internalFrameOpened(InternalFrameEvent pEvent) {\r\n            JInternalFrame frame = (JInternalFrame) pEvent.getInternalFrame();\r\n            // Setting up of remote objects for the management of cultural heritage.\r\n            try {\r\n                Registry reg = LocateRegistry.getRegistry(Home.HOST);\r\n                tags = (IGestioneTagComune) reg.lookup(\"GestioneTagComune\");\r\n                gestioneBC = (IGestioneBeniCulturaliAgenzia) reg.lookup(\"GestioneBeniCulturaliAgenzia\");\r\n                // Load data.\r\n                caricaTags();\r\n                caricaStatistiche();\r\n            } catch (Exception ex) {\r\n                JLabel error = new JLabel(\"<html> <h2> Unable to communicate with the server eTour. </h2>\" + \"<h3> <u> The board of the cultural inquiry will be closed. </u> </h3>\" + \"<p> <b> Possible Causes: </b>\" + \"<ul> <li> No connection to the network. </li>\" + \"<li> Server inactive. </li>\" + \"<li> Server clogged. </li> </ul>\" + \"<p> Please try again later. </p>\" + \"<p> If the error persists, please contact technical support. </p>\" + \"<p> We apologize for the inconvenience. </html>\");\r\n                ImageIcon err = new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"error48.png\"));\r\n                JOptionPane.showMessageDialog(frame, error, \"Error!\", JOptionPane.ERROR_MESSAGE, err);\r\n                frame.dispose();\r\n            }\r\n        }\r\n\r\n        public void internalFrameClosing(InternalFrameEvent pEvent) {\r\n            // If you are an amendment asks for confirmation.\r\n            if (btnModifica.isSelected()) {\r\n                JPanel root = new JPanel(new BorderLayout());\r\n                JLabel message = new JLabel(\"Are you sure you want to close the tab of this cultural asset?\");\r\n                message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n                JLabel alert = new JLabel(\"Warning! Unsaved data will be lost.\", SwingConstants.CENTER);\r\n                alert.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"warning16.png\")));\r\n                root.add(message, BorderLayout.NORTH);\r\n                root.add(alert, BorderLayout.CENTER);\r\n                String[] options = { \"Close\", \"Cancel\" };\r\n                int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Confirm closing tab Cultural Heritage: \" + bc.getNome(), JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, getFrameIcon(), options, options[1]);\r\n                if (choice == JOptionPane.OK_OPTION) {\r\n                    parent.closeScheda((SchedaBC) pEvent.getInternalFrame());\r\n                }\r\n            } else {\r\n                // Otherwise directly closes the window.\r\n                parent.closeScheda((SchedaBC) pEvent.getInternalFrame());\r\n            }\r\n        }\r\n    });\r\n    // Initialize the content pane.\r\n    jContentPane = new JPanel();\r\n    jContentPane.setLayout(new BorderLayout());\r\n    jContentPane.add(getToolbarSchedaBC(), BorderLayout.CENTER);\r\n    jTabbedPane = new JTabbedPane();\r\n    jTabbedPane.addTab(\"Data Cultural Heritage\", new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"dati.png\")), getDatiBCForm(), null);\r\n    JScrollPane newScrollPane = new JScrollPane(getStatistiche());\r\n    newScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\r\n    jTabbedPane.addTab(\"Statistics\", new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"stat24.png\")), newScrollPane, null);\r\n    jTabbedPane.addTab(\"Feedback received\", new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"feedback.png\")), getFeedback(), null);\r\n    jContentPane.add(jTabbedPane, BorderLayout.CENTER);\r\n    setContentPane(jContentPane);\r\n    jTabbedPane.addChangeListener(new ChangeListener() {\r\n\r\n        public void stateChanged(ChangeEvent pChange) {\r\n            // Data cultural\r\n            if (jTabbedPane.getSelectedIndex() == 0) {\r\n                toolbarSchedaBC.setVisible(true);\r\n                btnModifica.setVisible(true);\r\n                if (btnModifica.isSelected()) {\r\n                    btnSalva.setVisible(true);\r\n                    btnAnnulla.setVisible(true);\r\n                }\r\n                btnModificaCommento.setVisible(false);\r\n            } else if (jTabbedPane.getSelectedIndex() == 1) {\r\n                // Statistics\r\n                toolbarSchedaBC.setVisible(false);\r\n            } else {\r\n                // Feedback received\r\n                if (btnModifica.isSelected()) {\r\n                    btnSalva.setVisible(false);\r\n                    btnAnnulla.setVisible(false);\r\n                }\r\n                toolbarSchedaBC.setVisible(true);\r\n                btnModificaCommento.setVisible(true);\r\n                btnModifica.setVisible(false);\r\n            }\r\n        }\r\n    });\r\n    // Load the data of the cultural and statistics.\r\n    caricaDatiForm();\r\n}]",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "private void initializeSchedaBC()",
                "comments": "Optional[/**\r\n * This method initializes the interface for display board\r\n * A cultural object.\r\n *\r\n * @return void\r\n */\r\n]",
                "innerComments": "Optional[[// Dialog closed frame\r\n, // Setting up of remote objects for the management of cultural heritage.\r\n, // Load data.\r\n, // If you are an amendment asks for confirmation.\r\n, // Otherwise directly closes the window.\r\n, // Initialize the content pane.\r\n, // Data cultural\r\n, // Statistics\r\n, // Feedback received\r\n, // Load the data of the cultural and statistics.\r\n]]"
            },
            {
                "body": "Optional[{\r\n    JInternalFrame frame = (JInternalFrame) pEvent.getInternalFrame();\r\n    // Setting up of remote objects for the management of cultural heritage.\r\n    try {\r\n        Registry reg = LocateRegistry.getRegistry(Home.HOST);\r\n        tags = (IGestioneTagComune) reg.lookup(\"GestioneTagComune\");\r\n        gestioneBC = (IGestioneBeniCulturaliAgenzia) reg.lookup(\"GestioneBeniCulturaliAgenzia\");\r\n        // Load data.\r\n        caricaTags();\r\n        caricaStatistiche();\r\n    } catch (Exception ex) {\r\n        JLabel error = new JLabel(\"<html> <h2> Unable to communicate with the server eTour. </h2>\" + \"<h3> <u> The board of the cultural inquiry will be closed. </u> </h3>\" + \"<p> <b> Possible Causes: </b>\" + \"<ul> <li> No connection to the network. </li>\" + \"<li> Server inactive. </li>\" + \"<li> Server clogged. </li> </ul>\" + \"<p> Please try again later. </p>\" + \"<p> If the error persists, please contact technical support. </p>\" + \"<p> We apologize for the inconvenience. </html>\");\r\n        ImageIcon err = new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"error48.png\"));\r\n        JOptionPane.showMessageDialog(frame, error, \"Error!\", JOptionPane.ERROR_MESSAGE, err);\r\n        frame.dispose();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public void internalFrameOpened(InternalFrameEvent)",
                "comments": null,
                "innerComments": "Optional[[// Setting up of remote objects for the management of cultural heritage.\r\n, // Load data.\r\n]]"
            },
            {
                "body": "Optional[{\r\n    // If you are an amendment asks for confirmation.\r\n    if (btnModifica.isSelected()) {\r\n        JPanel root = new JPanel(new BorderLayout());\r\n        JLabel message = new JLabel(\"Are you sure you want to close the tab of this cultural asset?\");\r\n        message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n        JLabel alert = new JLabel(\"Warning! Unsaved data will be lost.\", SwingConstants.CENTER);\r\n        alert.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"warning16.png\")));\r\n        root.add(message, BorderLayout.NORTH);\r\n        root.add(alert, BorderLayout.CENTER);\r\n        String[] options = { \"Close\", \"Cancel\" };\r\n        int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Confirm closing tab Cultural Heritage: \" + bc.getNome(), JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, getFrameIcon(), options, options[1]);\r\n        if (choice == JOptionPane.OK_OPTION) {\r\n            parent.closeScheda((SchedaBC) pEvent.getInternalFrame());\r\n        }\r\n    } else {\r\n        // Otherwise directly closes the window.\r\n        parent.closeScheda((SchedaBC) pEvent.getInternalFrame());\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public void internalFrameClosing(InternalFrameEvent)",
                "comments": null,
                "innerComments": "Optional[[// If you are an amendment asks for confirmation.\r\n, // Otherwise directly closes the window.\r\n]]"
            },
            {
                "body": "Optional[{\r\n    // Data cultural\r\n    if (jTabbedPane.getSelectedIndex() == 0) {\r\n        toolbarSchedaBC.setVisible(true);\r\n        btnModifica.setVisible(true);\r\n        if (btnModifica.isSelected()) {\r\n            btnSalva.setVisible(true);\r\n            btnAnnulla.setVisible(true);\r\n        }\r\n        btnModificaCommento.setVisible(false);\r\n    } else if (jTabbedPane.getSelectedIndex() == 1) {\r\n        // Statistics\r\n        toolbarSchedaBC.setVisible(false);\r\n    } else {\r\n        // Feedback received\r\n        if (btnModifica.isSelected()) {\r\n            btnSalva.setVisible(false);\r\n            btnAnnulla.setVisible(false);\r\n        }\r\n        toolbarSchedaBC.setVisible(true);\r\n        btnModificaCommento.setVisible(true);\r\n        btnModifica.setVisible(false);\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public void stateChanged(ChangeEvent)",
                "comments": null,
                "innerComments": "Optional[[// Data cultural\r\n, // Statistics\r\n, // Feedback received\r\n]]"
            },
            {
                "body": "Optional[{\r\n    nomeBC.setText(bc.getNome());\r\n    capBC.setText(bc.getCap());\r\n    cittaBC.setText(bc.getCitta());\r\n    costoBC.setText(\"\" + bc.getCostoBiglietto());\r\n    descrizioneBC.setText(bc.getDescrizione());\r\n    StringTokenizer tokenizer = new StringTokenizer(bc.getVia());\r\n    String string = tokenizer.nextToken();\r\n    address1.setSelectedItem(string);\r\n    address2.setText(bc.getVia().substring(string.length()));\r\n    provBC.setSelectedItem(bc.getProvincia());\r\n    Punto3D pos = bc.getPosizione();\r\n    posGeoX.setText(\"\" + pos.getLatitudine());\r\n    posGeoY.setText(\"\" + pos.getLongitudine());\r\n    posGeoZ.setText(\"\" + pos.getAltitudine());\r\n    telefonoBC.setText(bc.getTelefono());\r\n    int minutes = bc.getOrarioApertura().getMinutes();\r\n    minAP.setSelectedIndex(minutes == 0 ? 0 : minutes);\r\n    int hours = bc.getOrarioApertura().getHours();\r\n    oreAP.setSelectedItem(hours < 10 ? \"0\" + hours : hours);\r\n    minutes = bc.getOrarioChiusura().getMinutes();\r\n    minCH.setSelectedIndex(minutes == 0 ? 0 : minutes);\r\n    hours = bc.getOrarioChiusura().getHours();\r\n    oreCH.setSelectedItem(hours < 10 ? \"0\" + hours : hours);\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private void caricaDatiForm()",
                "comments": "Optional[/**\r\n * This method loads the data supplied to the constructor of the cultural\r\n * In the form.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    txtNomeBene.setText(bc.getNome());\r\n    double rating = bc.getMediaVoti();\r\n    if (rating >= 4) {\r\n        mediaVotoBC.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"stella5.gif\")));\r\n    } else if (rating < 4 && rating >= 3) {\r\n        mediaVotoBC.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"stella4.gif\")));\r\n    } else if (rating < 3 && rating >= 2) {\r\n        mediaVotoBC.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"stella3.gif\")));\r\n    } else if (rating < 2 && rating >= 1) {\r\n        mediaVotoBC.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"stella2.gif\")));\r\n    } else {\r\n        mediaVotoBC.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"stella1.gif\")));\r\n    }\r\n    ArrayList<Integer> stats = null;\r\n    try {\r\n        stats = gestioneBC.ottieniStatisticheBeneCulturale(bc.getId());\r\n    } catch (RemoteException e) {\r\n        e.printStackTrace();\r\n    }\r\n    statMeseC[0].setText(\"\" + stats.get(0));\r\n    statMeseC[1].setText(\"\" + stats.get(1));\r\n    statMeseC[2].setText(\"\" + stats.get(2));\r\n    statMeseC[3].setText(\"\" + stats.get(3));\r\n    statMeseC[4].setText(\"\" + stats.get(4));\r\n    statMeseC[5].setText(\"\" + stats.get(5));\r\n    statt[0].setText(\"142\");\r\n    statt[1].setText(\"112\");\r\n    statt[2].setText(\"132\");\r\n    statt[3].setText(\"212\");\r\n    statt[4].setText(\"152\");\r\n    statt[5].setText(\"748\");\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private void caricaStatistiche()",
                "comments": "Optional[/**\r\n * This method loads the statistics provided cultural\r\n * Input to the constructor of the class.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    Iterator<JLabel> s = suggestions.iterator();\r\n    while (s.hasNext()) {\r\n        JLabel current = s.next();\r\n        current.setVisible(!current.isVisible());\r\n    }\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private void mostraNascondiSuggerimenti()",
                "comments": "Optional[/**\r\n * This method shows or hides the label next to the suggestions\r\n * Of the form.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    Component[] components = datiBC.getComponents();\r\n    for (Component current : components) {\r\n        if (current instanceof JTextField) {\r\n            JTextField textbox = (JTextField) current;\r\n            textbox.setEditable(!textbox.isEditable());\r\n            textbox.setBackground(Color.white);\r\n        } else if (current instanceof JComboBox) {\r\n            JComboBox combo = (JComboBox) current;\r\n            combo.setEnabled(!combo.isEnabled());\r\n        }\r\n    }\r\n    descrizioneBC.setEditable(!descrizioneBC.isEditable());\r\n    pannelloTag.attivaDisattiva();\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private void attivaDisattivaEdit()",
                "comments": "Optional[/**\r\n * This method makes the form editable or not.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (toolbarSchedaBC == null) {\r\n        toolbarSchedaBC = new JToolBar();\r\n        toolbarSchedaBC.setFloatable(false);\r\n        toolbarSchedaBC.add(getBtnModifica());\r\n        toolbarSchedaBC.addSeparator();\r\n        toolbarSchedaBC.add(getBtnSalva());\r\n        toolbarSchedaBC.addSeparator();\r\n        toolbarSchedaBC.add(getBtnAnnulla());\r\n        toolbarSchedaBC.addSeparator();\r\n        if (bc != null) {\r\n            toolbarSchedaBC.add(getBtnModificaCommento());\r\n            toolbarSchedaBC.addSeparator();\r\n        }\r\n    }\r\n    return toolbarSchedaBC;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JToolBar getToolbarSchedaBC()",
                "comments": "Optional[/**\r\n * This method initializes the toolbar tab of a cultural object.\r\n *\r\n * @return javax.swing.JToolBar - the toolbar.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (btnModifica == null) {\r\n        btnModifica = new JToggleButton();\r\n        btnModifica.setText(\"Change Data\");\r\n        btnModifica.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"ModificaBC32.png\")));\r\n        btnModifica.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        btnModifica.addActionListener(new ActionListener() {\r\n\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                mostraNascondiSuggerimenti();\r\n                attivaDisattivaEdit();\r\n                btnSalva.setVisible(btnModifica.isSelected());\r\n                btnAnnulla.setVisible(btnModifica.isSelected());\r\n            }\r\n        });\r\n    }\r\n    return btnModifica;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JToggleButton getBtnModifica()",
                "comments": "Optional[/**\r\n * This method initializes the button to modify data of good\r\n * Cultural.\r\n *\r\n * @return javax.swing.JToggleButton - the button for the change.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    mostraNascondiSuggerimenti();\r\n    attivaDisattivaEdit();\r\n    btnSalva.setVisible(btnModifica.isSelected());\r\n    btnAnnulla.setVisible(btnModifica.isSelected());\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void actionPerformed(ActionEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (btnSalva == null) {\r\n        btnSalva = new JButton();\r\n        btnSalva.setText(\"Save\");\r\n        btnSalva.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"salva.png\")));\r\n        btnSalva.setVisible(false);\r\n        btnSalva.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        btnSalva.addActionListener(new ActionListener() {\r\n\r\n            public void actionPerformed(ActionEvent pEvent) {\r\n                if (bc == null) {\r\n                    bc = riversaDatiNelBean();\r\n                    try {\r\n                        gestioneBC.inserisciBeneCulturale(bc);\r\n                    } catch (RemoteException ex) {\r\n                        ex.printStackTrace();\r\n                    }\r\n                } else {\r\n                    // Construction of the dialog for confirmation of the change\r\n                    JPanel root = new JPanel(new BorderLayout());\r\n                    JLabel message = new JLabel(\"Updating the data of the cultural \" + bc.getNome() + \" with Data form?\");\r\n                    message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n                    JLabel alert = new JLabel(\"The previous data can not be more recovered.\", SwingConstants.CENTER);\r\n                    alert.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"warning16.png\")));\r\n                    root.add(message, BorderLayout.NORTH);\r\n                    root.add(alert, BorderLayout.CENTER);\r\n                    String[] options = { \"Edit\", \"Cancel\" };\r\n                    // The dialog screen appears\r\n                    int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Edit Data Confirm Cultural Heritage\", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"ModificaBC48.png\")), options, options[1]);\r\n                    // If you chose to confirm the change\r\n                    if (choice == JOptionPane.YES_OPTION) {\r\n                        bc = riversaDatiNelBean();\r\n                        caricaDatiForm();\r\n                        attivaDisattivaEdit();\r\n                        btnSalva.setVisible(false);\r\n                        btnAnnulla.setVisible(false);\r\n                        btnModifica.setSelected(false);\r\n                        mostraNascondiSuggerimenti();\r\n                        parent.updateTableModel(bc);\r\n                        JOptionPane.showInternalMessageDialog(jContentPane, \"The data of the cultural object has been updated successfully.\", \"Data cultural change!\", JOptionPane.OK_OPTION, new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"ok32.png\")));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return btnSalva;\r\n}]",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "private JButton getBtnSalva()",
                "comments": "Optional[/**\r\n * This method initializes btnSalva\r\n *\r\n * @return javax.swing.JButton\r\n */\r\n]",
                "innerComments": "Optional[[// Construction of the dialog for confirmation of the change\r\n, // The dialog screen appears\r\n, // If you chose to confirm the change\r\n]]"
            },
            {
                "body": "Optional[{\r\n    if (bc == null) {\r\n        bc = riversaDatiNelBean();\r\n        try {\r\n            gestioneBC.inserisciBeneCulturale(bc);\r\n        } catch (RemoteException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    } else {\r\n        // Construction of the dialog for confirmation of the change\r\n        JPanel root = new JPanel(new BorderLayout());\r\n        JLabel message = new JLabel(\"Updating the data of the cultural \" + bc.getNome() + \" with Data form?\");\r\n        message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n        JLabel alert = new JLabel(\"The previous data can not be more recovered.\", SwingConstants.CENTER);\r\n        alert.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"warning16.png\")));\r\n        root.add(message, BorderLayout.NORTH);\r\n        root.add(alert, BorderLayout.CENTER);\r\n        String[] options = { \"Edit\", \"Cancel\" };\r\n        // The dialog screen appears\r\n        int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Edit Data Confirm Cultural Heritage\", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"ModificaBC48.png\")), options, options[1]);\r\n        // If you chose to confirm the change\r\n        if (choice == JOptionPane.YES_OPTION) {\r\n            bc = riversaDatiNelBean();\r\n            caricaDatiForm();\r\n            attivaDisattivaEdit();\r\n            btnSalva.setVisible(false);\r\n            btnAnnulla.setVisible(false);\r\n            btnModifica.setSelected(false);\r\n            mostraNascondiSuggerimenti();\r\n            parent.updateTableModel(bc);\r\n            JOptionPane.showInternalMessageDialog(jContentPane, \"The data of the cultural object has been updated successfully.\", \"Data cultural change!\", JOptionPane.OK_OPTION, new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"ok32.png\")));\r\n        }\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public void actionPerformed(ActionEvent)",
                "comments": null,
                "innerComments": "Optional[[// Construction of the dialog for confirmation of the change\r\n, // The dialog screen appears\r\n, // If you chose to confirm the change\r\n]]"
            },
            {
                "body": "Optional[{\r\n    if (btnAnnulla == null) {\r\n        btnAnnulla = new JButton();\r\n        btnAnnulla.setText(\"Cancel\");\r\n        btnAnnulla.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"Annulla32.png\")));\r\n        btnAnnulla.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n        btnAnnulla.setVisible(false);\r\n        btnAnnulla.addActionListener(new ActionListener() {\r\n\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                if (bc == null) {\r\n                    Component[] components = datiBC.getComponents();\r\n                    for (Component current : components) {\r\n                        if (current instanceof JTextComponent) {\r\n                            ((JTextComponent) current).setText(\"\");\r\n                        } else if (current instanceof JComboBox) {\r\n                            JComboBox combo = (JComboBox) current;\r\n                            combo.setSelectedIndex(-1);\r\n                        }\r\n                    }\r\n                    pannelloTag.azzera();\r\n                    descrizioneBC.setText(\"\");\r\n                } else {\r\n                    caricaDatiForm();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return btnAnnulla;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnAnnulla()",
                "comments": "Optional[/**\r\n * This method initializes the button to clear the form (well again\r\n * Culture) or reload the data of the cultural (change data).\r\n *\r\n * @return javax.swing.JButton - the button above.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (bc == null) {\r\n        Component[] components = datiBC.getComponents();\r\n        for (Component current : components) {\r\n            if (current instanceof JTextComponent) {\r\n                ((JTextComponent) current).setText(\"\");\r\n            } else if (current instanceof JComboBox) {\r\n                JComboBox combo = (JComboBox) current;\r\n                combo.setSelectedIndex(-1);\r\n            }\r\n        }\r\n        pannelloTag.azzera();\r\n        descrizioneBC.setText(\"\");\r\n    } else {\r\n        caricaDatiForm();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void actionPerformed(ActionEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (btnModificaCommento == null) {\r\n        btnModificaCommento = new JButton();\r\n        btnModificaCommento.setText(\"Edit Comment\");\r\n        btnModificaCommento.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"modificaCommento.png\")));\r\n        btnModificaCommento.setVisible(false);\r\n        btnModificaCommento.setEnabled(false);\r\n        btnModificaCommento.addActionListener(new ActionListener() {\r\n\r\n            public void actionPerformed(ActionEvent pEvent) {\r\n                int selectedRow = tableFeedback.getSelectedRow();\r\n                String nuovoCommento = (String) JOptionPane.showInternalInputDialog(jContentPane, \"Changing the selected comment:\", \"Edit Comment\", JOptionPane.QUESTION_MESSAGE, new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"modificaCommento.png\")), null, feedbackModel.getValueAt(selectedRow, 1));\r\n                if (nuovoCommento != null) {\r\n                    feedbackModel.modificaCommento(nuovoCommento, selectedRow);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return btnModificaCommento;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnModificaCommento()",
                "comments": "Optional[/**\r\n * This method initializes the button to edit a comment.\r\n *\r\n * @return javax.swing.JButton - the button to edit a comment.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    int selectedRow = tableFeedback.getSelectedRow();\r\n    String nuovoCommento = (String) JOptionPane.showInternalInputDialog(jContentPane, \"Changing the selected comment:\", \"Edit Comment\", JOptionPane.QUESTION_MESSAGE, new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"modificaCommento.png\")), null, feedbackModel.getValueAt(selectedRow, 1));\r\n    if (nuovoCommento != null) {\r\n        feedbackModel.modificaCommento(nuovoCommento, selectedRow);\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void actionPerformed(ActionEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (datiBC == null) {\r\n        datiBC = new JPanel(null);\r\n        datiBC.setBorder(new SoftBevelBorder(SoftBevelBorder.LOWERED));\r\n        // Creation Tips\r\n        for (int i = 0; i < help.length; i++) {\r\n            JLabel newLabel = new JLabel();\r\n            newLabel.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"Info16.png\")));\r\n            newLabel.setBounds(145, 8 + 30 * i, 24, 24);\r\n            newLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\r\n            newLabel.setToolTipText(help[i]);\r\n            suggestions.add(newLabel);\r\n            datiBC.add(newLabel);\r\n            if (i == help.length - 1) {\r\n                newLabel.setBounds(400, 155, 24, 24);\r\n            }\r\n        }\r\n        for (int i = 0; i < txts.length; i++) {\r\n            JLabel newLabel = new JLabel(txts[i], SwingConstants.RIGHT);\r\n            newLabel.setBounds(25, 10 + 30 * i, 120, 16);\r\n            newLabel.repaint();\r\n            datiBC.add(newLabel, null);\r\n        }\r\n        // Name of Cultural Heritage\r\n        nomeBC = new JTextField();\r\n        nomeBC.setColumns(12);\r\n        nomeBC.setDocument(new LimitedDocument(30));\r\n        nomeBC.setBounds(185, 10, 136, 20);\r\n        nomeBC.setName(\"Name Cultural Heritage\");\r\n        datiBC.add(nomeBC, null);\r\n        // Address\r\n        address2 = new JTextField();\r\n        address2.setBounds(270, 40, 136, 20);\r\n        address2.setDocument(new LimitedDocument(30));\r\n        address1 = new JComboBox<>(address);\r\n        address1.setSelectedIndex(-1);\r\n        address1.setBounds(185, 40, 60, 20);\r\n        address2.setName(\"Address\");\r\n        datiBC.add(address2, null);\r\n        datiBC.add(address1, null);\r\n        // City\r\n        cittaBC = new JTextField();\r\n        cittaBC.setColumns(12);\r\n        cittaBC.setBounds(185, 70, 136, 20);\r\n        cittaBC.setName(\"City\");\r\n        cittaBC.setDocument(new OnlyCharactersDocument(25));\r\n        datiBC.add(cittaBC);\r\n        // Location\r\n        localitaBC = new JTextField();\r\n        localitaBC.setBounds(185, 100, 136, 20);\r\n        localitaBC.setName(\"Locality\");\r\n        localitaBC.setDocument(new OnlyCharactersDocument(25));\r\n        datiBC.add(localitaBC, null);\r\n        // CAP\r\n        capBC = new JTextField();\r\n        capBC.setColumns(8);\r\n        capBC.setBounds(185, 130, 92, 20);\r\n        capBC.setDocument(new NumericDocument(5));\r\n        datiBC.add(capBC, null);\r\n        // Geographical Location\r\n        JLabel txtX = new JLabel(\"X\");\r\n        JLabel txtY = new JLabel(\"Y\");\r\n        JLabel txtZ = new JLabel(\"Z\");\r\n        Font fonts = new Font(\"Dialog\", Font.BOLD, 14);\r\n        txtX.setFont(fonts);\r\n        txtY.setFont(fonts);\r\n        txtZ.setFont(fonts);\r\n        txtZ.setBounds(365, 190, 10, 22);\r\n        txtY.setBounds(295, 190, 10, 22);\r\n        txtX.setBounds(227, 190, 14, 20);\r\n        posGeoX = new JTextField(12);\r\n        posGeoX.setBounds(185, 190, 40, 20);\r\n        posGeoY = new JTextField(12);\r\n        posGeoY.setBounds(255, 190, 40, 20);\r\n        posGeoZ = new JTextField(12);\r\n        posGeoZ.setBounds(325, 190, 40, 20);\r\n        posGeoX.setName(\"X-coordinate\");\r\n        posGeoY.setName(\"Y coordinate\");\r\n        posGeoZ.setName(\"Z coordinate\");\r\n        datiBC.add(txtX, null);\r\n        datiBC.add(txtY, null);\r\n        datiBC.add(txtZ, null);\r\n        datiBC.add(posGeoX, null);\r\n        datiBC.add(posGeoY, null);\r\n        datiBC.add(posGeoZ, null);\r\n        // State\r\n        provBC = new JComboBox<>(province);\r\n        provBC.setSelectedIndex(-1);\r\n        provBC.setBounds(185, 160, 50, 20);\r\n        datiBC.add(provBC, null);\r\n        // Description\r\n        descrizioneBC = new JTextArea();\r\n        descrizioneBC.setCursor(new Cursor(Cursor.TEXT_CURSOR));\r\n        descrizioneBC.setWrapStyleWord(true);\r\n        descrizioneBC.setLineWrap(true);\r\n        jScrollPane = new JScrollPane(descrizioneBC);\r\n        jScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\r\n        jScrollPane.setBounds(new Rectangle(185, 370, 395, 69));\r\n        descrizioneBC.setName(\"Description\");\r\n        datiBC.add(jScrollPane, null);\r\n        // Phone\r\n        telefonoBC = new JTextField(12);\r\n        telefonoBC.setBounds(185, 220, 136, 20);\r\n        telefonoBC.setDocument(new NumericDocument(10));\r\n        telefonoBC.setName(\"Phone\");\r\n        datiBC.add(telefonoBC, null);\r\n        // Opening\r\n        oreAP = new JComboBox<>();\r\n        oreAP.setBounds(185, 250, 40, 20);\r\n        oreCH = new JComboBox<>();\r\n        oreCH.setBounds(185, 280, 40, 20);\r\n        for (int i = 0; i < 24; i++) {\r\n            if (i < 10) {\r\n                oreCH.addItem(\"0\" + i);\r\n                oreAP.addItem(\"0\" + i);\r\n            } else {\r\n                oreAP.addItem(i);\r\n                oreCH.addItem(i);\r\n            }\r\n        }\r\n        minAP = new JComboBox<>();\r\n        minAP.setBounds(241, 250, 40, 20);\r\n        minAP.addItem(\"00\");\r\n        minAP.addItem(\"15\");\r\n        minAP.addItem(\"30\");\r\n        minAP.addItem(\"45\");\r\n        minCH = new JComboBox<>();\r\n        minCH.setBounds(241, 280, 40, 20);\r\n        minCH.addItem(\"00\");\r\n        minCH.addItem(\"15\");\r\n        minCH.addItem(\"30\");\r\n        minCH.addItem(\"45\");\r\n        minAP.setSelectedIndex(0);\r\n        oreAP.setSelectedIndex(-1);\r\n        minCH.setSelectedIndex(0);\r\n        oreCH.setSelectedIndex(-1);\r\n        Font newFont = new Font(\"Dialog\", Font.BOLD, 18);\r\n        JLabel punto1 = new JLabel(\":\");\r\n        punto1.setBounds(230, 245, 10, 24);\r\n        punto1.setFont(newFont);\r\n        JLabel punto2 = new JLabel(\":\");\r\n        punto2.setBounds(230, 275, 10, 24);\r\n        punto2.setFont(newFont);\r\n        datiBC.add(oreAP, null);\r\n        datiBC.add(minAP, null);\r\n        datiBC.add(minCH, null);\r\n        datiBC.add(oreCH, null);\r\n        datiBC.add(punto1, null);\r\n        datiBC.add(punto2, null);\r\n        // Closed\r\n        String[] days = { \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\" };\r\n        giornoChiusura = new JComboBox<>(days);\r\n        giornoChiusura.setBounds(185, 310, 96, 20);\r\n        giornoChiusura.setSelectedIndex(-1);\r\n        datiBC.add(giornoChiusura, null);\r\n        // Cost\r\n        costoBC = new JTextField();\r\n        costoBC.setColumns(8);\r\n        costoBC.setBounds(185, 340, 40, 20);\r\n        JLabel euro = new JLabel(\"Euro\");\r\n        euro.setBounds(230, 340, 30, 16);\r\n        datiBC.add(costoBC, null);\r\n        datiBC.add(euro, null);\r\n        // PannelloTag\r\n        pannelloTag = new TagPanel();\r\n        pannelloTag.setBounds(405, 180, 180, 170);\r\n        JLabel txtTag = new JLabel(\"Search Tags\");\r\n        txtTag.setBounds(420, 150, 140, 30);\r\n        datiBC.add(txtTag, null);\r\n        datiBC.add(pannelloTag, null);\r\n    }\r\n    return datiBC;\r\n}]",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "private JPanel getDatiBCForm()",
                "comments": "Optional[/**\r\n * This method initializes the format for the data of a cultural object.\r\n *\r\n * @return javax.swing.JPanel - the form for the data.\r\n */\r\n]",
                "innerComments": "Optional[[// Creation Tips\r\n, // Name of Cultural Heritage\r\n, // Address\r\n, // City\r\n, // Location\r\n, // CAP\r\n, // Geographical Location\r\n, // State\r\n, // Description\r\n, // Phone\r\n, // Opening\r\n, // Closed\r\n, // Cost\r\n, // PannelloTag\r\n]]"
            },
            {
                "body": "Optional[{\r\n    if (statistics == null) {\r\n        statistics = new JPanel(new GridBagLayout());\r\n        GridBagConstraints g = new GridBagConstraints();\r\n        g.gridx = 0;\r\n        g.gridy = 0;\r\n        g.insets = new Insets(5, 5, 5, 5);\r\n        g.anchor = GridBagConstraints.WEST;\r\n        JLabel stat = new JLabel(\"Statistics\");\r\n        Font newFonts = new Font(\"Dialog\", Font.BOLD, 18);\r\n        stat.setFont(newFonts);\r\n        statistics.add(stat, g);\r\n        g.gridx = 1;\r\n        txtNomeBene = new JLabel();\r\n        txtNomeBene.setFont(newFonts);\r\n        statistics.add(txtNomeBene, g);\r\n        g.gridx = 2;\r\n        mediaVotoBC = new JLabel();\r\n        statistics.add(mediaVotoBC, g);\r\n        g.gridwidth = 3;\r\n        g.gridx = 0;\r\n        g.anchor = GridBagConstraints.CENTER;\r\n        g.gridy = 1;\r\n        statistics.add(getStatMeseCorrente(), g);\r\n        g.gridy = 2;\r\n        statistics.add(getStatTotali(), g);\r\n    }\r\n    return statistics;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getStatistiche()",
                "comments": "Optional[/**\r\n * This method initializes the statistics of a container panel\r\n * Cultural.\r\n *\r\n * @return javax.swing.JPanel - the panel statistics.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (feedback == null) {\r\n        feedback = new JPanel();\r\n        feedback.setLayout(new BorderLayout());\r\n        feedbackModel = new FeedBackTableModel();\r\n        tableFeedback = new JTable(feedbackModel);\r\n        TableColumn aColumn = tableFeedback.getColumnModel().getColumn(0);\r\n        // Rating\r\n        aColumn.setPreferredWidth(80);\r\n        aColumn.setCellRenderer(new MediaVotiRenderer());\r\n        // Comment\r\n        aColumn = tableFeedback.getColumnModel().getColumn(1);\r\n        aColumn.setPreferredWidth(260);\r\n        // Release Date\r\n        aColumn = tableFeedback.getColumnModel().getColumn(2);\r\n        aColumn.setPreferredWidth(80);\r\n        // Username\r\n        aColumn = tableFeedback.getColumnModel().getColumn(3);\r\n        aColumn.setPreferredWidth(80);\r\n        tableFeedback.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        tableFeedback.setColumnSelectionAllowed(false);\r\n        ListSelectionModel selectionModel = tableFeedback.getSelectionModel();\r\n        selectionModel.addListSelectionListener(new ListSelectionListener() {\r\n\r\n            public void valueChanged(ListSelectionEvent event) {\r\n                btnModificaCommento.setEnabled(tableFeedback.getSelectedRow() != -1);\r\n            }\r\n        });\r\n        scrollPaneFeedback = new JScrollPane(tableFeedback);\r\n        scrollPaneFeedback.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\r\n        feedback.add(scrollPaneFeedback, BorderLayout.CENTER);\r\n    }\r\n    return feedback;\r\n}]",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "private JPanel getFeedback()",
                "comments": "Optional[/**\r\n * This method initializes the panel to display feedback\r\n * Received from a cultural object.\r\n *\r\n * @return javax.swing.JPanel - the panel of feedback.\r\n */\r\n]",
                "innerComments": "Optional[[// Rating\r\n, // Comment\r\n, // Release Date\r\n, // Username\r\n]]"
            },
            {
                "body": "Optional[{\r\n    btnModificaCommento.setEnabled(tableFeedback.getSelectedRow() != -1);\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public void valueChanged(ListSelectionEvent)",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (statMeseCorrente == null) {\r\n        statMeseCorrente = new JPanel();\r\n        statMeseCorrente.setLayout(new GridBagLayout());\r\n        statMeseCorrente.setPreferredSize(new Dimension(500, 280));\r\n        statMeseCorrente.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(51, 102, 255), 3), \"Statistics Current Month\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(0, 102, 204)));\r\n        statMeseCorrente.setBackground(Color.white);\r\n        statMeseC = new JLabel[6];\r\n        GridBagConstraints g = new GridBagConstraints();\r\n        g.gridx = 0;\r\n        g.gridy = 0;\r\n        g.gridwidth = 3;\r\n        g.insets = new Insets(5, 5, 5, 8);\r\n        g.anchor = GridBagConstraints.WEST;\r\n        statMeseCorrente.add(new JLabel(\"Details votes received this month:\"), g);\r\n        g.anchor = GridBagConstraints.CENTER;\r\n        g.gridwidth = 1;\r\n        Font newFonts = new Font(\"Dialog\", Font.BOLD, 16);\r\n        for (int i = 5; i >= 1; i--) {\r\n            int gridX = g.gridx;\r\n            g.gridy++;\r\n            JLabel aLabel = new JLabel(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"star\" + i + \".gif\")), JLabel.CENTER);\r\n            statMeseCorrente.add(aLabel, g);\r\n            g.gridx++;\r\n            statMeseCorrente.add(new JLabel(\"==\"), g);\r\n            g.gridx++;\r\n            g.anchor = GridBagConstraints.EAST;\r\n            statMeseC[i - 1] = new JLabel();\r\n            statMeseC[i - 1].setFont(newFonts);\r\n            statMeseCorrente.add(statMeseC[i - 1], g);\r\n            g.gridx = gridX;\r\n            g.anchor = GridBagConstraints.CENTER;\r\n        }\r\n        g.gridy = 6;\r\n        g.anchor = GridBagConstraints.WEST;\r\n        g.gridwidth = 2;\r\n        g.gridx = 0;\r\n        statMeseCorrente.add(new JLabel(\"Number of ratings released this month:\"), g);\r\n        statMeseC[5] = new JLabel();\r\n        statMeseC[5].setFont(new Font(\"Dialog\", Font.BOLD, 18));\r\n        g.gridx = 2;\r\n        g.gridwidth = 1;\r\n        statMeseCorrente.add(statMeseC[5], g);\r\n    }\r\n    return statMeseCorrente;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getStatMeseCorrente()",
                "comments": "Optional[/**\r\n * This method initializes the panel of statistics for the current month.\r\n *\r\n * @return javax.swing.JPanel - the panel of statistics for the current month.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (statTotali == null) {\r\n        statTotali = new JPanel();\r\n        statTotali.setLayout(new GridBagLayout());\r\n        statTotali.setPreferredSize(new Dimension(500, 280));\r\n        statTotali.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(51, 102, 255), 3), \"Statistics Total\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(0, 102, 204)));\r\n        statTotali.setBackground(Color.white);\r\n        statt = new JLabel[6];\r\n        GridBagConstraints g = new GridBagConstraints();\r\n        g.gridx = 0;\r\n        g.gridy = 0;\r\n        g.gridwidth = 3;\r\n        g.insets = new Insets(5, 5, 5, 8);\r\n        g.anchor = GridBagConstraints.WEST;\r\n        statTotali.add(new JLabel(\"Details votes received this month:\"), g);\r\n        g.anchor = GridBagConstraints.CENTER;\r\n        g.gridwidth = 1;\r\n        Font newFonts = new Font(\"Dialog\", Font.BOLD, 16);\r\n        for (int i = 5; i >= 1; i--) {\r\n            int gridX = g.gridx;\r\n            g.gridy++;\r\n            JLabel aLabel = new JLabel(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/images/star\" + i + \".gif\")), JLabel.CENTER);\r\n            statTotali.add(aLabel, g);\r\n            g.gridx++;\r\n            statTotali.add(new JLabel(\"==\"), g);\r\n            g.gridx++;\r\n            g.anchor = GridBagConstraints.EAST;\r\n            statt[i - 1] = new JLabel();\r\n            statt[i - 1].setFont(newFonts);\r\n            statTotali.add(statt[i - 1], g);\r\n            g.gridx = gridX;\r\n            g.anchor = GridBagConstraints.CENTER;\r\n        }\r\n        g.gridy = 6;\r\n        g.anchor = GridBagConstraints.WEST;\r\n        g.gridwidth = 2;\r\n        g.gridx = 0;\r\n        statTotali.add(new JLabel(\"Number of ratings released this month:\"), g);\r\n        statt[5] = new JLabel();\r\n        statt[5].setFont(new Font(\"Dialog\", Font.BOLD, 18));\r\n        g.gridx = 2;\r\n        g.gridwidth = 1;\r\n        statTotali.add(statt[5], g);\r\n    }\r\n    return statTotali;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getStatTotali()",
                "comments": "Optional[/**\r\n * This method initializes the panel on the total statistics\r\n * The cultural property.\r\n *\r\n * @return javax.swing.JPanel - the panel statistics totals.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    BeanBeneCulturale newBC = new BeanBeneCulturale();\r\n    newBC.setNome(nomeBC.getText());\r\n    newBC.setDescrizione(descrizioneBC.getText());\r\n    newBC.setCap(capBC.getText());\r\n    newBC.setCostoBiglietto(Double.parseDouble(costoBC.getText()));\r\n    newBC.setGiornoChiusura((String) giornoChiusura.getSelectedItem());\r\n    newBC.setTelefono(telefonoBC.getText());\r\n    newBC.setCitta(cittaBC.getText());\r\n    newBC.setLocalita(localitaBC.getText());\r\n    // Date (int year, int month, int date, int hrs, int min)\r\n    Date orarioAP = new Date(0, 0, 0, oreAP.getSelectedIndex(), minAP.getSelectedIndex());\r\n    Date orarioCH = new Date(0, 0, 0, oreCH.getSelectedIndex(), minCH.getSelectedIndex());\r\n    newBC.setOrarioApertura(orarioAP);\r\n    newBC.setOrarioChiusura(orarioCH);\r\n    newBC.setProvincia((String) provBC.getSelectedItem());\r\n    newBC.setVia(((String) address1.getSelectedItem()) + \" \" + address2.getText());\r\n    Punto3D position = new Punto3D(Double.parseDouble(posGeoX.getText()), Double.parseDouble(posGeoY.getText()), Double.parseDouble(posGeoZ.getText()));\r\n    newBC.setPosizione(position);\r\n    return newBC;\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "private BeanBeneCulturale riversaDatiNelBean()",
                "comments": null,
                "innerComments": "Optional[[// Date (int year, int month, int date, int hrs, int min)\r\n]]"
            },
            {
                "body": "Optional[{\r\n    ArrayList<BeanTag> beanTags = null;\r\n    try {\r\n        beanTags = tags.ottieniTags();\r\n        if (bc != null) {\r\n            idTag = new ArrayList<>();\r\n            ArrayList<BeanTag> tagDaSelezionare = gestioneBC.ottieniTagBeneCulturale(bc.getId());\r\n            for (BeanTag b : tagDaSelezionare) {\r\n                idTag.add(b.getId());\r\n            }\r\n        }\r\n    } catch (RemoteException e) {\r\n        e.printStackTrace();\r\n    } finally {\r\n        for (BeanTag b : beanTags) {\r\n            pannelloTag.insertTag(b);\r\n        }\r\n        if (idTag != null) {\r\n            pannelloTag.setSelectedTags(idTag);\r\n        }\r\n        pannelloTag.repaint();\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "private void caricaTags()",
                "comments": null,
                "innerComments": null
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    super(\"New Cultural Heritage\");\r\n    setFrameIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"nuovoBC.png\")));\r\n    setClosable(true);\r\n    setResizable(false);\r\n    setIconifiable(true);\r\n    setSize(600, 560);\r\n    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);\r\n    suggestions = new Vector<>();\r\n    parent = pParent;\r\n    bc = null;\r\n    // Initialize the content pane\r\n    jContentPane = new JPanel();\r\n    jContentPane.setLayout(new BorderLayout());\r\n    jContentPane.add(getToolbarSchedaBC(), BorderLayout.CENTER);\r\n    jTabbedPane = new JTabbedPane();\r\n    jTabbedPane.addTab(\"Data Cultural Heritage\", new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"dati.png\")), getDatiBCForm(), null);\r\n    jContentPane.add(jTabbedPane, BorderLayout.CENTER);\r\n    setContentPane(jContentPane);\r\n    // Dialog closure to close the entry window.\r\n    addInternalFrameListener(new InternalFrameAdapter() {\r\n\r\n        public void internalFrameOpened(InternalFrameEvent pEvent) {\r\n            JInternalFrame frame = (JInternalFrame) pEvent.getInternalFrame();\r\n            // Setting up of remote objects for the management of cultural heritage.\r\n            try {\r\n                Registry reg = LocateRegistry.getRegistry(Home.HOST);\r\n                tags = (IGestioneTagComune) reg.lookup(\"GestioneTagComune\");\r\n                gestioneBC = (IGestioneBeniCulturaliAgenzia) reg.lookup(\"GestioneBeniCulturaliAgenzia\");\r\n                // Load data.\r\n                caricaTags();\r\n            } catch (Exception ex) {\r\n                JLabel error = new JLabel(\"<html> <h2> Unable to communicate with the server eTour. </h2>\" + \"<h3> <u> Card for entering a new cultural asset will be closed. </u> </h3>\" + \"<p> <b> Possible Causes: </b>\" + \"<ul> <li> No connection to the network. </li>\" + \"<li> Server inactive. </li>\" + \"<li> Server clogged. </li> </ul>\" + \"<p> Please try again later. </p>\" + \"<p> If the error persists, please contact technical support. </p>\" + \"<p> We apologize for the inconvenience. </html>\");\r\n                ImageIcon err = new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"error48.png\"));\r\n                JOptionPane.showMessageDialog(frame, error, \"Error!\", JOptionPane.ERROR_MESSAGE, err);\r\n                frame.dispose();\r\n            }\r\n        }\r\n\r\n        public void internalFrameClosing(InternalFrameEvent pEvent) {\r\n            JPanel root = new JPanel(new BorderLayout());\r\n            JLabel message = new JLabel(\"Are you sure you want to cancel the creation of a new cultural asset?\");\r\n            message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n            JLabel alert = new JLabel(\"Warning! Unsaved data will be lost.\", SwingConstants.CENTER);\r\n            alert.setIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"warning16.png\")));\r\n            root.add(message, BorderLayout.NORTH);\r\n            root.add(alert, BorderLayout.CENTER);\r\n            String[] options = { \"Close\", \"Cancel\" };\r\n            int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Confirm closure\", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, getFrameIcon(), options, options[1]);\r\n            if (choice == JOptionPane.OK_OPTION) {\r\n                parent.closeScheda((SchedaBC) pEvent.getInternalFrame());\r\n            }\r\n        }\r\n    });\r\n    // Initialize button\r\n    btnModifica.setVisible(false);\r\n    btnSalva.setVisible(true);\r\n    btnAnnulla.setVisible(true);\r\n    btnAnnulla.setText(\"Clear\");\r\n}",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "public SchedaBC(Beniculturali)",
                "comments": "Optional[/**\r\n * The default constructor for inclusion of the interface model\r\n * A new cultural object.\r\n */\r\n]",
                "innerComments": "[// Initialize the content pane\r\n, // Dialog closure to close the entry window.\r\n, // Setting up of remote objects for the management of cultural heritage.\r\n, // Load data.\r\n, // Initialize button\r\n]"
            },
            {
                "body": "{\r\n    super();\r\n    setFrameIcon(new ImageIcon(getClass().getResource(Home.URL_IMAGES + \"scheda.png\")));\r\n    setClosable(true);\r\n    setResizable(false);\r\n    setIconifiable(true);\r\n    setSize(600, 560);\r\n    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);\r\n    // Initialize instance variables\r\n    bc = pbc;\r\n    this.parent = pParent;\r\n    suggestions = new Vector<>();\r\n    initializeSchedaBC();\r\n    if (pModifica) {\r\n        // Are we changing the cultural property.\r\n        btnModifica.setSelected(true);\r\n        btnSalva.setVisible(true);\r\n        btnAnnulla.setVisible(true);\r\n        btnAnnulla.setText(\"Reset\");\r\n    } else {\r\n        // We're viewing the tab of a cultural object.\r\n        mostraNascondiSuggerimenti();\r\n        attivaDisattivaEdit();\r\n    }\r\n}",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "public SchedaBC(Beniculturali, BeanBeneCulturale, boolean)",
                "comments": "Optional[/**\r\n * This interface models the manufacturer regarding modification of data and\r\n * Display of the tab of a cultural object.\r\n *\r\n * @param pbc - the bean contains the data of\r\n * Selected cultural.\r\n * @param pModifica <ul> <li> true - the fields will be editable, and then you are\r\n * To amend the data of a cultural object. <li> False - the fields will not be\r\n * Edit, and then you are viewing the tab of a cultural object. </ul>\r\n */\r\n]",
                "innerComments": "[// Initialize instance variables\r\n, // Are we changing the cultural property.\r\n, // We're viewing the tab of a cultural object.\r\n]"
            }
        ],
        "signature": "SchedaBC",
        "variables": [
            "private  static  final String txts",
            "private  static  final String help",
            "private JPanel jContentPane",
            "private JToolBar toolbarSchedaBC",
            "private JToggleButton btnModifica",
            "private JButton btnSalva",
            "private JButton btnAnnulla",
            "private JButton btnModificaCommento",
            "private JTabbedPane jTabbedPane",
            "private JPanel statistics",
            "private JPanel feedback",
            "private JTextField address2",
            "private JComboBox<String> address1",
            "private JTextField cittaBC",
            "private JTextField localitaBC",
            "private JTextField capBC",
            "private JTextField posGeoX",
            "private JScrollPane jScrollPane",
            "private JTextArea descrizioneBC",
            "private JTextField telefonoBC",
            "private JComboBox<String> oreAP",
            "private JComboBox<String> minAP",
            "private TagPanel pannelloTag",
            "private JTextField costoBC",
            "private JComboBox<String> oreCH",
            "private JComboBox<String> minCH",
            "private JComboBox<String> provBC",
            "private JPanel datiBC",
            "private JTextField nomeBC",
            "private JScrollPane scrollPaneFeedback",
            "private JTable tableFeedback",
            "private JLabel txtNomeBene",
            "private JLabel mediaVotoBC",
            "private JPanel statMeseCorrente",
            "private JPanel statTotali",
            "private JTextField posGeoY",
            "private JTextField posGeoZ",
            "private Vector<JLabel> suggestions",
            "private BeanBeneCulturale bc",
            "private JComboBox<String> giornoChiusura",
            "private JLabel statMeseC",
            "private JLabel statt",
            "private Beniculturali parent",
            "private FeedBackTableModel feedbackModel",
            "protected IGestioneTagComune tags",
            "protected IGestioneBeniCulturaliAgenzia gestioneBC",
            "private ArrayList<Integer> idTag"
        ]
    }
]