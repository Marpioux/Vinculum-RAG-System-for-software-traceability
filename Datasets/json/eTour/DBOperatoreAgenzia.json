[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    // Connect to database\r\n    Connection conn = null;\r\n    // Statement for running queries\r\n    Statement stat = null;\r\n    // Result set where the output of the query is inserted\r\n    ResultSet result = null;\r\n    // Try block which performs the query and the database connection\r\n    try {\r\n        // You get the database connection from the pool\r\n        conn = DBConnessionePool.ottieniConnessione();\r\n        // Create the statement\r\n        stat = conn.createStatement();\r\n        // Query\r\n        String query = \"SELECT * FROM operatoreagenzia WHERE Username = '\" + pUsername + \"'\";\r\n        result = stat.executeQuery(query);\r\n        BeanOperatoreAgenzia oa = null;\r\n        if (result.next()) {\r\n            // Build the bean when the query returns a value\r\n            oa = new BeanOperatoreAgenzia();\r\n            oa.setId(result.getInt(\"Id\"));\r\n            oa.setUsername(result.getString(\"Username\"));\r\n            oa.setNome(result.getString(\"Name\"));\r\n            oa.setCognome(result.getString(\"Surname\"));\r\n            oa.setPassword(result.getString(\"Password\"));\r\n        }\r\n        return oa;\r\n    } finally {\r\n        // Finally block that contains the instructions to close the connections\r\n        // Hyenas run in any case\r\n        // This closes the result set only if the query was made\r\n        if (result != null) {\r\n            result.close();\r\n        }\r\n        // This closes the statement if opened\r\n        if (stat != null) {\r\n            stat.close();\r\n        }\r\n        // It returns the connection to the pool if opened\r\n        if (conn != null) {\r\n            DBConnessionePool.rilasciaConnessione(conn);\r\n        }\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public BeanOperatoreAgenzia ottieniOperatoreAgenzia(String)",
                "comments": null,
                "innerComments": "Optional[[// Connect to database\r\n, // Statement for running queries\r\n, // Result set where the output of the query is inserted\r\n, // Try block which performs the query and the database connection\r\n, // You get the database connection from the pool\r\n, // Create the statement\r\n, // Query\r\n, // Build the bean when the query returns a value\r\n, // Finally block that contains the instructions to close the connections\r\n, // Hyenas run in any case\r\n, // This closes the result set only if the query was made\r\n, // This closes the statement if opened\r\n, // It returns the connection to the pool if opened\r\n]]",
                "generated_comment": "/**\n * Retrieves an operator agency bean from the database based on the provided username.\n * \n * @param pUsername the username of the operator agency to retrieve\n * @return the operator agency bean with the specified username, or null if not found\n * @throws SQLException if an error occurs while accessing the database\n */\npublic BeanOperatoreAgenzia ottieniOperatoreAgenzia(String pUsername) {\n    // Connect to database\n    Connection conn = null;\n    // Statement for running queries\n    Statement stat = null;\n    // Result set where the output of the query is inserted\n    ResultSet result = null;\n    // Try block which performs the query and the database connection\n    try {\n        // You get the database connection from the pool\n        conn = DBConnessionePool.ottieniConnessione();\n        // Create the statement\n        stat = conn.createStatement();\n        // Query\n        String query = \"SELECT * FROM operatoreagenzia WHERE Username = '\" + pUsername + \"'\";\n        result = stat.executeQuery(query);\n        BeanOperatoreAgenzia oa = null;\n        if (result.next()) {\n            // Build the bean when the query returns a value\n            oa = new BeanOperatoreAgenzia();\n            oa.setId(result.getInt(\"Id\"));\n            oa.setUsername(result.getString(\"Username\"));\n            oa.setNome(result.getString(\"Name\"));\n            oa.setCognome(result.getString(\"Surname\"));\n            oa.setPassword(result.getString(\"Password\"));\n        }\n        return oa;\n    } finally {\n        // Finally block that contains the instructions to close the connections\n        // Hyenas run in any case\n        // This closes the result set only if the query was made\n        if (result != null) {\n            result.close();\n        }\n        // This closes the statement if opened\n        if (stat != null) {\n            stat.close();\n        }\n        // It returns the connection to the pool if opened\n        if (conn != null) {\n            DBConnessionePool.rilasciaConnessione(conn);\n        }\n    }\n}\n*/"
            },
            {
                "body": "Optional[{\r\n    // Connect to database\r\n    Connection conn = null;\r\n    // Statement for running queries\r\n    Statement stat = null;\r\n    // Try block which performs the query and the database connection\r\n    try {\r\n        // You get the database connection from the pool\r\n        conn = DBConnessionePool.ottieniConnessione();\r\n        // Create the statement\r\n        stat = conn.createStatement();\r\n        // Query\r\n        String query = \"UPDATE operatoreagenzia SET Password = '\" + poa.getPassword() + \"' WHERE Id = \" + poa.getId();\r\n        // You run the query\r\n        int i = stat.executeUpdate(query);\r\n        return (i == 1);\r\n    } finally {\r\n        // Finally block that contains the instructions to close the connections\r\n        // Hyenas run in any case\r\n        // This closes the statement if opened\r\n        if (stat != null) {\r\n            stat.close();\r\n        }\r\n        // It returns the connection to the pool if opened\r\n        if (conn != null) {\r\n            DBConnessionePool.rilasciaConnessione(conn);\r\n        }\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public boolean modificaPassword(BeanOperatoreAgenzia)",
                "comments": null,
                "innerComments": "Optional[[// Connect to database\r\n, // Statement for running queries\r\n, // Try block which performs the query and the database connection\r\n, // You get the database connection from the pool\r\n, // Create the statement\r\n, // Query\r\n, // You run the query\r\n, // Finally block that contains the instructions to close the connections\r\n, // Hyenas run in any case\r\n, // This closes the statement if opened\r\n, // It returns the connection to the pool if opened\r\n]]",
                "generated_comment": "/**\n * Modifies the password of an operator in the agency.\n * \n * @param poa the BeanOperatoreAgenzia object containing the new password and the operator's ID\n * @return true if the password was successfully updated, false otherwise\n * \n * This method connects to the database, updates the password of the operator with the specified ID,\n * and returns a boolean value indicating whether the update was successful or not. \n * It uses a connection pool to obtain a database connection, creates a statement to execute the update query,\n * and then closes the statement and returns the connection to the pool after the query is executed.\n */"
            }
        ],
        "constructors": [],
        "signature": "DBOperatoreAgenzia",
        "variables": [],
        "generated_class_comment": "/**\n * The DBOperatoreAgenzia class represents a data access object for managing operator agency data in the database.\n * It provides methods to retrieve and modify operator agency information.\n * \n * This class includes methods to retrieve an operator agency bean based on the provided username,\n * and to modify the password of an operator in the agency.\n * \n * The ottieniOperatoreAgenzia method retrieves an operator agency bean from the database based on the provided username.\n * It connects to the database, executes a query to retrieve the operator agency information,\n * and returns the operator agency bean with the specified username, or null if not found.\n * \n * The modificaPassword method modifies the password of an operator in the agency.\n * It connects to the database, updates the password of the operator with the specified ID,\n * and returns a boolean value indicating whether the update was successful or not.\n * \n * This class uses a connection pool to obtain database connections, creates statements to execute queries,\n * and ensures that connections are properly closed after executing queries.\n */"
    }
]