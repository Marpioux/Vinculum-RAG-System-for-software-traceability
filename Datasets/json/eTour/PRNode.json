[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    return id;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public int getID()",
                "comments": "Optional[/**\r\n * Returns the id of the point of comfort for which information\r\n * are stored in this node.\r\n *\r\n * @return int - the id of refreshment.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    id = pid;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public void setID(int)",
                "comments": "Optional[/**\r\n * Stores the id of the refreshment provided input.\r\n *\r\n * @param pid - an ID of an eating place.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    return (String) super.getUserObject();\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public String getName()",
                "comments": "Optional[/**\r\n * Return the name of refreshment.\r\n *\r\n * @return String - the name of refreshment.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (pNome == null || pNome.equals(\"\")) {\r\n        throw new IllegalArgumentException(\"Name of refreshment supplied invalid input.\");\r\n    }\r\n    setUserObject(pNome);\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public void setNome(String)",
                "comments": "Optional[/**\r\n * Stores the name of the refreshment provided input.\r\n *\r\n * @param pNome - the name of a refreshment.\r\n * @throws IllegalArgumentException - if the name provided as input is invalid.\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    super();\r\n}",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public PRNode()",
                "comments": null,
                "innerComments": null
            },
            {
                "body": "{\r\n    super();\r\n    if (pNome == null || pNome.equals(\"\")) {\r\n        throw new IllegalArgumentException(\"Name of refreshment supplied invalid input.\");\r\n    }\r\n    setUserObject(pNome);\r\n    id = pid;\r\n}",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public PRNode(String, int)",
                "comments": "Optional[/**\r\n * Create a node with the name of refreshment and\r\n * your id supplied as parameters.\r\n *\r\n * @param pNome - the name of refreshment.\r\n * @param pid   - the id of refreshment.\r\n * @throws IllegalArgumentException - if the name provided as input is invalid.\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "signature": "PRNode",
        "variables": [
            "private int id"
        ]
    }
]