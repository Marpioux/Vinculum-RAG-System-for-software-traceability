[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    // Variable for the connection\r\n    Connection conn = null;\r\n    // Variable for the query\r\n    Statement stat = null;\r\n    // Variable for the query results\r\n    ResultSet result = null;\r\n    try {\r\n        // Get the connection\r\n        conn = DBConnessionePool.ottieniConnessione();\r\n        // Create the Statement\r\n        stat = conn.createStatement();\r\n        // Query for the extraction of location between the PR and BC\r\n        String query = \"(SELECT DISTINCT Location FROM beneculturale) UNION (SELECT DISTINCT Location FROM puntodiristoro)\";\r\n        // The query is executed\r\n        result = stat.executeQuery(query);\r\n        // List that includes the results obtained\r\n        ArrayList<String> list = new ArrayList<>();\r\n        while (result.next()) {\r\n            // Add to the list the locations obtained\r\n            list.add(result.getString(\"Location\"));\r\n        }\r\n        return list;\r\n    } finally {\r\n        // Always runs and takes care to close the Result, the Statement, and Connection\r\n        if (result != null) {\r\n            result.close();\r\n        }\r\n        if (stat != null) {\r\n            stat.close();\r\n        }\r\n        if (conn != null) {\r\n            DBConnessionePool.rilasciaConnessione(conn);\r\n        }\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public ArrayList<String> ottieniListaLocalita()",
                "comments": null,
                "innerComments": "Optional[[// Variable for the connection\r\n, // Variable for the query\r\n, // Variable for the query results\r\n, // Get the connection\r\n, // Create the Statement\r\n, // Query for the extraction of location between the PR and BC\r\n, // The query is executed\r\n, // List that includes the results obtained\r\n, // Add to the list the locations obtained\r\n, // Always runs and takes care to close the Result, the Statement, and Connection\r\n]]"
            },
            {
                "body": "Optional[{\r\n    // Variable for the connection\r\n    Connection conn = null;\r\n    // Variable for the query\r\n    Statement stat = null;\r\n    // Variable for the query results\r\n    ResultSet result = null;\r\n    try {\r\n        // Get the connection\r\n        conn = DBConnessionePool.ottieniConnessione();\r\n        // Create the Statement\r\n        stat = conn.createStatement();\r\n        // Query to extract the average of the votes of catering outlets according to a Passo\r\n        String query = \"SELECT avg(MediaVoti) AS MediaVoti FROM puntodiristoro WHERE Location = '\" + plocalita + \"'\";\r\n        // The query is executed\r\n        result = stat.executeQuery(query);\r\n        // We extract the results from the result set\r\n        double point = 0.0;\r\n        if (result.next()) {\r\n            point = result.getDouble(\"MediaVoti\");\r\n        }\r\n        // Query to extract the average of the votes of cultural according to a Passo\r\n        query = \"SELECT avg(MediaVoti) AS MediaVoti FROM beneculturale WHERE Location = '\" + plocalita + \"'\";\r\n        // The query is executed\r\n        result = stat.executeQuery(query);\r\n        // We extract the results from the result set\r\n        double good = 0.0;\r\n        if (result.next()) {\r\n            good = result.getDouble(\"MediaVoti\");\r\n        }\r\n        // It returns the average of the refreshment and heritage\r\n        return (good + point) / 2;\r\n    } finally {\r\n        // Always runs and takes care to close the Result, the Statement, and Connection\r\n        if (result != null) {\r\n            result.close();\r\n        }\r\n        if (stat != null) {\r\n            stat.close();\r\n        }\r\n        if (conn != null) {\r\n            DBConnessionePool.rilasciaConnessione(conn);\r\n        }\r\n    }\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public double ottieniMedieVotiLocalita(String)",
                "comments": null,
                "innerComments": "Optional[[// Variable for the connection\r\n, // Variable for the query\r\n, // Variable for the query results\r\n, // Get the connection\r\n, // Create the Statement\r\n, // Query to extract the average of the votes of catering outlets according to a Passo\r\n, // The query is executed\r\n, // We extract the results from the result set\r\n, // Query to extract the average of the votes of cultural according to a Passo\r\n, // The query is executed\r\n, // We extract the results from the result set\r\n, // It returns the average of the refreshment and heritage\r\n, // Always runs and takes care to close the Result, the Statement, and Connection\r\n]]"
            }
        ],
        "constructors": [
            {
                "body": "{\r\n}",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public DBStatisticheLocalita()",
                "comments": "Optional[// Empty constructor\r\n]",
                "innerComments": null
            }
        ],
        "signature": "DBStatisticheLocalita",
        "variables": []
    }
]