[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    // Check if the string username and password\r\n    if (ControlloDati.controllaStringa(pUsername, true, true, \"_-\", null, 6, 12) && ControlloDati.controllaStringa(pPassword, true, true, \"_-\", null, 5, 12)) {\r\n        try {\r\n            switch(pTipologiaUtente) {\r\n                // If the type is Turista\r\n                case // Assuming VISITORS is replaced with a constant value\r\n                0:\r\n                    // Invoke the method to obtain the Bean del Turista\r\n                    // Given the username\r\n                    bTurista = tourist.ottieniTurista(pUsername);\r\n                    // Check that the Bean is not null and\r\n                    // Passwords match\r\n                    if (bTurista != null && bTurista.getPassword().equals(pPassword)) {\r\n                        return bTurista.getId();\r\n                    }\r\n                // If the type is OP_PUNTO_DI_RISTORO\r\n                case // Assuming OP_PUNTO_DI_RISTORO is replaced with a constant value\r\n                1:\r\n                    // Not implemented was the operational point of\r\n                    // Refreshment\r\n                    return -1;\r\n                // If not match any known type\r\n                default:\r\n                    return -1;\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n        } catch (Exception e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n        }\r\n    }\r\n    // If the data are incorrect returns -1\r\n    return -1;\r\n}]",
                "hasComment": false,
                "hasInnerComment": true,
                "signature": "public int login(String, String, byte)",
                "comments": null,
                "innerComments": "Optional[[// Check if the string username and password\r\n, // If the type is Turista\r\n, // Invoke the method to obtain the Bean del Turista\r\n, // Check that the Bean is not null and\r\n, // Assuming VISITORS is replaced with a constant value\r\n, // Given the username\r\n, // Passwords match\r\n, // If the type is OP_PUNTO_DI_RISTORO\r\n, // Not implemented was the operational point of\r\n, // Assuming OP_PUNTO_DI_RISTORO is replaced with a constant value\r\n, // Refreshment\r\n, // If not match any known type\r\n, // If the data are incorrect returns -1\r\n]]"
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    super();\r\n}",
                "hasComment": false,
                "hasInnerComment": false,
                "signature": "public Authentication()",
                "comments": null,
                "innerComments": null
            }
        ],
        "signature": "Authentication",
        "variables": [
            "private  static  final long serialVersionUID",
            "private DBTurista tourist",
            "private BeanTurista bTurista"
        ]
    }
]