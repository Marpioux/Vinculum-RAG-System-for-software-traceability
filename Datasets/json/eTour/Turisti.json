[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    super(\"Tourists\");\r\n    setPreferredSize(new Dimension(700, 480));\r\n    setFrameIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/Turisti.png\")));\r\n    setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE);\r\n    setClosable(true);\r\n    setResizable(true);\r\n    setIconifiable(true);\r\n    setMaximizable(true);\r\n    setContentPane(getJContentPane());\r\n    children = new ArrayList<>();\r\n    addInternalFrameListener(new InternalFrameAdapter() {\r\n        public void internalFrameOpened(InternalFrameEvent pEvent) {\r\n            jDesktopPane = pEvent.getInternalFrame().getDesktopPane();\r\n            desktopManager = (DeskManager) jDesktopPane.getDesktopManager();\r\n        }\r\n        public void internalFrameClosing(InternalFrameEvent pEvent) {\r\n            JPanel root = new JPanel(new BorderLayout());\r\n            JLabel message = new JLabel(\"Are you sure you want to close the management of tourists?\");\r\n            message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n            JLabel alert = new JLabel(\"NB will be closed all the windows opened by this administration.\", SwingConstants.CENTER);\r\n            alert.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/warning16.png\")));\r\n            root.add(message, BorderLayout.NORTH);\r\n            root.add(alert, BorderLayout.CENTER);\r\n            String[] options = {\"Close\", \"Cancel\"};\r\n            int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Confirm closure Tourists\", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, getFrameIcon(), options, options[1]);\r\n            if (choice == JOptionPane.OK_OPTION) {\r\n                for (int i = 0; i < children.size(); i++) {\r\n                    children.get(i).dispose();\r\n                }\r\n                pEvent.getInternalFrame().dispose();\r\n            }\r\n        }\r\n    });\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public Tourists()",
                "comments": "Optional[/**\r\n * This is the default constructor.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == jContentPane) {\r\n        jContentPane = new JPanel();\r\n        jContentPane.setLayout(new BorderLayout());\r\n        jContentPane.add(getToolbarTuristi(), BorderLayout.NORTH);\r\n        jContentPane.add(getRightPanel(), BorderLayout.EAST);\r\n        jContentPane.add(getScrollTableTuristi(), BorderLayout.CENTER);\r\n    }\r\n    return jContentPane;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getJContentPane()",
                "comments": "Optional[/**\r\n * This method initializes the internal frame's content pane.\r\n *\r\n * @return javax.swing.JPanel - the content pane.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == toolbarTuristi) {\r\n        toolbarTuristi = new JToolBar();\r\n        toolbarTuristi.setLayout(null);\r\n        toolbarTuristi.setPreferredSize(new Dimension(1, 50));\r\n        toolbarTuristi.setOrientation(JToolBar.HORIZONTAL);\r\n        toolbarTuristi.setFloatable(false);\r\n        toolbarTuristi.add(getBtnAttiva());\r\n        toolbarTuristi.add(getBtnModificaDati());\r\n        toolbarTuristi.add(getBtnVisualizzaScheda());\r\n        toolbarTuristi.add(getBtnElimina());\r\n    }\r\n    return toolbarTuristi;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JToolBar getToolbarTuristi()",
                "comments": "Optional[/**\r\n * This method initializes the toolbar on the management of\r\n * Tourists.\r\n *\r\n * @return javax.swing.JToolBar - the toolbar.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnAttiva) {\r\n        btnAttiva = new JButton();\r\n        btnAttiva.setText(\"Enable <html> <br> region </html>\");\r\n        btnAttiva.setBounds(5, 5, 140, 40);\r\n        btnAttiva.setEnabled(false);\r\n        btnAttiva.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/AttivaTurista32.png\")));\r\n        btnAttiva.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                int selected = tableTuristi.getSelectedRow();\r\n                String[] fields = {\"Name\", \"Surname\", \"Date of Birth\", \"Place of Birth\", \"E-Mail\", \"Phone\", \"Address\", \"CPC\", \"Province\", \"City\"};\r\n                int[] modelReference = {1, 2, 5, 6, 3, 4, 7, 9, 10, 8};\r\n                JPanel datiTurista = new JPanel(new GridBagLayout());\r\n                JPanel rootDialog = new JPanel(new GridBagLayout());\r\n                datiTurista.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(51, 102, 255), 2), \"Tourist Information\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(0, 102, 204)));\r\n                GridBagConstraints g = new GridBagConstraints();\r\n                g.insets = new Insets(5, 5, 5, 5);\r\n                g.anchor = GridBagConstraints.WEST;\r\n                g.gridx = 0;\r\n                g.gridy = 0;\r\n                for (int i = 0; i < fields.length; i++) {\r\n                    datiTurista.add(new JLabel(fields[i]), g);\r\n                    g.gridx++;\r\n                    if (i == 2) { // Date of Birth\r\n                        Date dob = (Date) tableModel.getValueAt(selected, 5);\r\n                        datiTurista.add(new JLabel(Data.toCompact(dob)), g);\r\n                    } else {\r\n                        datiTurista.add(new JLabel(tableModel.getValueAt(selected, modelReference[i]).toString()), g);\r\n                    }\r\n                    g.gridx--;\r\n                    g.gridy++;\r\n                }\r\n                g.gridx = 0;\r\n                g.gridy = 0;\r\n                rootDialog.add(datiTurista, g);\r\n                g.gridy++;\r\n                JLabel txtAttiva = new JLabel();\r\n                rootDialog.add(txtAttiva, g);\r\n                String[] options = new String[2];\r\n                ImageIcon iconDialog;\r\n                options[1] = \"Cancel\";\r\n                String title;\r\n                boolean enabled = (Boolean) tableModel.getValueAt(selected, 0);\r\n                if (enabled) { // The process of decommissioning\r\n                    title = \"Turn off the tourist \" + tableModel.getValueAt(selected, 1) + \" \" + tableModel.getValueAt(selected, 2) + \"?\";\r\n                    options[0] = \"Disable\";\r\n                    txtAttiva.setText(\"Turn off the tourist selected?\");\r\n                    iconDialog = new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/DisattivaTurista48.png\"));\r\n                } else { // The process of activation\r\n                    title = \"Turn on the tourist \" + tableModel.getValueAt(selected, 1) + \" \" + tableModel.getValueAt(selected, 2) + \"?\";\r\n                    options[0] = \"Enable\";\r\n                    txtAttiva.setText(\"Activate the tourists selected?\");\r\n                    iconDialog = new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/AttivaTurista48.png\"));\r\n                }\r\n                txtAttiva.setForeground(Color.red);\r\n                int choice = JOptionPane.showInternalOptionDialog(jContentPane, rootDialog, title, JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, iconDialog, options, options[1]);\r\n                if (choice == JOptionPane.OK_OPTION) {\r\n                    tableModel.setValueAt(!enabled, selected, 0);\r\n                    tableModel.fireTableDataChanged();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return btnAttiva;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnAttiva()",
                "comments": "Optional[/**\r\n * This method initializes the button to activate\r\n * A tourist.\r\n *\r\n * @return javax.swing.JButton - the button.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnModificaDati) {\r\n        btnModificaDati = new JButton();\r\n        btnModificaDati.setText(\"Edit Data <html> <br> region </html>\");\r\n        btnModificaDati.setBounds(155, 5, 140, 40);\r\n        btnModificaDati.setEnabled(false);\r\n        btnModificaDati.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/ModificaTurista32.png\")));\r\n        btnModificaDati.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                // TEST\r\n                Date nuova = new Date();\r\n                nuova.setMonth(12);\r\n                nuova.setDate(30);\r\n                nuova.setYear(82);\r\n                Date nuova2 = new Date();\r\n                nuova2.setMonth(4);\r\n                nuova2.setDate(30);\r\n                nuova2.setYear(107);\r\n                BeanTurista test = new BeanTurista(0, \"mlmlml\", \"Ottabio\", \"of Michil\", \"Ottawa\", \"Frattamaggiore\", \"61616161\", \"84932nd\", \"V.le della Mimosa 33\", \"NA\", \"ottavio_ottawa@wawa.com\", \"micacae\", nuova2, false);\r\n                // TEST\r\n                OpenOffice.orgMessengerMSN(test, true);\r\n            }\r\n        });\r\n    }\r\n    return btnModificaDati;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnModificaDati()",
                "comments": "Optional[/**\r\n * This method initializes the button for changing\r\n * Data of a tourist.\r\n *\r\n * @return javax.swing.JButton - the button.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnVisualizzaScheda) {\r\n        btnVisualizzaScheda = new JButton();\r\n        btnVisualizzaScheda.setText(\"Show <html> <br> tourist profile </html>\");\r\n        btnVisualizzaScheda.setBounds(305, 5, 140, 40);\r\n        btnVisualizzaScheda.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/schedaturista.png\")));\r\n        btnVisualizzaScheda.setEnabled(false);\r\n        btnVisualizzaScheda.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                // TEST\r\n                Date nuova = new Date();\r\n                nuova.setMonth(12);\r\n                nuova.setDate(30);\r\n                nuova.setYear(82);\r\n                Date nuova2 = new Date();\r\n                nuova2.setMonth(4);\r\n                nuova2.setDate(30);\r\n                nuova2.setYear(107);\r\n                BeanTurista test = new BeanTurista(0, \"mlmlml\", \"Ottabio\", \"of Michil\", \"Ottawa\", \"Frattamaggiore\", \"61616161\", \"84932nd\", \"V.le della Mimosa 33\", \"NA\", \"ottavio_ottawa@wawa.com\", \"micacae\", nuova2, false);\r\n                // TEST\r\n                OpenOffice.orgMessengerMSN(test, false);\r\n            }\r\n        });\r\n    }\r\n    return btnVisualizzaScheda;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnVisualizzaScheda()",
                "comments": "Optional[/**\r\n * This method initializes the button to display the\r\n * Board a tourist.\r\n *\r\n * @return javax.swing.JButton - the button.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnElimina) {\r\n        btnElimina = new JButton();\r\n        btnElimina.setText(\"Delete <html> <br> region </html>\");\r\n        btnElimina.setBounds(455, 5, 140, 40);\r\n        btnElimina.setEnabled(false);\r\n        btnElimina.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/EliminaTurista32.png\")));\r\n        btnElimina.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent arg0) {\r\n                int selectedRow = tableTuristi.getSelectedRow();\r\n                if (selectedRow != -1) {\r\n                    String name = (String) tableModel.getValueAt(selectedRow, 1) + \" \" + (String) tableModel.getValueAt(selectedRow, 2);\r\n                    JPanel root = new JPanel(new BorderLayout());\r\n                    JLabel message = new JLabel(\"Are you sure you want to delete the account of the tourist \" + name + \"?\");\r\n                    message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n                    JLabel alert = new JLabel(\"The data account and all personal settings can not be filled again.\", SwingConstants.CENTER);\r\n                    alert.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/warning16.png\")));\r\n                    root.add(message, BorderLayout.NORTH);\r\n                    root.add(alert, BorderLayout.CENTER);\r\n                    String[] options = {\"Delete\", \"Cancel\"};\r\n                    int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Confirm Delete\", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/EliminaTurista48.png\")), options, options[1]);\r\n                    if (choice == JOptionPane.YES_OPTION) {\r\n                        tableModel.removeTurista(selectedRow);\r\n                        tableModel.fireTableDataChanged();\r\n                        JLabel confirm = new JLabel(\"Account Tourists \" + name + \" was deleted.\");\r\n                        confirm.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n                        JOptionPane.showInternalMessageDialog(jContentPane, confirm, \"Accounts Turista out!\", JOptionPane.OK_OPTION, new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/ok32.png\")));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return btnElimina;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnElimina()",
                "comments": "Optional[/**\r\n * This method initializes the delete button for a tourist.\r\n *\r\n * @return javax.swing.JButton - the button.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == scrollTableTuristi) {\r\n        tableModel = new TuristiTableModel();\r\n        // TEST\r\n        Date nuova = new Date();\r\n        nuova.setMonth(12);\r\n        nuova.setDate(30);\r\n        nuova.setYear(82);\r\n        Date nuova2 = new Date();\r\n        nuova2.setMonth(4);\r\n        nuova2.setDate(30);\r\n        nuova2.setYear(107);\r\n        BeanTurista newTurista = new BeanTurista(0, \"mlmlml\", \"Ottabio\", \"of Michil\", \"Ottawa\", \"Frattamaggiore\", \"61616161\", \"84932nd\", \"V.le della Mimosa 33\", \"NA\", \"ottavio_ottawa@wawa.com\", \"micacae\", nuova2, false);\r\n        BeanTurista nuovo2 = new BeanTurista(1, \"mlmlml\", \"Ottabiolino\", \"of Michil\", \"Ottawa\", \"Frattamaggiore\", \"61616161\", \"84932nd\", \"V.le della Mimosa 33\", \"NA\", \"ottavio_ottawa@wawa.com\", \"micacae\", nuova2, true);\r\n        BeanTurista nuovo3 = new BeanTurista(2, \"mlmlml\", \"Ottavio\", \"Michil\", \"Ottawa\", \"Frattamaggiore\", \"61616161\", \"84932nd\", \"V.le Mimose 33\", \"NA\", \"ottavio_ottawa@wawa.com\", \"micacae\", nuova2, false);\r\n        tableModel.insertTurista(newTurista);\r\n        tableModel.insertTurista(nuovo2);\r\n        tableModel.insertTurista(nuovo3);\r\n        for (int i = 0; i < 12; i++) {\r\n            tableModel.insertTurista(newTurista);\r\n        }\r\n        // END TEST\r\n        tableTuristi = new ScrollableTable(tableModel);\r\n        tableTuristi.setAutoCreateColumnsFromModel(true);\r\n        tableTuristi.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        tableTuristi.setSelectionForeground(Color.RED);\r\n        tableTuristi.setSelectionBackground(Color.white);\r\n        tableTuristi.setColumnSelectionAllowed(false);\r\n        tableTuristi.setShowVerticalLines(false);\r\n        tableTuristi.setRowHeight(32);\r\n        // Status\r\n        tableTuristi.getColumnModel().getColumn(0).setPreferredWidth(40);\r\n        tableTuristi.getColumnModel().getColumn(0).setCellRenderer(new AttivazioneTuristaRenderer());\r\n        // Name\r\n        tableTuristi.getColumnModel().getColumn(1).setPreferredWidth(100);\r\n        // Surname\r\n        tableTuristi.getColumnModel().getColumn(2).setPreferredWidth(100);\r\n        // Email\r\n        tableTuristi.getColumnModel().getColumn(3).setPreferredWidth(140);\r\n        // Phone\r\n        tableTuristi.getColumnModel().getColumn(4).setPreferredWidth(80);\r\n        // Date of Birth\r\n        tableTuristi.getColumnModel().getColumn(5).setPreferredWidth(100);\r\n        // City of Birth\r\n        tableTuristi.getColumnModel().getColumn(6).setPreferredWidth(100);\r\n        // Address\r\n        tableTuristi.getColumnModel().getColumn(7).setPreferredWidth(100);\r\n        // Residence\r\n        tableTuristi.getColumnModel().getColumn(8).setPreferredWidth(80);\r\n        // CAP\r\n        tableTuristi.getColumnModel().getColumn(9).setPreferredWidth(60);\r\n        // State\r\n        tableTuristi.getColumnModel().getColumn(10).setPreferredWidth(30);\r\n        // Data entry\r\n        tableTuristi.getColumnModel().getColumn(11).setPreferredWidth(90);\r\n        ListSelectionModel selectionModel = tableTuristi.getSelectionModel();\r\n        selectionModel.addListSelectionListener(new ListSelectionListener() {\r\n            public void valueChanged(ListSelectionEvent event) {\r\n                int selectedRow = tableTuristi.getSelectedRow();\r\n                if (selectedRow != -1) {\r\n                    btnAttiva.setEnabled(true);\r\n                    btnModificaDati.setEnabled(true);\r\n                    btnVisualizzaScheda.setEnabled(true);\r\n                    btnElimina.setEnabled(true);\r\n                    if ((Boolean) tableModel.getValueAt(selectedRow, 0)) {\r\n                        btnAttiva.setText(\"Enable <html> <br> region </html>\");\r\n                        btnAttiva.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/AttivaTurista32.png\")));\r\n                    } else {\r\n                        btnAttiva.setText(\"Disable <html> <br> region </html>\");\r\n                        btnAttiva.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/DisattivaTurista32.png\")));\r\n                    }\r\n                } else {\r\n                    btnElimina.setEnabled(false);\r\n                    btnModificaDati.setEnabled(false);\r\n                    btnAttiva.setEnabled(false);\r\n                    btnVisualizzaScheda.setEnabled(false);\r\n                }\r\n            }\r\n        });\r\n        scrollTableTuristi = new JScrollPane();\r\n        scrollTableTuristi.setViewportView(tableTuristi);\r\n        scrollTableTuristi.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\r\n        scrollTableTuristi.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\r\n    }\r\n    return scrollTableTuristi;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JScrollPane getScrollTableTuristi()",
                "comments": "Optional[/**\r\n * This method initializes the scroll with the table of tourists.\r\n *\r\n * @return javax.swing.JScrollPane - the scroll pane.\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == searchPanel) {\r\n        searchPanel = new JPanel();\r\n        searchPanel.setLayout(new GridBagLayout());\r\n        searchPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(51, 102, 255), 3), \"Research Tourists\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(0, 102, 204)));\r\n        GridBagConstraints g = new GridBagConstraints();\r\n        // Create Panel, choose tourists\r\n        JPanel turisti = new JPanel(new GridBagLayout());\r\n        turisti.setPreferredSize(new Dimension(200, 120));\r\n        turisti.setBorder(BorderFactory.createLoweredBevelBorder());\r\n        turistiAttivati = new JToggleButton(\"active tourists\");\r\n        turistiAttivati.setPreferredSize(new Dimension(165, 30));\r\n        turistiDisattivati = new JToggleButton(\"Tourists Off\");\r\n        turistiDisattivati.setPreferredSize(new Dimension(165, 30));\r\n        turistiAttivati.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/schedaturista24.png\")));\r\n        ActionListener almenoUno = new ActionListener() {\r\n            public void actionPerformed(ActionEvent pEvent) {\r\n                if (pEvent.getSource() == turistiAttivati) {\r\n                    if (!turistiAttivati.isSelected() && !turistiDisattivati.isSelected()) {\r\n                        turistiDisattivati.setSelected(true);\r\n                    }\r\n                } else {\r\n                    if (!turistiAttivati.isSelected() && !turistiDisattivati.isSelected()) {\r\n                        turistiAttivati.setSelected(true);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        turistiAttivati.addActionListener(almenoUno);\r\n        turistiDisattivati.addActionListener(almenoUno);\r\n        turistiAttivati.setSelected(true);\r\n        turistiDisattivati.setSelected(true);\r\n        turistiDisattivati.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/DisattivaTurista24.png\")));\r\n        g.insets = new Insets(8, 8, 8, 8);\r\n        g.gridx = 0;\r\n        g.gridy = 0;\r\n        g.weighty = 0.2;\r\n        g.fill = GridBagConstraints.HORIZONTAL;\r\n        turisti.add(turistiAttivati, g);\r\n        g.gridy++;\r\n        turisti.add(turistiDisattivati, g);\r\n        // Create search panel\r\n        g.gridx = 0;\r\n        g.gridy = 0;\r\n        g.gridwidth = 2;\r\n        g.anchor = GridBagConstraints.CENTER;\r\n        g.fill = GridBagConstraints.NONE;\r\n        g.insets = new Insets(5, 5, 5, 5);\r\n        searchPanel.add(new JLabel(\"Name Turista\"), g);\r\n        cognomeTurista = new JTextField(12);\r\n        g.gridy++;\r\n        searchPanel.add(cognomeTurista, g);\r\n        g.gridy++;\r\n        searchPanel.add(new JLabel(\"View\"), g);\r\n        g.gridy++;\r\n        g.weighty = 0.2;\r\n        g.insets = new Insets(5, 5, 20, 5);\r\n        searchPanel.add(turisti, g);\r\n        g.insets = new Insets(5, 5, 5, 5);\r\n        g.gridwidth = 1;\r\n        g.gridy++;\r\n        searchPanel.add(getBtnRicerca(), g);\r\n        g.gridx = 1;\r\n        searchPanel.add(getBtnAzzera(), g);\r\n    }\r\n    return searchPanel;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getSearchPanel()",
                "comments": "Optional[/**\r\n * This method initializes the form to the search for tourists.\r\n *\r\n * @return javax.swing.JPanel\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == panelHelp) {\r\n        panelHelp = new JPanel();\r\n        panelHelp.setLayout(new BorderLayout());\r\n        panelHelp.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(51, 102, 255), 3), \"Help\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(0, 102, 204)));\r\n        panelHelp.setPreferredSize(new Dimension(200, 100));\r\n        textGuida = new JTextPane();\r\n        textGuida.setOpaque(false);\r\n        textGuida.setContentType(\"text/html\");\r\n        textGuida.setEditable(false);\r\n        textGuida.setOpaque(false);\r\n        panelHelp.add(textGuida, BorderLayout.CENTER);\r\n    }\r\n    return panelHelp;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getPanelHelp()",
                "comments": "Optional[/**\r\n * This method initializes the panel's online help.\r\n *\r\n * @return javax.swing.JPanel\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == rightPanel) {\r\n        rightPanel = new JPanel();\r\n        rightPanel.setLayout(new GridBagLayout());\r\n        GridBagConstraints g = new GridBagConstraints();\r\n        g.gridx = 0;\r\n        g.gridy = 1;\r\n        g.fill = GridBagConstraints.BOTH;\r\n        g.weighty = 0.3;\r\n        rightPanel.add(getPanelHelp(), g);\r\n        g.weighty = 0.7;\r\n        g.gridx = 0;\r\n        g.gridy = 0;\r\n        rightPanel.add(getSearchPanel(), g);\r\n    }\r\n    return rightPanel;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JPanel getRightPanel()",
                "comments": "Optional[/**\r\n * This method initializes the side panel of the interface.\r\n *\r\n * @return javax.swing.JPanel\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnRicerca) {\r\n        btnRicerca = new JButton();\r\n        btnRicerca.setText(\"Search\");\r\n        btnRicerca.setPreferredSize(new Dimension(98, 26));\r\n        btnRicerca.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/Ricerca16.png\")));\r\n    }\r\n    return btnRicerca;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnRicerca()",
                "comments": "Optional[/**\r\n * This method initializes the search button tourists.\r\n *\r\n * @return javax.swing.JButton\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (null == btnAzzera) {\r\n        btnAzzera = new JButton();\r\n        btnAzzera.setText(\"Clear\");\r\n        btnAzzera.setHorizontalTextPosition(SwingConstants.LEADING);\r\n        btnAzzera.setPreferredSize(new Dimension(98, 26));\r\n        btnAzzera.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/Azzera16.png\")));\r\n        btnAzzera.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent pAcEvent) {\r\n                cognomeTurista.setText(\"\");\r\n                turistiAttivati.setSelected(true);\r\n                turistiDisattivati.setSelected(true);\r\n            }\r\n        });\r\n    }\r\n    return btnAzzera;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private JButton getBtnAzzera()",
                "comments": "Optional[/**\r\n * This method initializes the button to reset form\r\n * Search.\r\n *\r\n * @return javax.swing.JButton\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    for (int i = 0; i < children.size(); i++) {\r\n        JInternalFrame current = children.get(i);\r\n        if (pTurista.getId() == current.getId()) {\r\n            desktopManager.activateFrame(current);\r\n            return;\r\n        }\r\n    }\r\n    JInternalFrame newInternalFrame = new JInternalFrame(this, pTurista, pModifica);\r\n    jDesktopPane.add(newInternalFrame, Integer.MAX_VALUE);\r\n    newInternalFrame.setVisible(true);\r\n    children.add(newInternalFrame);\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "private void OpenOffice(org.messenger.MSN(BeanTurista pTurista, boolean pModifica)",
                "comments": "Optional[/**\r\n * This method opens a tab for the bean tourists supplied input.\r\n *\r\n * @param pTurista BeanTurista - the bean tourists\r\n * @param boolean pModifica <ul> <li> true - if you change the data.\r\n *                          <li> false - if you receive the card. </ul>\r\n * @return void\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    children.remove(pScheda);\r\n    pScheda.dispose();\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "protected void closeScheda(JInternalFrame pScheda)",
                "comments": "Optional[/**\r\n * Closes the selected tab.\r\n *\r\n * @param pScheda JInternalFrame - the tab to close.\r\n * @return void\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    tableModel.updateTurista(pTurista);\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "protected void updateTableModel(BeanTurista pTurista)",
                "comments": "Optional[/**\r\n * Update the table model of the tourists with the bean supplied\r\n * Input.\r\n *\r\n * @param pTurista BeanTurista - the bean of the tourist.\r\n * @return void\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    super(\"Tourists\");\r\n    setPreferredSize(new Dimension(700, 480));\r\n    setFrameIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/eTour/gui/operatoreagenzia/images/Turisti.png\")));\r\n    setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE);\r\n    setClosable(true);\r\n    setResizable(true);\r\n    setIconifiable(true);\r\n    setMaximizable(true);\r\n    setContentPane(getJContentPane());\r\n    children = new ArrayList<>();\r\n    addInternalFrameListener(new InternalFrameAdapter() {\r\n        public void internalFrameOpened(InternalFrameEvent pEvent) {\r\n            jDesktopPane = pEvent.getInternalFrame().getDesktopPane();\r\n            desktopManager = (DeskManager) jDesktopPane.getDesktopManager();\r\n        }\r\n        public void internalFrameClosing(InternalFrameEvent pEvent) {\r\n            JPanel root = new JPanel(new BorderLayout());\r\n            JLabel message = new JLabel(\"Are you sure you want to close the management of tourists?\");\r\n            message.setFont(new Font(\"Dialog\", Font.BOLD, 14));\r\n            JLabel alert = new JLabel(\"NB will be closed all the windows opened by this administration.\", SwingConstants.CENTER);\r\n            alert.setIcon(new ImageIcon(getClass().getResource(\"/unisa/gps/etour/gui/operatoreagenzia/images/warning16.png\")));\r\n            root.add(message, BorderLayout.NORTH);\r\n            root.add(alert, BorderLayout.CENTER);\r\n            String[] options = {\"Close\", \"Cancel\"};\r\n            int choice = JOptionPane.showInternalOptionDialog(jContentPane, root, \"Confirm closure Tourists\", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, getFrameIcon(), options, options[1]);\r\n            if (choice == JOptionPane.OK_OPTION) {\r\n                for (int i = 0; i < children.size(); i++) {\r\n                    children.get(i).dispose();\r\n                }\r\n                pEvent.getInternalFrame().dispose();\r\n            }\r\n        }\r\n    });\r\n}",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public Tourists()",
                "comments": "Optional[/**\r\n * This is the default constructor.\r\n */\r\n]",
                "innerComments": null
            }
        ],
        "signature": "Tourists",
        "variables": [
            "private JPanel jContentPane = null",
            "private JToolBar toolbarTuristi = null",
            "private JButton btnModificaDati = null",
            "private JScrollPane scrollTableTuristi = null",
            "private JTable tableTuristi = null",
            "private JPanel searchPanel = null",
            "private JTextField cognomeTurista = null",
            "private JPanel panelHelp = null",
            "private JTextPane textGuida = null",
            "private JPanel rightPanel = null",
            "private JButton btnAttiva",
            "private JButton btnVisualizzaScheda",
            "private JButton btnElimina",
            "private TuristiTableModel tableModel",
            "private JToggleButton turistiDisattivati",
            "private JToggleButton turistiAttivati",
            "private JButton btnAzzera",
            "private JButton btnRicerca",
            "protected DeskManager desktopManager",
            "protected JDesktopPane jDesktopPane",
            "private ArrayList<JInternalFrame> children"
        ]
    }
]
