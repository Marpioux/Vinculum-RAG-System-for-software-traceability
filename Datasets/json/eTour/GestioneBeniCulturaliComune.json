[
    {
        "methods": [
            {
                "body": "Optional[{\r\n    if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID)) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n    }\r\n    BeanBeneCulturale bbc = null;\r\n    try {\r\n        bbc = dbbc.ottieniBeneCulturale(pBeneCulturaleID);\r\n    } catch (SQLException e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n    } catch (Exception e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n    }\r\n    return bbc;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public BeanBeneCulturale ottieniBeneCulturale(int)",
                "comments": "Optional[/**\r\n * Implements the method for obtaining a cultural object by Id\r\n *\r\n * @see unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune#ottieniBeneCulturale(int)\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID)) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n    }\r\n    ArrayList<BeanTag> btag = null;\r\n    try {\r\n        btag = dbtag.ottieniTagBeneCulturale(pBeneCulturaleID);\r\n    } catch (SQLException e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n    } catch (Exception e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n    }\r\n    return btag;\r\n}]",
                "hasComment": true,
                "hasInnerComment": false,
                "signature": "public ArrayList<BeanTag> ottieniTagBeneCulturale(int)",
                "comments": "Optional[/**\r\n * Implements the method for obtaining all the tags of a cultural object.\r\n *\r\n * @see unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune#ottieniTagBeneCulturale(int)\r\n */\r\n]",
                "innerComments": null
            },
            {
                "body": "Optional[{\r\n    if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID)) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n    }\r\n    HashMap<BeanVisitaBC, String> mappaRitorno;\r\n    try {\r\n        // Instantiate the map of the same size as the list of BeanVisitaBC\r\n        mappaRitorno = new HashMap<>(dbvisita.ottieniListaVisitaBC(pBeneCulturaleID).size());\r\n        // For each visit by adding their username\r\n        for (BeanVisitaBC b : dbvisita.ottieniListaVisitaBC(pBeneCulturaleID)) {\r\n            mappaRitorno.put(b, dbturista.ottieniTurista(b.getIdTurista()).getUserName());\r\n        }\r\n    } catch (SQLException e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n    } catch (Exception e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n    }\r\n    return mappaRitorno;\r\n}]",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "public HashMap<BeanVisitaBC, String> ottieniFeedbackBeneCulturale(int)",
                "comments": "Optional[/**\r\n * Implements the method to obtain the list of feedback and their username on a property\r\n * Cultural specified by Id\r\n *\r\n * @see unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune#ottieniFeedbackBeneCulturale(int)\r\n */\r\n]",
                "innerComments": "Optional[[// Instantiate the map of the same size as the list of BeanVisitaBC\r\n, // For each visit by adding their username\r\n]]"
            },
            {
                "body": "Optional[{\r\n    if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID)) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n    }\r\n    ArrayList<Integer> listaRisultati = new ArrayList<>(5);\r\n    // Set all the indices to 0\r\n    for (int i = 0; i < 5; i++) {\r\n        listaRisultati.add(0);\r\n    }\r\n    // Calculate the date for the last thirty days\r\n    Date ultimiTrentaGiorni = new Date(new Date().getTime() - CostantiGlobali.TRENTA_GIORNI);\r\n    try {\r\n        // Get all visits of a certain cultural\r\n        // Loop looking for the requests / feedback obtained within the last thirty days\r\n        for (BeanVisitaBC b : dbvisita.ottieniListaVisitaBC(pBeneCulturaleID)) {\r\n            if (b.getDataVisita().after(ultimiTrentaGiorni)) {\r\n                listaRisultati.set(b.getVoto() - 1, listaRisultati.get(b.getVoto() - 1) + 1);\r\n            }\r\n        }\r\n    } catch (SQLException e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n    } catch (Exception e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n    }\r\n    return listaRisultati;\r\n}]",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "public ArrayList<Integer> ottieniStatisticheBeneCulturale(int)",
                "comments": "Optional[/**\r\n * Implements the method to obtain statistics about a cultural past\r\n * Through Id\r\n *\r\n * @see unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune#ottieniStatisticheBeneCulturale(int)\r\n */\r\n]",
                "innerComments": "Optional[[// Set all the indices to 0\r\n, // Calculate the date for the last thirty days\r\n, // Get all visits of a certain cultural\r\n, // Loop looking for the requests / feedback obtained within the last thirty days\r\n]]"
            },
            {
                "body": "Optional[{\r\n    if (!ControlloBeniCulturali.controllaIdBeneCulturale(pBeneCulturaleID) || !ControlloVisiteBeniCulturali.controllaDatiVisitaBeneCulturale(pBeanVisitaBC)) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DATI);\r\n    }\r\n    // Please check that the vote has not changed.\r\n    // If the vote is changed to an exception is raised\r\n    boolean votoOk = true;\r\n    try {\r\n        votoOk = dbvisita.ottieniVisitaBC(pBeneCulturaleID, pBeanVisitaBC.getIdTurista()).getVoto() == pBeanVisitaBC.getVoto();\r\n    } catch (SQLException e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n    } catch (Exception e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n    }\r\n    // If the vote is not changed we proceed to send the message to the method of\r\n    // Change the layer's database.\r\n    if (votoOk) {\r\n        try {\r\n            return dbvisita.modificaVisitaBC(pBeanVisitaBC);\r\n        } catch (SQLException e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_DBMS);\r\n        } catch (Exception e) {\r\n            throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n        }\r\n    }\r\n    return false;\r\n}]",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "public boolean modificaFeedbackBeneCulturale(int, BeanVisitaBC)",
                "comments": "Optional[/**\r\n * Implement the method for changing a feedback on a cultural past\r\n * Through Id\r\n *\r\n * @see unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune#modificaFeedbackBeneCulturale(int, unisa.gps.etour.bean.BeanVisitaBC)\r\n */\r\n]",
                "innerComments": "Optional[[// Please check that the vote has not changed.\r\n, // If the vote is not changed we proceed to send the message to the method of\r\n, // If the vote is changed to an exception is raised\r\n, // Change the layer's database.\r\n]]"
            }
        ],
        "constructors": [
            {
                "body": "{\r\n    // Class Supercostruttore UnicastRemoteObject\r\n    super();\r\n    // We instantiate objects\r\n    try {\r\n        dbbc = new DBBeneCulturale();\r\n        dbtag = new DBTag();\r\n        dbvisita = new DBVisitaBC();\r\n        dbturista = new DBTurista();\r\n    } catch (Exception e) {\r\n        throw new RemoteException(MessaggiErrore.ERRORE_SCONOSCIUTO);\r\n    }\r\n}",
                "hasComment": true,
                "hasInnerComment": true,
                "signature": "public GestioneBeniCulturaliComune()",
                "comments": "Optional[/**\r\n * Constructor; you instantiate all fields relevant to data management;\r\n * Fields are initialized for each instance of the class.\r\n *\r\n * @throws RemoteException Exception flow\r\n */\r\n]",
                "innerComments": "[// Class Supercostruttore UnicastRemoteObject\r\n, // We instantiate objects\r\n]"
            }
        ],
        "signature": "GestioneBeniCulturaliComune",
        "variables": [
            "protected IDBBeneCulturale dbbc",
            "protected IDBTag dbtag",
            "protected IDBVisitaBC dbvisita",
            "protected IDBTurista dbturista"
        ]
    }
]